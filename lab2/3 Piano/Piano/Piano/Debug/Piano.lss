
Piano.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000d5c  00000dd0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d5c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000dde  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e10  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  00000e50  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001741  00000000  00000000  00000f38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009de  00000000  00000000  00002679  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000bc8  00000000  00000000  00003057  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000128  00000000  00000000  00003c20  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004a0  00000000  00000000  00003d48  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005a2  00000000  00000000  000041e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  0000478a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e5       	ldi	r30, 0x5C	; 92
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 30       	cpi	r26, 0x0E	; 14
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 35 06 	call	0xc6a	; 0xc6a <main>
  8e:	0c 94 ac 06 	jmp	0xd58	; 0xd58 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <c_asecina>:
#include "figuras.h"
#include "hw_pins.h"
#include "sonidos.h"
#include "funciones.h"

void c_asecina(void){
  96:	cf 93       	push	r28
	
	// Canción - Asecina - Los Palmeras
	
	// 1
	play_note_ms(4, 1, CORCHEA);
  98:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  9c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  a0:	56 95       	lsr	r21
  a2:	47 95       	ror	r20
  a4:	61 e0       	ldi	r22, 0x01	; 1
  a6:	84 e0       	ldi	r24, 0x04	; 4
  a8:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
  ac:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  b0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  b4:	56 95       	lsr	r21
  b6:	47 95       	ror	r20
  b8:	56 95       	lsr	r21
  ba:	47 95       	ror	r20
  bc:	60 e0       	ldi	r22, 0x00	; 0
  be:	8b e0       	ldi	r24, 0x0B	; 11
  c0:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
  c4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  c8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  cc:	96 95       	lsr	r25
  ce:	87 95       	ror	r24
  d0:	96 95       	lsr	r25
  d2:	87 95       	ror	r24
  d4:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(11, 0, SEMICORCHEA);
  d8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  dc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  e0:	56 95       	lsr	r21
  e2:	47 95       	ror	r20
  e4:	56 95       	lsr	r21
  e6:	47 95       	ror	r20
  e8:	60 e0       	ldi	r22, 0x00	; 0
  ea:	8b e0       	ldi	r24, 0x0B	; 11
  ec:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
  f0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  f4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  f8:	56 95       	lsr	r21
  fa:	47 95       	ror	r20
  fc:	56 95       	lsr	r21
  fe:	47 95       	ror	r20
 100:	61 e0       	ldi	r22, 0x01	; 1
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
 108:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 10c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 110:	56 95       	lsr	r21
 112:	47 95       	ror	r20
 114:	56 95       	lsr	r21
 116:	47 95       	ror	r20
 118:	60 e0       	ldi	r22, 0x00	; 0
 11a:	8b e0       	ldi	r24, 0x0B	; 11
 11c:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(9, 0, SEMICORCHEA);
 120:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 124:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 128:	56 95       	lsr	r21
 12a:	47 95       	ror	r20
 12c:	56 95       	lsr	r21
 12e:	47 95       	ror	r20
 130:	60 e0       	ldi	r22, 0x00	; 0
 132:	89 e0       	ldi	r24, 0x09	; 9
 134:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
 138:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 13c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 140:	56 95       	lsr	r21
 142:	47 95       	ror	r20
 144:	56 95       	lsr	r21
 146:	47 95       	ror	r20
 148:	60 e0       	ldi	r22, 0x00	; 0
 14a:	8b e0       	ldi	r24, 0x0B	; 11
 14c:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 150:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 154:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 158:	96 95       	lsr	r25
 15a:	87 95       	ror	r24
 15c:	96 95       	lsr	r25
 15e:	87 95       	ror	r24
 160:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	delay_ms_var(CORCHEA);
 164:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 168:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 16c:	96 95       	lsr	r25
 16e:	87 95       	ror	r24
 170:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(11, 0, SEMICORCHEA);
 174:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 178:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 17c:	56 95       	lsr	r21
 17e:	47 95       	ror	r20
 180:	56 95       	lsr	r21
 182:	47 95       	ror	r20
 184:	60 e0       	ldi	r22, 0x00	; 0
 186:	8b e0       	ldi	r24, 0x0B	; 11
 188:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
 18c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 190:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 194:	56 95       	lsr	r21
 196:	47 95       	ror	r20
 198:	56 95       	lsr	r21
 19a:	47 95       	ror	r20
 19c:	61 e0       	ldi	r22, 0x01	; 1
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
 1a4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1a8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1ac:	56 95       	lsr	r21
 1ae:	47 95       	ror	r20
 1b0:	56 95       	lsr	r21
 1b2:	47 95       	ror	r20
 1b4:	60 e0       	ldi	r22, 0x00	; 0
 1b6:	8b e0       	ldi	r24, 0x0B	; 11
 1b8:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(9, 0, SEMICORCHEA);
 1bc:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1c0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1c4:	56 95       	lsr	r21
 1c6:	47 95       	ror	r20
 1c8:	56 95       	lsr	r21
 1ca:	47 95       	ror	r20
 1cc:	60 e0       	ldi	r22, 0x00	; 0
 1ce:	89 e0       	ldi	r24, 0x09	; 9
 1d0:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	
	// 2
	play_note_ms(11, 0, SEMICORCHEA);
 1d4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1d8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1dc:	56 95       	lsr	r21
 1de:	47 95       	ror	r20
 1e0:	56 95       	lsr	r21
 1e2:	47 95       	ror	r20
 1e4:	60 e0       	ldi	r22, 0x00	; 0
 1e6:	8b e0       	ldi	r24, 0x0B	; 11
 1e8:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 1ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1f0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1f4:	96 95       	lsr	r25
 1f6:	87 95       	ror	r24
 1f8:	96 95       	lsr	r25
 1fa:	87 95       	ror	r24
 1fc:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	delay_ms_var(CORCHEA);
 200:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 204:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 208:	96 95       	lsr	r25
 20a:	87 95       	ror	r24
 20c:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	for (uint8_t i = 0; i < 2; i++){
 210:	c0 e0       	ldi	r28, 0x00	; 0
 212:	31 c0       	rjmp	.+98     	; 0x276 <c_asecina+0x1e0>
		play_note_ms(11, 0, SEMICORCHEA);
 214:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 218:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 21c:	56 95       	lsr	r21
 21e:	47 95       	ror	r20
 220:	56 95       	lsr	r21
 222:	47 95       	ror	r20
 224:	60 e0       	ldi	r22, 0x00	; 0
 226:	8b e0       	ldi	r24, 0x0B	; 11
 228:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(0, 1, SEMICORCHEA);
 22c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 230:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 234:	56 95       	lsr	r21
 236:	47 95       	ror	r20
 238:	56 95       	lsr	r21
 23a:	47 95       	ror	r20
 23c:	61 e0       	ldi	r22, 0x01	; 1
 23e:	80 e0       	ldi	r24, 0x00	; 0
 240:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(11, 0, SEMICORCHEA);
 244:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 248:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 24c:	56 95       	lsr	r21
 24e:	47 95       	ror	r20
 250:	56 95       	lsr	r21
 252:	47 95       	ror	r20
 254:	60 e0       	ldi	r22, 0x00	; 0
 256:	8b e0       	ldi	r24, 0x0B	; 11
 258:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
 25c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 260:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 264:	56 95       	lsr	r21
 266:	47 95       	ror	r20
 268:	56 95       	lsr	r21
 26a:	47 95       	ror	r20
 26c:	60 e0       	ldi	r22, 0x00	; 0
 26e:	89 e0       	ldi	r24, 0x09	; 9
 270:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	
	// 2
	play_note_ms(11, 0, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	delay_ms_var(CORCHEA);
	for (uint8_t i = 0; i < 2; i++){
 274:	cf 5f       	subi	r28, 0xFF	; 255
 276:	c2 30       	cpi	r28, 0x02	; 2
 278:	68 f2       	brcs	.-102    	; 0x214 <c_asecina+0x17e>
		play_note_ms(11, 0, SEMICORCHEA);
		play_note_ms(0, 1, SEMICORCHEA);
		play_note_ms(11, 0, SEMICORCHEA);
		play_note_ms(9, 0, SEMICORCHEA);
	}
	play_note_ms(11, 0, SEMICORCHEA);
 27a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 27e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 282:	56 95       	lsr	r21
 284:	47 95       	ror	r20
 286:	56 95       	lsr	r21
 288:	47 95       	ror	r20
 28a:	60 e0       	ldi	r22, 0x00	; 0
 28c:	8b e0       	ldi	r24, 0x0B	; 11
 28e:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 292:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 296:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 29a:	96 95       	lsr	r25
 29c:	87 95       	ror	r24
 29e:	96 95       	lsr	r25
 2a0:	87 95       	ror	r24
 2a2:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(11, 0, CORCHEA);
 2a6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2aa:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2ae:	56 95       	lsr	r21
 2b0:	47 95       	ror	r20
 2b2:	60 e0       	ldi	r22, 0x00	; 0
 2b4:	8b e0       	ldi	r24, 0x0B	; 11
 2b6:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	
	// 3
	play_note_ms(4, 1, CORCHEA);
 2ba:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2be:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2c2:	56 95       	lsr	r21
 2c4:	47 95       	ror	r20
 2c6:	61 e0       	ldi	r22, 0x01	; 1
 2c8:	84 e0       	ldi	r24, 0x04	; 4
 2ca:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
 2ce:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2d2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2d6:	56 95       	lsr	r21
 2d8:	47 95       	ror	r20
 2da:	56 95       	lsr	r21
 2dc:	47 95       	ror	r20
 2de:	60 e0       	ldi	r22, 0x00	; 0
 2e0:	8b e0       	ldi	r24, 0x0B	; 11
 2e2:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 2e6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2ea:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2ee:	96 95       	lsr	r25
 2f0:	87 95       	ror	r24
 2f2:	96 95       	lsr	r25
 2f4:	87 95       	ror	r24
 2f6:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(11, 0, SEMICORCHEA);
 2fa:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2fe:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 302:	56 95       	lsr	r21
 304:	47 95       	ror	r20
 306:	56 95       	lsr	r21
 308:	47 95       	ror	r20
 30a:	60 e0       	ldi	r22, 0x00	; 0
 30c:	8b e0       	ldi	r24, 0x0B	; 11
 30e:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	for (uint8_t i = 0; i < 2; i++){
 312:	c0 e0       	ldi	r28, 0x00	; 0
 314:	31 c0       	rjmp	.+98     	; 0x378 <c_asecina+0x2e2>
		play_note_ms(0, 1, SEMICORCHEA);
 316:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 31a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 31e:	56 95       	lsr	r21
 320:	47 95       	ror	r20
 322:	56 95       	lsr	r21
 324:	47 95       	ror	r20
 326:	61 e0       	ldi	r22, 0x01	; 1
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(11, 0, SEMICORCHEA);
 32e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 332:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 336:	56 95       	lsr	r21
 338:	47 95       	ror	r20
 33a:	56 95       	lsr	r21
 33c:	47 95       	ror	r20
 33e:	60 e0       	ldi	r22, 0x00	; 0
 340:	8b e0       	ldi	r24, 0x0B	; 11
 342:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
 346:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 34a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 34e:	56 95       	lsr	r21
 350:	47 95       	ror	r20
 352:	56 95       	lsr	r21
 354:	47 95       	ror	r20
 356:	60 e0       	ldi	r22, 0x00	; 0
 358:	89 e0       	ldi	r24, 0x09	; 9
 35a:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(11, 0, SEMICORCHEA);
 35e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 362:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 366:	56 95       	lsr	r21
 368:	47 95       	ror	r20
 36a:	56 95       	lsr	r21
 36c:	47 95       	ror	r20
 36e:	60 e0       	ldi	r22, 0x00	; 0
 370:	8b e0       	ldi	r24, 0x0B	; 11
 372:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	// 3
	play_note_ms(4, 1, CORCHEA);
	play_note_ms(11, 0, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	play_note_ms(11, 0, SEMICORCHEA);
	for (uint8_t i = 0; i < 2; i++){
 376:	cf 5f       	subi	r28, 0xFF	; 255
 378:	c2 30       	cpi	r28, 0x02	; 2
 37a:	68 f2       	brcs	.-102    	; 0x316 <c_asecina+0x280>
		play_note_ms(0, 1, SEMICORCHEA);
		play_note_ms(11, 0, SEMICORCHEA);
		play_note_ms(9, 0, SEMICORCHEA);
		play_note_ms(11, 0, SEMICORCHEA);
	}
	delay_ms_var(SEMICORCHEA);
 37c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 380:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 384:	96 95       	lsr	r25
 386:	87 95       	ror	r24
 388:	96 95       	lsr	r25
 38a:	87 95       	ror	r24
 38c:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(11, 0, CORCHEA);
 390:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 394:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 398:	56 95       	lsr	r21
 39a:	47 95       	ror	r20
 39c:	60 e0       	ldi	r22, 0x00	; 0
 39e:	8b e0       	ldi	r24, 0x0B	; 11
 3a0:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	
	// 4
	play_note_ms(3, 1, CORCHEA);
 3a4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 3a8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3ac:	56 95       	lsr	r21
 3ae:	47 95       	ror	r20
 3b0:	61 e0       	ldi	r22, 0x01	; 1
 3b2:	83 e0       	ldi	r24, 0x03	; 3
 3b4:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
 3b8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 3bc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3c0:	56 95       	lsr	r21
 3c2:	47 95       	ror	r20
 3c4:	56 95       	lsr	r21
 3c6:	47 95       	ror	r20
 3c8:	60 e0       	ldi	r22, 0x00	; 0
 3ca:	8b e0       	ldi	r24, 0x0B	; 11
 3cc:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 3d0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 3d4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3d8:	96 95       	lsr	r25
 3da:	87 95       	ror	r24
 3dc:	96 95       	lsr	r25
 3de:	87 95       	ror	r24
 3e0:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(11, 0, SEMICORCHEA);
 3e4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 3e8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 3ec:	56 95       	lsr	r21
 3ee:	47 95       	ror	r20
 3f0:	56 95       	lsr	r21
 3f2:	47 95       	ror	r20
 3f4:	60 e0       	ldi	r22, 0x00	; 0
 3f6:	8b e0       	ldi	r24, 0x0B	; 11
 3f8:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	for (uint8_t i = 0; i < 2; i++){
 3fc:	c0 e0       	ldi	r28, 0x00	; 0
 3fe:	31 c0       	rjmp	.+98     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
		play_note_ms(0, 1, SEMICORCHEA);
 400:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 404:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 408:	56 95       	lsr	r21
 40a:	47 95       	ror	r20
 40c:	56 95       	lsr	r21
 40e:	47 95       	ror	r20
 410:	61 e0       	ldi	r22, 0x01	; 1
 412:	80 e0       	ldi	r24, 0x00	; 0
 414:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(11, 0, SEMICORCHEA);
 418:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 41c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 420:	56 95       	lsr	r21
 422:	47 95       	ror	r20
 424:	56 95       	lsr	r21
 426:	47 95       	ror	r20
 428:	60 e0       	ldi	r22, 0x00	; 0
 42a:	8b e0       	ldi	r24, 0x0B	; 11
 42c:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
 430:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 434:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 438:	56 95       	lsr	r21
 43a:	47 95       	ror	r20
 43c:	56 95       	lsr	r21
 43e:	47 95       	ror	r20
 440:	60 e0       	ldi	r22, 0x00	; 0
 442:	89 e0       	ldi	r24, 0x09	; 9
 444:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(11, 0, SEMICORCHEA);
 448:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 44c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 450:	56 95       	lsr	r21
 452:	47 95       	ror	r20
 454:	56 95       	lsr	r21
 456:	47 95       	ror	r20
 458:	60 e0       	ldi	r22, 0x00	; 0
 45a:	8b e0       	ldi	r24, 0x0B	; 11
 45c:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	// 4
	play_note_ms(3, 1, CORCHEA);
	play_note_ms(11, 0, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	play_note_ms(11, 0, SEMICORCHEA);
	for (uint8_t i = 0; i < 2; i++){
 460:	cf 5f       	subi	r28, 0xFF	; 255
 462:	c2 30       	cpi	r28, 0x02	; 2
 464:	68 f2       	brcs	.-102    	; 0x400 <__EEPROM_REGION_LENGTH__>
		play_note_ms(0, 1, SEMICORCHEA);
		play_note_ms(11, 0, SEMICORCHEA);
		play_note_ms(9, 0, SEMICORCHEA);
		play_note_ms(11, 0, SEMICORCHEA);
	}
	delay_ms_var(SEMICORCHEA);
 466:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 46a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 46e:	96 95       	lsr	r25
 470:	87 95       	ror	r24
 472:	96 95       	lsr	r25
 474:	87 95       	ror	r24
 476:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(11, 0, CORCHEA);
 47a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 47e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 482:	56 95       	lsr	r21
 484:	47 95       	ror	r20
 486:	60 e0       	ldi	r22, 0x00	; 0
 488:	8b e0       	ldi	r24, 0x0B	; 11
 48a:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	
	// 5
	play_note_ms(3, 1, CORCHEA);
 48e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 492:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 496:	56 95       	lsr	r21
 498:	47 95       	ror	r20
 49a:	61 e0       	ldi	r22, 0x01	; 1
 49c:	83 e0       	ldi	r24, 0x03	; 3
 49e:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
 4a2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 4a6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4aa:	56 95       	lsr	r21
 4ac:	47 95       	ror	r20
 4ae:	56 95       	lsr	r21
 4b0:	47 95       	ror	r20
 4b2:	60 e0       	ldi	r22, 0x00	; 0
 4b4:	8b e0       	ldi	r24, 0x0B	; 11
 4b6:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 4ba:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 4be:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4c2:	96 95       	lsr	r25
 4c4:	87 95       	ror	r24
 4c6:	96 95       	lsr	r25
 4c8:	87 95       	ror	r24
 4ca:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(11, 0, SEMICORCHEA);
 4ce:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 4d2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4d6:	56 95       	lsr	r21
 4d8:	47 95       	ror	r20
 4da:	56 95       	lsr	r21
 4dc:	47 95       	ror	r20
 4de:	60 e0       	ldi	r22, 0x00	; 0
 4e0:	8b e0       	ldi	r24, 0x0B	; 11
 4e2:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
 4e6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 4ea:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4ee:	56 95       	lsr	r21
 4f0:	47 95       	ror	r20
 4f2:	56 95       	lsr	r21
 4f4:	47 95       	ror	r20
 4f6:	61 e0       	ldi	r22, 0x01	; 1
 4f8:	80 e0       	ldi	r24, 0x00	; 0
 4fa:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
 4fe:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 502:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 506:	56 95       	lsr	r21
 508:	47 95       	ror	r20
 50a:	56 95       	lsr	r21
 50c:	47 95       	ror	r20
 50e:	60 e0       	ldi	r22, 0x00	; 0
 510:	8b e0       	ldi	r24, 0x0B	; 11
 512:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(9, 0, SEMICORCHEA);
 516:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 51a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 51e:	56 95       	lsr	r21
 520:	47 95       	ror	r20
 522:	56 95       	lsr	r21
 524:	47 95       	ror	r20
 526:	60 e0       	ldi	r22, 0x00	; 0
 528:	89 e0       	ldi	r24, 0x09	; 9
 52a:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, CORCHEA);
 52e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 532:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 536:	56 95       	lsr	r21
 538:	47 95       	ror	r20
 53a:	60 e0       	ldi	r22, 0x00	; 0
 53c:	8b e0       	ldi	r24, 0x0B	; 11
 53e:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(9, 0, SEMICORCHEA);
 542:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 546:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 54a:	56 95       	lsr	r21
 54c:	47 95       	ror	r20
 54e:	56 95       	lsr	r21
 550:	47 95       	ror	r20
 552:	60 e0       	ldi	r22, 0x00	; 0
 554:	89 e0       	ldi	r24, 0x09	; 9
 556:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA),
 55a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 55e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 562:	96 95       	lsr	r25
 564:	87 95       	ror	r24
 566:	96 95       	lsr	r25
 568:	87 95       	ror	r24
 56a:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(7, 0, CORCHEA);
 56e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 572:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 576:	56 95       	lsr	r21
 578:	47 95       	ror	r20
 57a:	60 e0       	ldi	r22, 0x00	; 0
 57c:	87 e0       	ldi	r24, 0x07	; 7
 57e:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(6, 0, SEMICORCHEA);
 582:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 586:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 58a:	56 95       	lsr	r21
 58c:	47 95       	ror	r20
 58e:	56 95       	lsr	r21
 590:	47 95       	ror	r20
 592:	60 e0       	ldi	r22, 0x00	; 0
 594:	86 e0       	ldi	r24, 0x06	; 6
 596:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 59a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 59e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5a2:	96 95       	lsr	r25
 5a4:	87 95       	ror	r24
 5a6:	96 95       	lsr	r25
 5a8:	87 95       	ror	r24
 5aa:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	
	// 6
	play_note_ms(11, 1, CORCHEA);
 5ae:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 5b2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5b6:	56 95       	lsr	r21
 5b8:	47 95       	ror	r20
 5ba:	61 e0       	ldi	r22, 0x01	; 1
 5bc:	8b e0       	ldi	r24, 0x0B	; 11
 5be:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(7, 1, SEMICORCHEA);
 5c2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 5c6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5ca:	56 95       	lsr	r21
 5cc:	47 95       	ror	r20
 5ce:	56 95       	lsr	r21
 5d0:	47 95       	ror	r20
 5d2:	61 e0       	ldi	r22, 0x01	; 1
 5d4:	87 e0       	ldi	r24, 0x07	; 7
 5d6:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 5da:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 5de:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5e2:	96 95       	lsr	r25
 5e4:	87 95       	ror	r24
 5e6:	96 95       	lsr	r25
 5e8:	87 95       	ror	r24
 5ea:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	for (uint8_t i = 0; i < 3; i++){
 5ee:	c0 e0       	ldi	r28, 0x00	; 0
 5f0:	31 c0       	rjmp	.+98     	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
		play_note_ms(7, 1, SEMICORCHEA);
 5f2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 5f6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 5fa:	56 95       	lsr	r21
 5fc:	47 95       	ror	r20
 5fe:	56 95       	lsr	r21
 600:	47 95       	ror	r20
 602:	61 e0       	ldi	r22, 0x01	; 1
 604:	87 e0       	ldi	r24, 0x07	; 7
 606:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(9, 1, SEMICORCHEA);
 60a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 60e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 612:	56 95       	lsr	r21
 614:	47 95       	ror	r20
 616:	56 95       	lsr	r21
 618:	47 95       	ror	r20
 61a:	61 e0       	ldi	r22, 0x01	; 1
 61c:	89 e0       	ldi	r24, 0x09	; 9
 61e:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(7, 1, SEMICORCHEA);
 622:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 626:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 62a:	56 95       	lsr	r21
 62c:	47 95       	ror	r20
 62e:	56 95       	lsr	r21
 630:	47 95       	ror	r20
 632:	61 e0       	ldi	r22, 0x01	; 1
 634:	87 e0       	ldi	r24, 0x07	; 7
 636:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(6, 1, SEMICORCHEA);
 63a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 63e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 642:	56 95       	lsr	r21
 644:	47 95       	ror	r20
 646:	56 95       	lsr	r21
 648:	47 95       	ror	r20
 64a:	61 e0       	ldi	r22, 0x01	; 1
 64c:	86 e0       	ldi	r24, 0x06	; 6
 64e:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	
	// 6
	play_note_ms(11, 1, CORCHEA);
	play_note_ms(7, 1, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	for (uint8_t i = 0; i < 3; i++){
 652:	cf 5f       	subi	r28, 0xFF	; 255
 654:	c3 30       	cpi	r28, 0x03	; 3
 656:	68 f2       	brcs	.-102    	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
		play_note_ms(6, 1, SEMICORCHEA);
	}
	
	
	// 7
	play_note_ms(11, 1, CORCHEA);
 658:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 65c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 660:	56 95       	lsr	r21
 662:	47 95       	ror	r20
 664:	61 e0       	ldi	r22, 0x01	; 1
 666:	8b e0       	ldi	r24, 0x0B	; 11
 668:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(7, 1, SEMICORCHEA);
 66c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 670:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 674:	56 95       	lsr	r21
 676:	47 95       	ror	r20
 678:	56 95       	lsr	r21
 67a:	47 95       	ror	r20
 67c:	61 e0       	ldi	r22, 0x01	; 1
 67e:	87 e0       	ldi	r24, 0x07	; 7
 680:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 684:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 688:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 68c:	96 95       	lsr	r25
 68e:	87 95       	ror	r24
 690:	96 95       	lsr	r25
 692:	87 95       	ror	r24
 694:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(7, 1, SEMICORCHEA);
 698:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 69c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 6a0:	56 95       	lsr	r21
 6a2:	47 95       	ror	r20
 6a4:	56 95       	lsr	r21
 6a6:	47 95       	ror	r20
 6a8:	61 e0       	ldi	r22, 0x01	; 1
 6aa:	87 e0       	ldi	r24, 0x07	; 7
 6ac:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	for (uint8_t i = 0; i < 2; i++){
 6b0:	c0 e0       	ldi	r28, 0x00	; 0
 6b2:	31 c0       	rjmp	.+98     	; 0x716 <__EEPROM_REGION_LENGTH__+0x316>
		play_note_ms(9, 1, SEMICORCHEA);
 6b4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 6b8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 6bc:	56 95       	lsr	r21
 6be:	47 95       	ror	r20
 6c0:	56 95       	lsr	r21
 6c2:	47 95       	ror	r20
 6c4:	61 e0       	ldi	r22, 0x01	; 1
 6c6:	89 e0       	ldi	r24, 0x09	; 9
 6c8:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(7, 1, SEMICORCHEA);
 6cc:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 6d0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 6d4:	56 95       	lsr	r21
 6d6:	47 95       	ror	r20
 6d8:	56 95       	lsr	r21
 6da:	47 95       	ror	r20
 6dc:	61 e0       	ldi	r22, 0x01	; 1
 6de:	87 e0       	ldi	r24, 0x07	; 7
 6e0:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(6, 1, SEMICORCHEA);
 6e4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 6e8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 6ec:	56 95       	lsr	r21
 6ee:	47 95       	ror	r20
 6f0:	56 95       	lsr	r21
 6f2:	47 95       	ror	r20
 6f4:	61 e0       	ldi	r22, 0x01	; 1
 6f6:	86 e0       	ldi	r24, 0x06	; 6
 6f8:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(7, 1, SEMICORCHEA);
 6fc:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 700:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 704:	56 95       	lsr	r21
 706:	47 95       	ror	r20
 708:	56 95       	lsr	r21
 70a:	47 95       	ror	r20
 70c:	61 e0       	ldi	r22, 0x01	; 1
 70e:	87 e0       	ldi	r24, 0x07	; 7
 710:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	// 7
	play_note_ms(11, 1, CORCHEA);
	play_note_ms(7, 1, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	play_note_ms(7, 1, SEMICORCHEA);
	for (uint8_t i = 0; i < 2; i++){
 714:	cf 5f       	subi	r28, 0xFF	; 255
 716:	c2 30       	cpi	r28, 0x02	; 2
 718:	68 f2       	brcs	.-102    	; 0x6b4 <__EEPROM_REGION_LENGTH__+0x2b4>
		play_note_ms(9, 1, SEMICORCHEA);
		play_note_ms(7, 1, SEMICORCHEA);
		play_note_ms(6, 1, SEMICORCHEA);
		play_note_ms(7, 1, SEMICORCHEA);
	}
	delay_ms_var(SEMICORCHEA);
 71a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 71e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 722:	96 95       	lsr	r25
 724:	87 95       	ror	r24
 726:	96 95       	lsr	r25
 728:	87 95       	ror	r24
 72a:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(7, 1, CORCHEA);
 72e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 732:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 736:	56 95       	lsr	r21
 738:	47 95       	ror	r20
 73a:	61 e0       	ldi	r22, 0x01	; 1
 73c:	87 e0       	ldi	r24, 0x07	; 7
 73e:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	
	// 8
	play_note_ms(9, 1, CORCHEA);
 742:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 746:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 74a:	56 95       	lsr	r21
 74c:	47 95       	ror	r20
 74e:	61 e0       	ldi	r22, 0x01	; 1
 750:	89 e0       	ldi	r24, 0x09	; 9
 752:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(6, 1, SEMICORCHEA);
 756:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 75a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 75e:	56 95       	lsr	r21
 760:	47 95       	ror	r20
 762:	56 95       	lsr	r21
 764:	47 95       	ror	r20
 766:	61 e0       	ldi	r22, 0x01	; 1
 768:	86 e0       	ldi	r24, 0x06	; 6
 76a:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 76e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 772:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 776:	96 95       	lsr	r25
 778:	87 95       	ror	r24
 77a:	96 95       	lsr	r25
 77c:	87 95       	ror	r24
 77e:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	for (uint8_t i = 0; i < 2; i++){
 782:	c0 e0       	ldi	r28, 0x00	; 0
 784:	31 c0       	rjmp	.+98     	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
		play_note_ms(6, 1, SEMICORCHEA);
 786:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 78a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 78e:	56 95       	lsr	r21
 790:	47 95       	ror	r20
 792:	56 95       	lsr	r21
 794:	47 95       	ror	r20
 796:	61 e0       	ldi	r22, 0x01	; 1
 798:	86 e0       	ldi	r24, 0x06	; 6
 79a:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(7, 1, SEMICORCHEA);
 79e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 7a2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7a6:	56 95       	lsr	r21
 7a8:	47 95       	ror	r20
 7aa:	56 95       	lsr	r21
 7ac:	47 95       	ror	r20
 7ae:	61 e0       	ldi	r22, 0x01	; 1
 7b0:	87 e0       	ldi	r24, 0x07	; 7
 7b2:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(6, 1, SEMICORCHEA);
 7b6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 7ba:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7be:	56 95       	lsr	r21
 7c0:	47 95       	ror	r20
 7c2:	56 95       	lsr	r21
 7c4:	47 95       	ror	r20
 7c6:	61 e0       	ldi	r22, 0x01	; 1
 7c8:	86 e0       	ldi	r24, 0x06	; 6
 7ca:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
 7ce:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 7d2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7d6:	56 95       	lsr	r21
 7d8:	47 95       	ror	r20
 7da:	56 95       	lsr	r21
 7dc:	47 95       	ror	r20
 7de:	61 e0       	ldi	r22, 0x01	; 1
 7e0:	85 e0       	ldi	r24, 0x05	; 5
 7e2:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	
	// 8
	play_note_ms(9, 1, CORCHEA);
	play_note_ms(6, 1, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	for (uint8_t i = 0; i < 2; i++){
 7e6:	cf 5f       	subi	r28, 0xFF	; 255
 7e8:	c2 30       	cpi	r28, 0x02	; 2
 7ea:	68 f2       	brcs	.-102    	; 0x786 <__EEPROM_REGION_LENGTH__+0x386>
		play_note_ms(6, 1, SEMICORCHEA);
		play_note_ms(7, 1, SEMICORCHEA);
		play_note_ms(6, 1, SEMICORCHEA);
		play_note_ms(5, 1, SEMICORCHEA);
	}
	play_note_ms(6, 1, SEMICORCHEA);
 7ec:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 7f0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7f4:	56 95       	lsr	r21
 7f6:	47 95       	ror	r20
 7f8:	56 95       	lsr	r21
 7fa:	47 95       	ror	r20
 7fc:	61 e0       	ldi	r22, 0x01	; 1
 7fe:	86 e0       	ldi	r24, 0x06	; 6
 800:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 804:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 808:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 80c:	96 95       	lsr	r25
 80e:	87 95       	ror	r24
 810:	96 95       	lsr	r25
 812:	87 95       	ror	r24
 814:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(6, 1, SEMICORCHEA);
 818:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 81c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 820:	56 95       	lsr	r21
 822:	47 95       	ror	r20
 824:	56 95       	lsr	r21
 826:	47 95       	ror	r20
 828:	61 e0       	ldi	r22, 0x01	; 1
 82a:	86 e0       	ldi	r24, 0x06	; 6
 82c:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 830:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 834:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 838:	96 95       	lsr	r25
 83a:	87 95       	ror	r24
 83c:	96 95       	lsr	r25
 83e:	87 95       	ror	r24
 840:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	
	// 9
	play_note_ms(9, 1, CORCHEA);
 844:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 848:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 84c:	56 95       	lsr	r21
 84e:	47 95       	ror	r20
 850:	61 e0       	ldi	r22, 0x01	; 1
 852:	89 e0       	ldi	r24, 0x09	; 9
 854:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(6, 1, SEMICORCHEA);
 858:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 85c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 860:	56 95       	lsr	r21
 862:	47 95       	ror	r20
 864:	56 95       	lsr	r21
 866:	47 95       	ror	r20
 868:	61 e0       	ldi	r22, 0x01	; 1
 86a:	86 e0       	ldi	r24, 0x06	; 6
 86c:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 870:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 874:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 878:	96 95       	lsr	r25
 87a:	87 95       	ror	r24
 87c:	96 95       	lsr	r25
 87e:	87 95       	ror	r24
 880:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	for (uint8_t i = 0; i < 3; i++){
 884:	c0 e0       	ldi	r28, 0x00	; 0
 886:	31 c0       	rjmp	.+98     	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
		play_note_ms(6, 1, SEMICORCHEA);
 888:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 88c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 890:	56 95       	lsr	r21
 892:	47 95       	ror	r20
 894:	56 95       	lsr	r21
 896:	47 95       	ror	r20
 898:	61 e0       	ldi	r22, 0x01	; 1
 89a:	86 e0       	ldi	r24, 0x06	; 6
 89c:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(7, 1, SEMICORCHEA);
 8a0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8a4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8a8:	56 95       	lsr	r21
 8aa:	47 95       	ror	r20
 8ac:	56 95       	lsr	r21
 8ae:	47 95       	ror	r20
 8b0:	61 e0       	ldi	r22, 0x01	; 1
 8b2:	87 e0       	ldi	r24, 0x07	; 7
 8b4:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(6, 1, SEMICORCHEA);
 8b8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8bc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8c0:	56 95       	lsr	r21
 8c2:	47 95       	ror	r20
 8c4:	56 95       	lsr	r21
 8c6:	47 95       	ror	r20
 8c8:	61 e0       	ldi	r22, 0x01	; 1
 8ca:	86 e0       	ldi	r24, 0x06	; 6
 8cc:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
 8d0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8d4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8d8:	56 95       	lsr	r21
 8da:	47 95       	ror	r20
 8dc:	56 95       	lsr	r21
 8de:	47 95       	ror	r20
 8e0:	61 e0       	ldi	r22, 0x01	; 1
 8e2:	85 e0       	ldi	r24, 0x05	; 5
 8e4:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	
	// 9
	play_note_ms(9, 1, CORCHEA);
	play_note_ms(6, 1, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	for (uint8_t i = 0; i < 3; i++){
 8e8:	cf 5f       	subi	r28, 0xFF	; 255
 8ea:	c3 30       	cpi	r28, 0x03	; 3
 8ec:	68 f2       	brcs	.-102    	; 0x888 <__DATA_REGION_LENGTH__+0x88>
		play_note_ms(6, 1, SEMICORCHEA);
		play_note_ms(5, 1, SEMICORCHEA);
	}
	
	// 10
	play_note_ms(0, 1, SEMICORCHEA + CORCHEA);
 8ee:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8f2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8f6:	ac 01       	movw	r20, r24
 8f8:	56 95       	lsr	r21
 8fa:	47 95       	ror	r20
 8fc:	56 95       	lsr	r21
 8fe:	47 95       	ror	r20
 900:	96 95       	lsr	r25
 902:	87 95       	ror	r24
 904:	48 0f       	add	r20, r24
 906:	59 1f       	adc	r21, r25
 908:	61 e0       	ldi	r22, 0x01	; 1
 90a:	80 e0       	ldi	r24, 0x00	; 0
 90c:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
 910:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 914:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 918:	56 95       	lsr	r21
 91a:	47 95       	ror	r20
 91c:	56 95       	lsr	r21
 91e:	47 95       	ror	r20
 920:	61 e0       	ldi	r22, 0x01	; 1
 922:	80 e0       	ldi	r24, 0x00	; 0
 924:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(7, 0, SEMICORCHEA);
 928:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 92c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 930:	56 95       	lsr	r21
 932:	47 95       	ror	r20
 934:	56 95       	lsr	r21
 936:	47 95       	ror	r20
 938:	60 e0       	ldi	r22, 0x00	; 0
 93a:	87 e0       	ldi	r24, 0x07	; 7
 93c:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(9, 0, SEMICORCHEA);
 940:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 944:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 948:	56 95       	lsr	r21
 94a:	47 95       	ror	r20
 94c:	56 95       	lsr	r21
 94e:	47 95       	ror	r20
 950:	60 e0       	ldi	r22, 0x00	; 0
 952:	89 e0       	ldi	r24, 0x09	; 9
 954:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
 958:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 95c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 960:	56 95       	lsr	r21
 962:	47 95       	ror	r20
 964:	56 95       	lsr	r21
 966:	47 95       	ror	r20
 968:	60 e0       	ldi	r22, 0x00	; 0
 96a:	8b e0       	ldi	r24, 0x0B	; 11
 96c:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(2, 1, SEMICORCHEA);
 970:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 974:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 978:	56 95       	lsr	r21
 97a:	47 95       	ror	r20
 97c:	56 95       	lsr	r21
 97e:	47 95       	ror	r20
 980:	61 e0       	ldi	r22, 0x01	; 1
 982:	82 e0       	ldi	r24, 0x02	; 2
 984:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA + CORCHEA);
 988:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 98c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 990:	ac 01       	movw	r20, r24
 992:	56 95       	lsr	r21
 994:	47 95       	ror	r20
 996:	56 95       	lsr	r21
 998:	47 95       	ror	r20
 99a:	96 95       	lsr	r25
 99c:	87 95       	ror	r24
 99e:	48 0f       	add	r20, r24
 9a0:	59 1f       	adc	r21, r25
 9a2:	61 e0       	ldi	r22, 0x01	; 1
 9a4:	80 e0       	ldi	r24, 0x00	; 0
 9a6:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
 9aa:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 9ae:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 9b2:	56 95       	lsr	r21
 9b4:	47 95       	ror	r20
 9b6:	56 95       	lsr	r21
 9b8:	47 95       	ror	r20
 9ba:	61 e0       	ldi	r22, 0x01	; 1
 9bc:	80 e0       	ldi	r24, 0x00	; 0
 9be:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(7, 0, SEMISEMICORCHEA);
 9c2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 9c6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 9ca:	56 95       	lsr	r21
 9cc:	47 95       	ror	r20
 9ce:	56 95       	lsr	r21
 9d0:	47 95       	ror	r20
 9d2:	56 95       	lsr	r21
 9d4:	47 95       	ror	r20
 9d6:	60 e0       	ldi	r22, 0x00	; 0
 9d8:	87 e0       	ldi	r24, 0x07	; 7
 9da:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(8, 0, SEMISEMICORCHEA);
 9de:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 9e2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 9e6:	56 95       	lsr	r21
 9e8:	47 95       	ror	r20
 9ea:	56 95       	lsr	r21
 9ec:	47 95       	ror	r20
 9ee:	56 95       	lsr	r21
 9f0:	47 95       	ror	r20
 9f2:	60 e0       	ldi	r22, 0x00	; 0
 9f4:	88 e0       	ldi	r24, 0x08	; 8
 9f6:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(9, 0, SEMISEMICORCHEA);
 9fa:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 9fe:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 a02:	56 95       	lsr	r21
 a04:	47 95       	ror	r20
 a06:	56 95       	lsr	r21
 a08:	47 95       	ror	r20
 a0a:	56 95       	lsr	r21
 a0c:	47 95       	ror	r20
 a0e:	60 e0       	ldi	r22, 0x00	; 0
 a10:	89 e0       	ldi	r24, 0x09	; 9
 a12:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(10, 0, SEMISEMICORCHEA);
 a16:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 a1a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 a1e:	56 95       	lsr	r21
 a20:	47 95       	ror	r20
 a22:	56 95       	lsr	r21
 a24:	47 95       	ror	r20
 a26:	56 95       	lsr	r21
 a28:	47 95       	ror	r20
 a2a:	60 e0       	ldi	r22, 0x00	; 0
 a2c:	8a e0       	ldi	r24, 0x0A	; 10
 a2e:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, SEMISEMICORCHEA);
 a32:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 a36:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 a3a:	56 95       	lsr	r21
 a3c:	47 95       	ror	r20
 a3e:	56 95       	lsr	r21
 a40:	47 95       	ror	r20
 a42:	56 95       	lsr	r21
 a44:	47 95       	ror	r20
 a46:	60 e0       	ldi	r22, 0x00	; 0
 a48:	8b e0       	ldi	r24, 0x0B	; 11
 a4a:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
 a4e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 a52:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 a56:	56 95       	lsr	r21
 a58:	47 95       	ror	r20
 a5a:	56 95       	lsr	r21
 a5c:	47 95       	ror	r20
 a5e:	61 e0       	ldi	r22, 0x01	; 1
 a60:	80 e0       	ldi	r24, 0x00	; 0
 a62:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	
	// 11
	play_note_ms(11, 0, SEMICORCHEA);
 a66:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 a6a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 a6e:	56 95       	lsr	r21
 a70:	47 95       	ror	r20
 a72:	56 95       	lsr	r21
 a74:	47 95       	ror	r20
 a76:	60 e0       	ldi	r22, 0x00	; 0
 a78:	8b e0       	ldi	r24, 0x0B	; 11
 a7a:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 a7e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 a82:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 a86:	96 95       	lsr	r25
 a88:	87 95       	ror	r24
 a8a:	96 95       	lsr	r25
 a8c:	87 95       	ror	r24
 a8e:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(0, 1, CORCHEA);
 a92:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 a96:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 a9a:	56 95       	lsr	r21
 a9c:	47 95       	ror	r20
 a9e:	61 e0       	ldi	r22, 0x01	; 1
 aa0:	80 e0       	ldi	r24, 0x00	; 0
 aa2:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
 aa6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 aaa:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 aae:	56 95       	lsr	r21
 ab0:	47 95       	ror	r20
 ab2:	56 95       	lsr	r21
 ab4:	47 95       	ror	r20
 ab6:	60 e0       	ldi	r22, 0x00	; 0
 ab8:	8b e0       	ldi	r24, 0x0B	; 11
 aba:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 abe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 ac2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 ac6:	96 95       	lsr	r25
 ac8:	87 95       	ror	r24
 aca:	96 95       	lsr	r25
 acc:	87 95       	ror	r24
 ace:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(0, 1, CORCHEA);
 ad2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 ad6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 ada:	56 95       	lsr	r21
 adc:	47 95       	ror	r20
 ade:	61 e0       	ldi	r22, 0x01	; 1
 ae0:	80 e0       	ldi	r24, 0x00	; 0
 ae2:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
 ae6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 aea:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 aee:	56 95       	lsr	r21
 af0:	47 95       	ror	r20
 af2:	56 95       	lsr	r21
 af4:	47 95       	ror	r20
 af6:	60 e0       	ldi	r22, 0x00	; 0
 af8:	8b e0       	ldi	r24, 0x0B	; 11
 afa:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
 afe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 b02:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b06:	96 95       	lsr	r25
 b08:	87 95       	ror	r24
 b0a:	96 95       	lsr	r25
 b0c:	87 95       	ror	r24
 b0e:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	play_note_ms(0, 1, CORCHEA);
 b12:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 b16:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b1a:	56 95       	lsr	r21
 b1c:	47 95       	ror	r20
 b1e:	61 e0       	ldi	r22, 0x01	; 1
 b20:	80 e0       	ldi	r24, 0x00	; 0
 b22:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
 b26:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 b2a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b2e:	56 95       	lsr	r21
 b30:	47 95       	ror	r20
 b32:	56 95       	lsr	r21
 b34:	47 95       	ror	r20
 b36:	60 e0       	ldi	r22, 0x00	; 0
 b38:	8b e0       	ldi	r24, 0x0B	; 11
 b3a:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(CORCHEA);
 b3e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 b42:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b46:	96 95       	lsr	r25
 b48:	87 95       	ror	r24
 b4a:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
	
	// 12
	play_note_ms(11, 0, SEMISEMICORCHEA);
 b4e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 b52:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b56:	56 95       	lsr	r21
 b58:	47 95       	ror	r20
 b5a:	56 95       	lsr	r21
 b5c:	47 95       	ror	r20
 b5e:	56 95       	lsr	r21
 b60:	47 95       	ror	r20
 b62:	60 e0       	ldi	r22, 0x00	; 0
 b64:	8b e0       	ldi	r24, 0x0B	; 11
 b66:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(0, 1, SEMISEMICORCHEA);
 b6a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 b6e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b72:	56 95       	lsr	r21
 b74:	47 95       	ror	r20
 b76:	56 95       	lsr	r21
 b78:	47 95       	ror	r20
 b7a:	56 95       	lsr	r21
 b7c:	47 95       	ror	r20
 b7e:	61 e0       	ldi	r22, 0x01	; 1
 b80:	80 e0       	ldi	r24, 0x00	; 0
 b82:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(2, 1, SEMISEMICORCHEA);
 b86:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 b8a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 b8e:	56 95       	lsr	r21
 b90:	47 95       	ror	r20
 b92:	56 95       	lsr	r21
 b94:	47 95       	ror	r20
 b96:	56 95       	lsr	r21
 b98:	47 95       	ror	r20
 b9a:	61 e0       	ldi	r22, 0x01	; 1
 b9c:	82 e0       	ldi	r24, 0x02	; 2
 b9e:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	play_note_ms(4, 1, SEMISEMICORCHEA + REDONDA);
 ba2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 ba6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 baa:	ac 01       	movw	r20, r24
 bac:	56 95       	lsr	r21
 bae:	47 95       	ror	r20
 bb0:	56 95       	lsr	r21
 bb2:	47 95       	ror	r20
 bb4:	56 95       	lsr	r21
 bb6:	47 95       	ror	r20
 bb8:	88 0f       	add	r24, r24
 bba:	99 1f       	adc	r25, r25
 bbc:	88 0f       	add	r24, r24
 bbe:	99 1f       	adc	r25, r25
 bc0:	48 0f       	add	r20, r24
 bc2:	59 1f       	adc	r21, r25
 bc4:	61 e0       	ldi	r22, 0x01	; 1
 bc6:	84 e0       	ldi	r24, 0x04	; 4
 bc8:	0e 94 00 06 	call	0xc00	; 0xc00 <play_note_ms>
	delay_ms_var(REDONDA);
 bcc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 bd0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 bd4:	88 0f       	add	r24, r24
 bd6:	99 1f       	adc	r25, r25
 bd8:	88 0f       	add	r24, r24
 bda:	99 1f       	adc	r25, r25
 bdc:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <delay_ms_var>
}
 be0:	cf 91       	pop	r28
 be2:	08 95       	ret

00000be4 <delay_ms_var>:

#include "funciones.h"
#include "sonidos.h"

void delay_ms_var(uint16_t ms) {
	while (ms--) _delay_ms(1);
 be4:	07 c0       	rjmp	.+14     	; 0xbf4 <delay_ms_var+0x10>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 be6:	8f e9       	ldi	r24, 0x9F	; 159
 be8:	9f e0       	ldi	r25, 0x0F	; 15
 bea:	01 97       	sbiw	r24, 0x01	; 1
 bec:	f1 f7       	brne	.-4      	; 0xbea <delay_ms_var+0x6>
 bee:	00 c0       	rjmp	.+0      	; 0xbf0 <delay_ms_var+0xc>
 bf0:	00 00       	nop
 bf2:	c9 01       	movw	r24, r18
 bf4:	9c 01       	movw	r18, r24
 bf6:	21 50       	subi	r18, 0x01	; 1
 bf8:	31 09       	sbc	r19, r1
 bfa:	89 2b       	or	r24, r25
 bfc:	a1 f7       	brne	.-24     	; 0xbe6 <delay_ms_var+0x2>
}
 bfe:	08 95       	ret

00000c00 <play_note_ms>:

void play_note_ms(uint8_t idx, int8_t octave, uint16_t ms) {
 c00:	cf 93       	push	r28
 c02:	df 93       	push	r29
 c04:	ea 01       	movw	r28, r20
	sound_note_on(idx, octave);
 c06:	0e 94 8d 06 	call	0xd1a	; 0xd1a <sound_note_on>
	while (ms--) _delay_ms(1);
 c0a:	07 c0       	rjmp	.+14     	; 0xc1a <play_note_ms+0x1a>
 c0c:	ef e9       	ldi	r30, 0x9F	; 159
 c0e:	ff e0       	ldi	r31, 0x0F	; 15
 c10:	31 97       	sbiw	r30, 0x01	; 1
 c12:	f1 f7       	brne	.-4      	; 0xc10 <play_note_ms+0x10>
 c14:	00 c0       	rjmp	.+0      	; 0xc16 <play_note_ms+0x16>
 c16:	00 00       	nop
 c18:	ec 01       	movw	r28, r24
 c1a:	ce 01       	movw	r24, r28
 c1c:	01 97       	sbiw	r24, 0x01	; 1
 c1e:	cd 2b       	or	r28, r29
 c20:	a9 f7       	brne	.-22     	; 0xc0c <play_note_ms+0xc>
	sound_off();
 c22:	0e 94 84 06 	call	0xd08	; 0xd08 <sound_off>
 c26:	8f e3       	ldi	r24, 0x3F	; 63
 c28:	9c e9       	ldi	r25, 0x9C	; 156
 c2a:	01 97       	sbiw	r24, 0x01	; 1
 c2c:	f1 f7       	brne	.-4      	; 0xc2a <play_note_ms+0x2a>
 c2e:	00 c0       	rjmp	.+0      	; 0xc30 <play_note_ms+0x30>
 c30:	00 00       	nop
	_delay_ms(10);
 c32:	df 91       	pop	r29
 c34:	cf 91       	pop	r28
 c36:	08 95       	ret

00000c38 <hw_init_pins>:
#include "hw_pins.h"

void hw_init_pins(void) {
    // Audio pin como salida, inicialmente en 0 (Timer2 aún NO configurado) 
    AUDIO_DDR  |=  (1<<AUDIO_PIN);
 c38:	84 b1       	in	r24, 0x04	; 4
 c3a:	88 60       	ori	r24, 0x08	; 8
 c3c:	84 b9       	out	0x04, r24	; 4
    AUDIO_PORT &= ~(1<<AUDIO_PIN);
 c3e:	85 b1       	in	r24, 0x05	; 5
 c40:	87 7f       	andi	r24, 0xF7	; 247
 c42:	85 b9       	out	0x05, r24	; 5

    // Notas: entradas con pull-up
    NOTE_PORTC_DDR  &= ~NOTES_MASK_C;
 c44:	87 b1       	in	r24, 0x07	; 7
 c46:	80 7c       	andi	r24, 0xC0	; 192
 c48:	87 b9       	out	0x07, r24	; 7
    NOTE_PORTC_PORT |=  NOTES_MASK_C;
 c4a:	88 b1       	in	r24, 0x08	; 8
 c4c:	8f 63       	ori	r24, 0x3F	; 63
 c4e:	88 b9       	out	0x08, r24	; 8

    NOTE_PORTD_DDR  &= ~NOTES_MASK_D;
 c50:	8a b1       	in	r24, 0x0a	; 10
 c52:	83 70       	andi	r24, 0x03	; 3
 c54:	8a b9       	out	0x0a, r24	; 10
    NOTE_PORTD_PORT |=  NOTES_MASK_D;
 c56:	8b b1       	in	r24, 0x0b	; 11
 c58:	8c 6f       	ori	r24, 0xFC	; 252
 c5a:	8b b9       	out	0x0b, r24	; 11

    // Octava +/-: entradas con pull-up
    OCT_DDR  &= ~OCT_MASK;
 c5c:	84 b1       	in	r24, 0x04	; 4
 c5e:	8c 7f       	andi	r24, 0xFC	; 252
 c60:	84 b9       	out	0x04, r24	; 4
    OCT_PORT |=  OCT_MASK;
 c62:	85 b1       	in	r24, 0x05	; 5
 c64:	83 60       	ori	r24, 0x03	; 3
 c66:	85 b9       	out	0x05, r24	; 5
 c68:	08 95       	ret

00000c6a <main>:
#include "figuras.h"
#include "canciones.h"
#include "funciones.h"

int main(void) {
	hw_init_pins();
 c6a:	0e 94 1c 06 	call	0xc38	; 0xc38 <hw_init_pins>
	sound_init_timer2();
 c6e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <sound_init_timer2>

	while (1) {
		c_asecina();
 c72:	0e 94 4b 00 	call	0x96	; 0x96 <c_asecina>
 c76:	fd cf       	rjmp	.-6      	; 0xc72 <main+0x8>

00000c78 <ocr_with_octave>:
	126  // B4
};

// Ajuste de octava: subir 1 octava -> frecuencia x2 -> OCR pasa ~ a (OCR+1)/2 - 1
static uint8_t ocr_with_octave(uint8_t base, int8_t octave) {
	uint16_t val = (uint16_t)base + 1; // trabajar con (OCR+1)
 c78:	90 e0       	ldi	r25, 0x00	; 0
 c7a:	01 96       	adiw	r24, 0x01	; 1
	if (octave > 0) {
 c7c:	16 16       	cp	r1, r22
 c7e:	54 f0       	brlt	.+20     	; 0xc94 <ocr_with_octave+0x1c>
 c80:	0e c0       	rjmp	.+28     	; 0xc9e <ocr_with_octave+0x26>
		while (octave--) val = (val > 1) ? (val >> 1) : 1; // divide por 2 con saturación mínima
 c82:	82 30       	cpi	r24, 0x02	; 2
 c84:	91 05       	cpc	r25, r1
 c86:	18 f0       	brcs	.+6      	; 0xc8e <ocr_with_octave+0x16>
 c88:	96 95       	lsr	r25
 c8a:	87 95       	ror	r24
 c8c:	02 c0       	rjmp	.+4      	; 0xc92 <ocr_with_octave+0x1a>
 c8e:	81 e0       	ldi	r24, 0x01	; 1
 c90:	90 e0       	ldi	r25, 0x00	; 0
 c92:	62 2f       	mov	r22, r18
 c94:	2f ef       	ldi	r18, 0xFF	; 255
 c96:	26 0f       	add	r18, r22
 c98:	61 11       	cpse	r22, r1
 c9a:	f3 cf       	rjmp	.-26     	; 0xc82 <ocr_with_octave+0xa>
 c9c:	10 c0       	rjmp	.+32     	; 0xcbe <ocr_with_octave+0x46>
		} else if (octave < 0) {
 c9e:	66 23       	and	r22, r22
 ca0:	74 f4       	brge	.+28     	; 0xcbe <ocr_with_octave+0x46>
 ca2:	03 c0       	rjmp	.+6      	; 0xcaa <ocr_with_octave+0x32>
		while (octave++) val <<= 1; // multiplica por 2 (baja una octava)
 ca4:	88 0f       	add	r24, r24
 ca6:	99 1f       	adc	r25, r25
 ca8:	62 2f       	mov	r22, r18
 caa:	21 e0       	ldi	r18, 0x01	; 1
 cac:	26 0f       	add	r18, r22
 cae:	61 11       	cpse	r22, r1
 cb0:	f9 cf       	rjmp	.-14     	; 0xca4 <ocr_with_octave+0x2c>
		if (val > 256) val = 256;   // saturar a 256 (OCR<=255)
 cb2:	81 30       	cpi	r24, 0x01	; 1
 cb4:	21 e0       	ldi	r18, 0x01	; 1
 cb6:	92 07       	cpc	r25, r18
 cb8:	10 f0       	brcs	.+4      	; 0xcbe <ocr_with_octave+0x46>
 cba:	80 e0       	ldi	r24, 0x00	; 0
 cbc:	91 e0       	ldi	r25, 0x01	; 1
	}
	uint16_t ocr = (val > 0) ? (val - 1) : 0;
 cbe:	00 97       	sbiw	r24, 0x00	; 0
 cc0:	11 f0       	breq	.+4      	; 0xcc6 <ocr_with_octave+0x4e>
 cc2:	01 97       	sbiw	r24, 0x01	; 1
 cc4:	02 c0       	rjmp	.+4      	; 0xcca <ocr_with_octave+0x52>
 cc6:	80 e0       	ldi	r24, 0x00	; 0
 cc8:	90 e0       	ldi	r25, 0x00	; 0
	if (ocr > 255) ocr = 255;
 cca:	8f 3f       	cpi	r24, 0xFF	; 255
 ccc:	91 05       	cpc	r25, r1
 cce:	19 f0       	breq	.+6      	; 0xcd6 <ocr_with_octave+0x5e>
 cd0:	10 f0       	brcs	.+4      	; 0xcd6 <ocr_with_octave+0x5e>
 cd2:	8f ef       	ldi	r24, 0xFF	; 255
 cd4:	90 e0       	ldi	r25, 0x00	; 0
	return (uint8_t)ocr;
}
 cd6:	08 95       	ret

00000cd8 <sound_init_timer2>:

void sound_init_timer2(void) {
	// Pin OC2A (PB3) como salida ya lo dejaste en hw_init_pins()
	// Timer2 en CTC (WGM21=1), toggle OC2A (COM2A0=1)
	TCCR2A = 0;
 cd8:	e0 eb       	ldi	r30, 0xB0	; 176
 cda:	f0 e0       	ldi	r31, 0x00	; 0
 cdc:	10 82       	st	Z, r1
	TCCR2B = 0;
 cde:	a1 eb       	ldi	r26, 0xB1	; 177
 ce0:	b0 e0       	ldi	r27, 0x00	; 0
 ce2:	1c 92       	st	X, r1
	TCNT2  = 0;
 ce4:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>

	// CTC: WGM21=1 (WGM22=0 en TCCR2B)
	TCCR2A |= (1<<WGM21);
 ce8:	80 81       	ld	r24, Z
 cea:	82 60       	ori	r24, 0x02	; 2
 cec:	80 83       	st	Z, r24
	// Toggle OC2A: COM2A0=1 (no usamos COM2A1)
	TCCR2A |= (1<<COM2A0);
 cee:	80 81       	ld	r24, Z
 cf0:	80 64       	ori	r24, 0x40	; 64
 cf2:	80 83       	st	Z, r24

	// Prescaler 128
	TCCR2B |= PRESC_BITS;
 cf4:	8c 91       	ld	r24, X
 cf6:	85 60       	ori	r24, 0x05	; 5
 cf8:	8c 93       	st	X, r24

	// Arrancamos en silencio (OCR2A arbitrario)
	OCR2A = ocr2a_base[9]; // A4 por defecto, pero OC2A quedará toggling igual
 cfa:	8d e8       	ldi	r24, 0x8D	; 141
 cfc:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	// Para silencio real, deshabilitamos el toggle hasta que suene algo:
	TCCR2A &= ~(1<<COM2A0); // OC2A desconectado => sin sonido hasta note_on
 d00:	80 81       	ld	r24, Z
 d02:	8f 7b       	andi	r24, 0xBF	; 191
 d04:	80 83       	st	Z, r24
 d06:	08 95       	ret

00000d08 <sound_off>:
}

void sound_off(void) {
	// Desconecta OC2A (pin en estado normal de PORTB)
	TCCR2A &= ~(1<<COM2A0);
 d08:	e0 eb       	ldi	r30, 0xB0	; 176
 d0a:	f0 e0       	ldi	r31, 0x00	; 0
 d0c:	80 81       	ld	r24, Z
 d0e:	8f 7b       	andi	r24, 0xBF	; 191
 d10:	80 83       	st	Z, r24
	// Opcional: forzar pin bajo
	AUDIO_PORT &= ~(1<<AUDIO_PIN);
 d12:	85 b1       	in	r24, 0x05	; 5
 d14:	87 7f       	andi	r24, 0xF7	; 247
 d16:	85 b9       	out	0x05, r24	; 5
 d18:	08 95       	ret

00000d1a <sound_note_on>:
}

void sound_note_on(uint8_t idx, int8_t octave) {
	if (idx >= 12) { sound_off(); return; }
 d1a:	8c 30       	cpi	r24, 0x0C	; 12
 d1c:	18 f0       	brcs	.+6      	; 0xd24 <sound_note_on+0xa>
 d1e:	0e 94 84 06 	call	0xd08	; 0xd08 <sound_off>
 d22:	08 95       	ret
	uint8_t ocr = ocr_with_octave(ocr2a_base[idx], octave);
 d24:	e8 2f       	mov	r30, r24
 d26:	f0 e0       	ldi	r31, 0x00	; 0
 d28:	ee 5f       	subi	r30, 0xFE	; 254
 d2a:	fe 4f       	sbci	r31, 0xFE	; 254
 d2c:	80 81       	ld	r24, Z
 d2e:	0e 94 3c 06 	call	0xc78	; 0xc78 <ocr_with_octave>
	OCR2A = ocr;
 d32:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>

	// Asegurar CTC y toggle por si alguien lo tocó
	TCCR2A &= ~((1<<COM2A1)); // COM2A1=0
 d36:	e0 eb       	ldi	r30, 0xB0	; 176
 d38:	f0 e0       	ldi	r31, 0x00	; 0
 d3a:	80 81       	ld	r24, Z
 d3c:	8f 77       	andi	r24, 0x7F	; 127
 d3e:	80 83       	st	Z, r24
	TCCR2A |=  (1<<WGM21);    // CTC
 d40:	80 81       	ld	r24, Z
 d42:	82 60       	ori	r24, 0x02	; 2
 d44:	80 83       	st	Z, r24
	TCCR2B &= ~(1<<WGM22);
 d46:	a1 eb       	ldi	r26, 0xB1	; 177
 d48:	b0 e0       	ldi	r27, 0x00	; 0
 d4a:	8c 91       	ld	r24, X
 d4c:	87 7f       	andi	r24, 0xF7	; 247
 d4e:	8c 93       	st	X, r24

	// Habilitar toggle en OC2A (suena)
	TCCR2A |= (1<<COM2A0);
 d50:	80 81       	ld	r24, Z
 d52:	80 64       	ori	r24, 0x40	; 64
 d54:	80 83       	st	Z, r24
 d56:	08 95       	ret

00000d58 <_exit>:
 d58:	f8 94       	cli

00000d5a <__stop_program>:
 d5a:	ff cf       	rjmp	.-2      	; 0xd5a <__stop_program>
