
Piano.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000142  00800100  00002e84  00002f18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002e84  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000042  00800242  00800242  0000305a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000305a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000308c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  000030cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000038ef  00000000  00000000  00003234  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e14  00000000  00000000  00006b23  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001cf8  00000000  00000000  00007937  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000258  00000000  00000000  00009630  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ae  00000000  00000000  00009888  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c01  00000000  00000000  00009e36  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  0000aa37  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
       4:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
       8:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
       c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      10:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      14:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      18:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      1c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      20:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      24:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      28:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      2c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      30:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      34:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      38:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      3c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      40:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      44:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      48:	0c 94 df 16 	jmp	0x2dbe	; 0x2dbe <__vector_18>
      4c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      50:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      54:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      58:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      5c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      60:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      64:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      68:	23 15       	cp	r18, r3
      6a:	26 15       	cp	r18, r6
      6c:	2a 15       	cp	r18, r10
      6e:	2f 15       	cp	r18, r15
      70:	34 15       	cp	r19, r4
      72:	38 15       	cp	r19, r8
      74:	3d 15       	cp	r19, r13
      76:	42 15       	cp	r20, r2
      78:	47 15       	cp	r20, r7
      7a:	4b 15       	cp	r20, r11
      7c:	50 15       	cp	r21, r0
      7e:	55 15       	cp	r21, r5
      80:	6d 15       	cp	r22, r13
      82:	70 15       	cp	r23, r0
      84:	74 15       	cp	r23, r4
      86:	79 15       	cp	r23, r9
      88:	7e 15       	cp	r23, r14
      8a:	82 15       	cp	r24, r2
      8c:	87 15       	cp	r24, r7
      8e:	8c 15       	cp	r24, r12
      90:	91 15       	cp	r25, r1
      92:	95 15       	cp	r25, r5
      94:	9a 15       	cp	r25, r10
      96:	9f 15       	cp	r25, r15

00000098 <__ctors_end>:
      98:	11 24       	eor	r1, r1
      9a:	1f be       	out	0x3f, r1	; 63
      9c:	cf ef       	ldi	r28, 0xFF	; 255
      9e:	d8 e0       	ldi	r29, 0x08	; 8
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
      a4:	12 e0       	ldi	r17, 0x02	; 2
      a6:	a0 e0       	ldi	r26, 0x00	; 0
      a8:	b1 e0       	ldi	r27, 0x01	; 1
      aa:	e4 e8       	ldi	r30, 0x84	; 132
      ac:	fe e2       	ldi	r31, 0x2E	; 46
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x10>
      b0:	05 90       	lpm	r0, Z+
      b2:	0d 92       	st	X+, r0
      b4:	a2 34       	cpi	r26, 0x42	; 66
      b6:	b1 07       	cpc	r27, r17
      b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0xc>

000000ba <__do_clear_bss>:
      ba:	22 e0       	ldi	r18, 0x02	; 2
      bc:	a2 e4       	ldi	r26, 0x42	; 66
      be:	b2 e0       	ldi	r27, 0x02	; 2
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
      c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
      c4:	a4 38       	cpi	r26, 0x84	; 132
      c6:	b2 07       	cpc	r27, r18
      c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
      ca:	0e 94 27 14 	call	0x284e	; 0x284e <main>
      ce:	0c 94 40 17 	jmp	0x2e80	; 0x2e80 <_exit>

000000d2 <__bad_interrupt>:
      d2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d6 <c_asesina>:
#include "figuras.h"
#include "hw_pins.h"
#include "sonidos.h"
#include "funciones.h"

void c_asesina(void){
      d6:	cf 93       	push	r28
	
	// Canción 1 - Asecina - Los Palmeras
	
	// 1
	play_note_ms(4, 1, CORCHEA);
      d8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
      dc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
      e0:	56 95       	lsr	r21
      e2:	47 95       	ror	r20
      e4:	61 e0       	ldi	r22, 0x01	; 1
      e6:	84 e0       	ldi	r24, 0x04	; 4
      e8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
      ec:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
      f0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
      f4:	56 95       	lsr	r21
      f6:	47 95       	ror	r20
      f8:	56 95       	lsr	r21
      fa:	47 95       	ror	r20
      fc:	60 e0       	ldi	r22, 0x00	; 0
      fe:	8b e0       	ldi	r24, 0x0B	; 11
     100:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     104:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     108:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     10c:	96 95       	lsr	r25
     10e:	87 95       	ror	r24
     110:	96 95       	lsr	r25
     112:	87 95       	ror	r24
     114:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(11, 0, SEMICORCHEA);
     118:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     11c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     120:	56 95       	lsr	r21
     122:	47 95       	ror	r20
     124:	56 95       	lsr	r21
     126:	47 95       	ror	r20
     128:	60 e0       	ldi	r22, 0x00	; 0
     12a:	8b e0       	ldi	r24, 0x0B	; 11
     12c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
     130:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     134:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     138:	56 95       	lsr	r21
     13a:	47 95       	ror	r20
     13c:	56 95       	lsr	r21
     13e:	47 95       	ror	r20
     140:	61 e0       	ldi	r22, 0x01	; 1
     142:	80 e0       	ldi	r24, 0x00	; 0
     144:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
     148:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     14c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     150:	56 95       	lsr	r21
     152:	47 95       	ror	r20
     154:	56 95       	lsr	r21
     156:	47 95       	ror	r20
     158:	60 e0       	ldi	r22, 0x00	; 0
     15a:	8b e0       	ldi	r24, 0x0B	; 11
     15c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(9, 0, SEMICORCHEA);
     160:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     164:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     168:	56 95       	lsr	r21
     16a:	47 95       	ror	r20
     16c:	56 95       	lsr	r21
     16e:	47 95       	ror	r20
     170:	60 e0       	ldi	r22, 0x00	; 0
     172:	89 e0       	ldi	r24, 0x09	; 9
     174:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
     178:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     17c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     180:	56 95       	lsr	r21
     182:	47 95       	ror	r20
     184:	56 95       	lsr	r21
     186:	47 95       	ror	r20
     188:	60 e0       	ldi	r22, 0x00	; 0
     18a:	8b e0       	ldi	r24, 0x0B	; 11
     18c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     190:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     194:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     198:	96 95       	lsr	r25
     19a:	87 95       	ror	r24
     19c:	96 95       	lsr	r25
     19e:	87 95       	ror	r24
     1a0:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	delay_ms_var(CORCHEA);
     1a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1a8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     1ac:	96 95       	lsr	r25
     1ae:	87 95       	ror	r24
     1b0:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(11, 0, SEMICORCHEA);
     1b4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1b8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     1bc:	56 95       	lsr	r21
     1be:	47 95       	ror	r20
     1c0:	56 95       	lsr	r21
     1c2:	47 95       	ror	r20
     1c4:	60 e0       	ldi	r22, 0x00	; 0
     1c6:	8b e0       	ldi	r24, 0x0B	; 11
     1c8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
     1cc:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1d0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     1d4:	56 95       	lsr	r21
     1d6:	47 95       	ror	r20
     1d8:	56 95       	lsr	r21
     1da:	47 95       	ror	r20
     1dc:	61 e0       	ldi	r22, 0x01	; 1
     1de:	80 e0       	ldi	r24, 0x00	; 0
     1e0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
     1e4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1e8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     1ec:	56 95       	lsr	r21
     1ee:	47 95       	ror	r20
     1f0:	56 95       	lsr	r21
     1f2:	47 95       	ror	r20
     1f4:	60 e0       	ldi	r22, 0x00	; 0
     1f6:	8b e0       	ldi	r24, 0x0B	; 11
     1f8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(9, 0, SEMICORCHEA);
     1fc:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     200:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     204:	56 95       	lsr	r21
     206:	47 95       	ror	r20
     208:	56 95       	lsr	r21
     20a:	47 95       	ror	r20
     20c:	60 e0       	ldi	r22, 0x00	; 0
     20e:	89 e0       	ldi	r24, 0x09	; 9
     210:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
	// 2
	play_note_ms(11, 0, SEMICORCHEA);
     214:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     218:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     21c:	56 95       	lsr	r21
     21e:	47 95       	ror	r20
     220:	56 95       	lsr	r21
     222:	47 95       	ror	r20
     224:	60 e0       	ldi	r22, 0x00	; 0
     226:	8b e0       	ldi	r24, 0x0B	; 11
     228:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     22c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     230:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     234:	96 95       	lsr	r25
     236:	87 95       	ror	r24
     238:	96 95       	lsr	r25
     23a:	87 95       	ror	r24
     23c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	delay_ms_var(CORCHEA);
     240:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     244:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     248:	96 95       	lsr	r25
     24a:	87 95       	ror	r24
     24c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	for (uint8_t i = 0; i < 2; i++){
     250:	c0 e0       	ldi	r28, 0x00	; 0
     252:	31 c0       	rjmp	.+98     	; 0x2b6 <c_asesina+0x1e0>
		play_note_ms(11, 0, SEMICORCHEA);
     254:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     258:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     25c:	56 95       	lsr	r21
     25e:	47 95       	ror	r20
     260:	56 95       	lsr	r21
     262:	47 95       	ror	r20
     264:	60 e0       	ldi	r22, 0x00	; 0
     266:	8b e0       	ldi	r24, 0x0B	; 11
     268:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, SEMICORCHEA);
     26c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     270:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     274:	56 95       	lsr	r21
     276:	47 95       	ror	r20
     278:	56 95       	lsr	r21
     27a:	47 95       	ror	r20
     27c:	61 e0       	ldi	r22, 0x01	; 1
     27e:	80 e0       	ldi	r24, 0x00	; 0
     280:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(11, 0, SEMICORCHEA);
     284:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     288:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     28c:	56 95       	lsr	r21
     28e:	47 95       	ror	r20
     290:	56 95       	lsr	r21
     292:	47 95       	ror	r20
     294:	60 e0       	ldi	r22, 0x00	; 0
     296:	8b e0       	ldi	r24, 0x0B	; 11
     298:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
     29c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     2a0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     2a4:	56 95       	lsr	r21
     2a6:	47 95       	ror	r20
     2a8:	56 95       	lsr	r21
     2aa:	47 95       	ror	r20
     2ac:	60 e0       	ldi	r22, 0x00	; 0
     2ae:	89 e0       	ldi	r24, 0x09	; 9
     2b0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
	// 2
	play_note_ms(11, 0, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	delay_ms_var(CORCHEA);
	for (uint8_t i = 0; i < 2; i++){
     2b4:	cf 5f       	subi	r28, 0xFF	; 255
     2b6:	c2 30       	cpi	r28, 0x02	; 2
     2b8:	68 f2       	brcs	.-102    	; 0x254 <c_asesina+0x17e>
		play_note_ms(11, 0, SEMICORCHEA);
		play_note_ms(0, 1, SEMICORCHEA);
		play_note_ms(11, 0, SEMICORCHEA);
		play_note_ms(9, 0, SEMICORCHEA);
	}
	play_note_ms(11, 0, SEMICORCHEA);
     2ba:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     2be:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     2c2:	56 95       	lsr	r21
     2c4:	47 95       	ror	r20
     2c6:	56 95       	lsr	r21
     2c8:	47 95       	ror	r20
     2ca:	60 e0       	ldi	r22, 0x00	; 0
     2cc:	8b e0       	ldi	r24, 0x0B	; 11
     2ce:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     2d2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     2d6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     2da:	96 95       	lsr	r25
     2dc:	87 95       	ror	r24
     2de:	96 95       	lsr	r25
     2e0:	87 95       	ror	r24
     2e2:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(11, 0, CORCHEA);
     2e6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     2ea:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     2ee:	56 95       	lsr	r21
     2f0:	47 95       	ror	r20
     2f2:	60 e0       	ldi	r22, 0x00	; 0
     2f4:	8b e0       	ldi	r24, 0x0B	; 11
     2f6:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
	// 3
	play_note_ms(4, 1, CORCHEA);
     2fa:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     2fe:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     302:	56 95       	lsr	r21
     304:	47 95       	ror	r20
     306:	61 e0       	ldi	r22, 0x01	; 1
     308:	84 e0       	ldi	r24, 0x04	; 4
     30a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
     30e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     312:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     316:	56 95       	lsr	r21
     318:	47 95       	ror	r20
     31a:	56 95       	lsr	r21
     31c:	47 95       	ror	r20
     31e:	60 e0       	ldi	r22, 0x00	; 0
     320:	8b e0       	ldi	r24, 0x0B	; 11
     322:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     326:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     32a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     32e:	96 95       	lsr	r25
     330:	87 95       	ror	r24
     332:	96 95       	lsr	r25
     334:	87 95       	ror	r24
     336:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(11, 0, SEMICORCHEA);
     33a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     33e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     342:	56 95       	lsr	r21
     344:	47 95       	ror	r20
     346:	56 95       	lsr	r21
     348:	47 95       	ror	r20
     34a:	60 e0       	ldi	r22, 0x00	; 0
     34c:	8b e0       	ldi	r24, 0x0B	; 11
     34e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	for (uint8_t i = 0; i < 2; i++){
     352:	c0 e0       	ldi	r28, 0x00	; 0
     354:	31 c0       	rjmp	.+98     	; 0x3b8 <c_asesina+0x2e2>
		play_note_ms(0, 1, SEMICORCHEA);
     356:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     35a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     35e:	56 95       	lsr	r21
     360:	47 95       	ror	r20
     362:	56 95       	lsr	r21
     364:	47 95       	ror	r20
     366:	61 e0       	ldi	r22, 0x01	; 1
     368:	80 e0       	ldi	r24, 0x00	; 0
     36a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(11, 0, SEMICORCHEA);
     36e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     372:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     376:	56 95       	lsr	r21
     378:	47 95       	ror	r20
     37a:	56 95       	lsr	r21
     37c:	47 95       	ror	r20
     37e:	60 e0       	ldi	r22, 0x00	; 0
     380:	8b e0       	ldi	r24, 0x0B	; 11
     382:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
     386:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     38a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     38e:	56 95       	lsr	r21
     390:	47 95       	ror	r20
     392:	56 95       	lsr	r21
     394:	47 95       	ror	r20
     396:	60 e0       	ldi	r22, 0x00	; 0
     398:	89 e0       	ldi	r24, 0x09	; 9
     39a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(11, 0, SEMICORCHEA);
     39e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     3a2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     3a6:	56 95       	lsr	r21
     3a8:	47 95       	ror	r20
     3aa:	56 95       	lsr	r21
     3ac:	47 95       	ror	r20
     3ae:	60 e0       	ldi	r22, 0x00	; 0
     3b0:	8b e0       	ldi	r24, 0x0B	; 11
     3b2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	// 3
	play_note_ms(4, 1, CORCHEA);
	play_note_ms(11, 0, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	play_note_ms(11, 0, SEMICORCHEA);
	for (uint8_t i = 0; i < 2; i++){
     3b6:	cf 5f       	subi	r28, 0xFF	; 255
     3b8:	c2 30       	cpi	r28, 0x02	; 2
     3ba:	68 f2       	brcs	.-102    	; 0x356 <c_asesina+0x280>
		play_note_ms(0, 1, SEMICORCHEA);
		play_note_ms(11, 0, SEMICORCHEA);
		play_note_ms(9, 0, SEMICORCHEA);
		play_note_ms(11, 0, SEMICORCHEA);
	}
	delay_ms_var(SEMICORCHEA);
     3bc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     3c0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     3c4:	96 95       	lsr	r25
     3c6:	87 95       	ror	r24
     3c8:	96 95       	lsr	r25
     3ca:	87 95       	ror	r24
     3cc:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(11, 0, CORCHEA);
     3d0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     3d4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     3d8:	56 95       	lsr	r21
     3da:	47 95       	ror	r20
     3dc:	60 e0       	ldi	r22, 0x00	; 0
     3de:	8b e0       	ldi	r24, 0x0B	; 11
     3e0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
	// 4
	play_note_ms(3, 1, CORCHEA);
     3e4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     3e8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     3ec:	56 95       	lsr	r21
     3ee:	47 95       	ror	r20
     3f0:	61 e0       	ldi	r22, 0x01	; 1
     3f2:	83 e0       	ldi	r24, 0x03	; 3
     3f4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
     3f8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     3fc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     400:	56 95       	lsr	r21
     402:	47 95       	ror	r20
     404:	56 95       	lsr	r21
     406:	47 95       	ror	r20
     408:	60 e0       	ldi	r22, 0x00	; 0
     40a:	8b e0       	ldi	r24, 0x0B	; 11
     40c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     410:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     414:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     418:	96 95       	lsr	r25
     41a:	87 95       	ror	r24
     41c:	96 95       	lsr	r25
     41e:	87 95       	ror	r24
     420:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(11, 0, SEMICORCHEA);
     424:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     428:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     42c:	56 95       	lsr	r21
     42e:	47 95       	ror	r20
     430:	56 95       	lsr	r21
     432:	47 95       	ror	r20
     434:	60 e0       	ldi	r22, 0x00	; 0
     436:	8b e0       	ldi	r24, 0x0B	; 11
     438:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	for (uint8_t i = 0; i < 2; i++){
     43c:	c0 e0       	ldi	r28, 0x00	; 0
     43e:	31 c0       	rjmp	.+98     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
		play_note_ms(0, 1, SEMICORCHEA);
     440:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     444:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     448:	56 95       	lsr	r21
     44a:	47 95       	ror	r20
     44c:	56 95       	lsr	r21
     44e:	47 95       	ror	r20
     450:	61 e0       	ldi	r22, 0x01	; 1
     452:	80 e0       	ldi	r24, 0x00	; 0
     454:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(11, 0, SEMICORCHEA);
     458:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     45c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     460:	56 95       	lsr	r21
     462:	47 95       	ror	r20
     464:	56 95       	lsr	r21
     466:	47 95       	ror	r20
     468:	60 e0       	ldi	r22, 0x00	; 0
     46a:	8b e0       	ldi	r24, 0x0B	; 11
     46c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
     470:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     474:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     478:	56 95       	lsr	r21
     47a:	47 95       	ror	r20
     47c:	56 95       	lsr	r21
     47e:	47 95       	ror	r20
     480:	60 e0       	ldi	r22, 0x00	; 0
     482:	89 e0       	ldi	r24, 0x09	; 9
     484:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(11, 0, SEMICORCHEA);
     488:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     48c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     490:	56 95       	lsr	r21
     492:	47 95       	ror	r20
     494:	56 95       	lsr	r21
     496:	47 95       	ror	r20
     498:	60 e0       	ldi	r22, 0x00	; 0
     49a:	8b e0       	ldi	r24, 0x0B	; 11
     49c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	// 4
	play_note_ms(3, 1, CORCHEA);
	play_note_ms(11, 0, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	play_note_ms(11, 0, SEMICORCHEA);
	for (uint8_t i = 0; i < 2; i++){
     4a0:	cf 5f       	subi	r28, 0xFF	; 255
     4a2:	c2 30       	cpi	r28, 0x02	; 2
     4a4:	68 f2       	brcs	.-102    	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
		play_note_ms(0, 1, SEMICORCHEA);
		play_note_ms(11, 0, SEMICORCHEA);
		play_note_ms(9, 0, SEMICORCHEA);
		play_note_ms(11, 0, SEMICORCHEA);
	}
	delay_ms_var(SEMICORCHEA);
     4a6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4aa:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4ae:	96 95       	lsr	r25
     4b0:	87 95       	ror	r24
     4b2:	96 95       	lsr	r25
     4b4:	87 95       	ror	r24
     4b6:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(11, 0, CORCHEA);
     4ba:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4be:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4c2:	56 95       	lsr	r21
     4c4:	47 95       	ror	r20
     4c6:	60 e0       	ldi	r22, 0x00	; 0
     4c8:	8b e0       	ldi	r24, 0x0B	; 11
     4ca:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
	// 5
	play_note_ms(3, 1, CORCHEA);
     4ce:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4d2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4d6:	56 95       	lsr	r21
     4d8:	47 95       	ror	r20
     4da:	61 e0       	ldi	r22, 0x01	; 1
     4dc:	83 e0       	ldi	r24, 0x03	; 3
     4de:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
     4e2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4e6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4ea:	56 95       	lsr	r21
     4ec:	47 95       	ror	r20
     4ee:	56 95       	lsr	r21
     4f0:	47 95       	ror	r20
     4f2:	60 e0       	ldi	r22, 0x00	; 0
     4f4:	8b e0       	ldi	r24, 0x0B	; 11
     4f6:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     4fa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4fe:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     502:	96 95       	lsr	r25
     504:	87 95       	ror	r24
     506:	96 95       	lsr	r25
     508:	87 95       	ror	r24
     50a:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(11, 0, SEMICORCHEA);
     50e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     512:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     516:	56 95       	lsr	r21
     518:	47 95       	ror	r20
     51a:	56 95       	lsr	r21
     51c:	47 95       	ror	r20
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	8b e0       	ldi	r24, 0x0B	; 11
     522:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
     526:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     52a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     52e:	56 95       	lsr	r21
     530:	47 95       	ror	r20
     532:	56 95       	lsr	r21
     534:	47 95       	ror	r20
     536:	61 e0       	ldi	r22, 0x01	; 1
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
     53e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     542:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     546:	56 95       	lsr	r21
     548:	47 95       	ror	r20
     54a:	56 95       	lsr	r21
     54c:	47 95       	ror	r20
     54e:	60 e0       	ldi	r22, 0x00	; 0
     550:	8b e0       	ldi	r24, 0x0B	; 11
     552:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(9, 0, SEMICORCHEA);
     556:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     55a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     55e:	56 95       	lsr	r21
     560:	47 95       	ror	r20
     562:	56 95       	lsr	r21
     564:	47 95       	ror	r20
     566:	60 e0       	ldi	r22, 0x00	; 0
     568:	89 e0       	ldi	r24, 0x09	; 9
     56a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, CORCHEA);
     56e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     572:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     576:	56 95       	lsr	r21
     578:	47 95       	ror	r20
     57a:	60 e0       	ldi	r22, 0x00	; 0
     57c:	8b e0       	ldi	r24, 0x0B	; 11
     57e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(9, 0, SEMICORCHEA);
     582:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     586:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     58a:	56 95       	lsr	r21
     58c:	47 95       	ror	r20
     58e:	56 95       	lsr	r21
     590:	47 95       	ror	r20
     592:	60 e0       	ldi	r22, 0x00	; 0
     594:	89 e0       	ldi	r24, 0x09	; 9
     596:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA),
     59a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     59e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5a2:	96 95       	lsr	r25
     5a4:	87 95       	ror	r24
     5a6:	96 95       	lsr	r25
     5a8:	87 95       	ror	r24
     5aa:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(7, 0, CORCHEA);
     5ae:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     5b2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5b6:	56 95       	lsr	r21
     5b8:	47 95       	ror	r20
     5ba:	60 e0       	ldi	r22, 0x00	; 0
     5bc:	87 e0       	ldi	r24, 0x07	; 7
     5be:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(6, 0, SEMICORCHEA);
     5c2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     5c6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5ca:	56 95       	lsr	r21
     5cc:	47 95       	ror	r20
     5ce:	56 95       	lsr	r21
     5d0:	47 95       	ror	r20
     5d2:	60 e0       	ldi	r22, 0x00	; 0
     5d4:	86 e0       	ldi	r24, 0x06	; 6
     5d6:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     5da:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     5de:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5e2:	96 95       	lsr	r25
     5e4:	87 95       	ror	r24
     5e6:	96 95       	lsr	r25
     5e8:	87 95       	ror	r24
     5ea:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	
	// 6
	play_note_ms(11, 1, CORCHEA);
     5ee:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     5f2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5f6:	56 95       	lsr	r21
     5f8:	47 95       	ror	r20
     5fa:	61 e0       	ldi	r22, 0x01	; 1
     5fc:	8b e0       	ldi	r24, 0x0B	; 11
     5fe:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(7, 1, SEMICORCHEA);
     602:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     606:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     60a:	56 95       	lsr	r21
     60c:	47 95       	ror	r20
     60e:	56 95       	lsr	r21
     610:	47 95       	ror	r20
     612:	61 e0       	ldi	r22, 0x01	; 1
     614:	87 e0       	ldi	r24, 0x07	; 7
     616:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     61a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     61e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     622:	96 95       	lsr	r25
     624:	87 95       	ror	r24
     626:	96 95       	lsr	r25
     628:	87 95       	ror	r24
     62a:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	for (uint8_t i = 0; i < 3; i++){
     62e:	c0 e0       	ldi	r28, 0x00	; 0
     630:	31 c0       	rjmp	.+98     	; 0x694 <__EEPROM_REGION_LENGTH__+0x294>
		play_note_ms(7, 1, SEMICORCHEA);
     632:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     636:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     63a:	56 95       	lsr	r21
     63c:	47 95       	ror	r20
     63e:	56 95       	lsr	r21
     640:	47 95       	ror	r20
     642:	61 e0       	ldi	r22, 0x01	; 1
     644:	87 e0       	ldi	r24, 0x07	; 7
     646:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 1, SEMICORCHEA);
     64a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     64e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     652:	56 95       	lsr	r21
     654:	47 95       	ror	r20
     656:	56 95       	lsr	r21
     658:	47 95       	ror	r20
     65a:	61 e0       	ldi	r22, 0x01	; 1
     65c:	89 e0       	ldi	r24, 0x09	; 9
     65e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 1, SEMICORCHEA);
     662:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     666:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     66a:	56 95       	lsr	r21
     66c:	47 95       	ror	r20
     66e:	56 95       	lsr	r21
     670:	47 95       	ror	r20
     672:	61 e0       	ldi	r22, 0x01	; 1
     674:	87 e0       	ldi	r24, 0x07	; 7
     676:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(6, 1, SEMICORCHEA);
     67a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     67e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     682:	56 95       	lsr	r21
     684:	47 95       	ror	r20
     686:	56 95       	lsr	r21
     688:	47 95       	ror	r20
     68a:	61 e0       	ldi	r22, 0x01	; 1
     68c:	86 e0       	ldi	r24, 0x06	; 6
     68e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
	// 6
	play_note_ms(11, 1, CORCHEA);
	play_note_ms(7, 1, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	for (uint8_t i = 0; i < 3; i++){
     692:	cf 5f       	subi	r28, 0xFF	; 255
     694:	c3 30       	cpi	r28, 0x03	; 3
     696:	68 f2       	brcs	.-102    	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
		play_note_ms(6, 1, SEMICORCHEA);
	}
	
	
	// 7
	play_note_ms(11, 1, CORCHEA);
     698:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     69c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     6a0:	56 95       	lsr	r21
     6a2:	47 95       	ror	r20
     6a4:	61 e0       	ldi	r22, 0x01	; 1
     6a6:	8b e0       	ldi	r24, 0x0B	; 11
     6a8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(7, 1, SEMICORCHEA);
     6ac:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     6b0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     6b4:	56 95       	lsr	r21
     6b6:	47 95       	ror	r20
     6b8:	56 95       	lsr	r21
     6ba:	47 95       	ror	r20
     6bc:	61 e0       	ldi	r22, 0x01	; 1
     6be:	87 e0       	ldi	r24, 0x07	; 7
     6c0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     6c4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     6c8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     6cc:	96 95       	lsr	r25
     6ce:	87 95       	ror	r24
     6d0:	96 95       	lsr	r25
     6d2:	87 95       	ror	r24
     6d4:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(7, 1, SEMICORCHEA);
     6d8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     6dc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     6e0:	56 95       	lsr	r21
     6e2:	47 95       	ror	r20
     6e4:	56 95       	lsr	r21
     6e6:	47 95       	ror	r20
     6e8:	61 e0       	ldi	r22, 0x01	; 1
     6ea:	87 e0       	ldi	r24, 0x07	; 7
     6ec:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	for (uint8_t i = 0; i < 2; i++){
     6f0:	c0 e0       	ldi	r28, 0x00	; 0
     6f2:	31 c0       	rjmp	.+98     	; 0x756 <__EEPROM_REGION_LENGTH__+0x356>
		play_note_ms(9, 1, SEMICORCHEA);
     6f4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     6f8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     6fc:	56 95       	lsr	r21
     6fe:	47 95       	ror	r20
     700:	56 95       	lsr	r21
     702:	47 95       	ror	r20
     704:	61 e0       	ldi	r22, 0x01	; 1
     706:	89 e0       	ldi	r24, 0x09	; 9
     708:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 1, SEMICORCHEA);
     70c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     710:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     714:	56 95       	lsr	r21
     716:	47 95       	ror	r20
     718:	56 95       	lsr	r21
     71a:	47 95       	ror	r20
     71c:	61 e0       	ldi	r22, 0x01	; 1
     71e:	87 e0       	ldi	r24, 0x07	; 7
     720:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(6, 1, SEMICORCHEA);
     724:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     728:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     72c:	56 95       	lsr	r21
     72e:	47 95       	ror	r20
     730:	56 95       	lsr	r21
     732:	47 95       	ror	r20
     734:	61 e0       	ldi	r22, 0x01	; 1
     736:	86 e0       	ldi	r24, 0x06	; 6
     738:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 1, SEMICORCHEA);
     73c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     740:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     744:	56 95       	lsr	r21
     746:	47 95       	ror	r20
     748:	56 95       	lsr	r21
     74a:	47 95       	ror	r20
     74c:	61 e0       	ldi	r22, 0x01	; 1
     74e:	87 e0       	ldi	r24, 0x07	; 7
     750:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	// 7
	play_note_ms(11, 1, CORCHEA);
	play_note_ms(7, 1, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	play_note_ms(7, 1, SEMICORCHEA);
	for (uint8_t i = 0; i < 2; i++){
     754:	cf 5f       	subi	r28, 0xFF	; 255
     756:	c2 30       	cpi	r28, 0x02	; 2
     758:	68 f2       	brcs	.-102    	; 0x6f4 <__EEPROM_REGION_LENGTH__+0x2f4>
		play_note_ms(9, 1, SEMICORCHEA);
		play_note_ms(7, 1, SEMICORCHEA);
		play_note_ms(6, 1, SEMICORCHEA);
		play_note_ms(7, 1, SEMICORCHEA);
	}
	delay_ms_var(SEMICORCHEA);
     75a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     75e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     762:	96 95       	lsr	r25
     764:	87 95       	ror	r24
     766:	96 95       	lsr	r25
     768:	87 95       	ror	r24
     76a:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(7, 1, CORCHEA);
     76e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     772:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     776:	56 95       	lsr	r21
     778:	47 95       	ror	r20
     77a:	61 e0       	ldi	r22, 0x01	; 1
     77c:	87 e0       	ldi	r24, 0x07	; 7
     77e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
	// 8
	play_note_ms(9, 1, CORCHEA);
     782:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     786:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     78a:	56 95       	lsr	r21
     78c:	47 95       	ror	r20
     78e:	61 e0       	ldi	r22, 0x01	; 1
     790:	89 e0       	ldi	r24, 0x09	; 9
     792:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(6, 1, SEMICORCHEA);
     796:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     79a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     79e:	56 95       	lsr	r21
     7a0:	47 95       	ror	r20
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	61 e0       	ldi	r22, 0x01	; 1
     7a8:	86 e0       	ldi	r24, 0x06	; 6
     7aa:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     7ae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7b2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7b6:	96 95       	lsr	r25
     7b8:	87 95       	ror	r24
     7ba:	96 95       	lsr	r25
     7bc:	87 95       	ror	r24
     7be:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	for (uint8_t i = 0; i < 2; i++){
     7c2:	c0 e0       	ldi	r28, 0x00	; 0
     7c4:	31 c0       	rjmp	.+98     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
		play_note_ms(6, 1, SEMICORCHEA);
     7c6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7ca:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7ce:	56 95       	lsr	r21
     7d0:	47 95       	ror	r20
     7d2:	56 95       	lsr	r21
     7d4:	47 95       	ror	r20
     7d6:	61 e0       	ldi	r22, 0x01	; 1
     7d8:	86 e0       	ldi	r24, 0x06	; 6
     7da:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 1, SEMICORCHEA);
     7de:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7e2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7e6:	56 95       	lsr	r21
     7e8:	47 95       	ror	r20
     7ea:	56 95       	lsr	r21
     7ec:	47 95       	ror	r20
     7ee:	61 e0       	ldi	r22, 0x01	; 1
     7f0:	87 e0       	ldi	r24, 0x07	; 7
     7f2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(6, 1, SEMICORCHEA);
     7f6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7fa:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7fe:	56 95       	lsr	r21
     800:	47 95       	ror	r20
     802:	56 95       	lsr	r21
     804:	47 95       	ror	r20
     806:	61 e0       	ldi	r22, 0x01	; 1
     808:	86 e0       	ldi	r24, 0x06	; 6
     80a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
     80e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     812:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     816:	56 95       	lsr	r21
     818:	47 95       	ror	r20
     81a:	56 95       	lsr	r21
     81c:	47 95       	ror	r20
     81e:	61 e0       	ldi	r22, 0x01	; 1
     820:	85 e0       	ldi	r24, 0x05	; 5
     822:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
	// 8
	play_note_ms(9, 1, CORCHEA);
	play_note_ms(6, 1, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	for (uint8_t i = 0; i < 2; i++){
     826:	cf 5f       	subi	r28, 0xFF	; 255
     828:	c2 30       	cpi	r28, 0x02	; 2
     82a:	68 f2       	brcs	.-102    	; 0x7c6 <__EEPROM_REGION_LENGTH__+0x3c6>
		play_note_ms(6, 1, SEMICORCHEA);
		play_note_ms(7, 1, SEMICORCHEA);
		play_note_ms(6, 1, SEMICORCHEA);
		play_note_ms(5, 1, SEMICORCHEA);
	}
	play_note_ms(6, 1, SEMICORCHEA);
     82c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     830:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     834:	56 95       	lsr	r21
     836:	47 95       	ror	r20
     838:	56 95       	lsr	r21
     83a:	47 95       	ror	r20
     83c:	61 e0       	ldi	r22, 0x01	; 1
     83e:	86 e0       	ldi	r24, 0x06	; 6
     840:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     844:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     848:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     84c:	96 95       	lsr	r25
     84e:	87 95       	ror	r24
     850:	96 95       	lsr	r25
     852:	87 95       	ror	r24
     854:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(6, 1, SEMICORCHEA);
     858:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     85c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     860:	56 95       	lsr	r21
     862:	47 95       	ror	r20
     864:	56 95       	lsr	r21
     866:	47 95       	ror	r20
     868:	61 e0       	ldi	r22, 0x01	; 1
     86a:	86 e0       	ldi	r24, 0x06	; 6
     86c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     870:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     874:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     878:	96 95       	lsr	r25
     87a:	87 95       	ror	r24
     87c:	96 95       	lsr	r25
     87e:	87 95       	ror	r24
     880:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	
	// 9
	play_note_ms(9, 1, CORCHEA);
     884:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     888:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     88c:	56 95       	lsr	r21
     88e:	47 95       	ror	r20
     890:	61 e0       	ldi	r22, 0x01	; 1
     892:	89 e0       	ldi	r24, 0x09	; 9
     894:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(6, 1, SEMICORCHEA);
     898:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     89c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     8a0:	56 95       	lsr	r21
     8a2:	47 95       	ror	r20
     8a4:	56 95       	lsr	r21
     8a6:	47 95       	ror	r20
     8a8:	61 e0       	ldi	r22, 0x01	; 1
     8aa:	86 e0       	ldi	r24, 0x06	; 6
     8ac:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     8b0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     8b4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     8b8:	96 95       	lsr	r25
     8ba:	87 95       	ror	r24
     8bc:	96 95       	lsr	r25
     8be:	87 95       	ror	r24
     8c0:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	for (uint8_t i = 0; i < 3; i++){
     8c4:	c0 e0       	ldi	r28, 0x00	; 0
     8c6:	31 c0       	rjmp	.+98     	; 0x92a <__stack+0x2b>
		play_note_ms(6, 1, SEMICORCHEA);
     8c8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     8cc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     8d0:	56 95       	lsr	r21
     8d2:	47 95       	ror	r20
     8d4:	56 95       	lsr	r21
     8d6:	47 95       	ror	r20
     8d8:	61 e0       	ldi	r22, 0x01	; 1
     8da:	86 e0       	ldi	r24, 0x06	; 6
     8dc:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 1, SEMICORCHEA);
     8e0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     8e4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     8e8:	56 95       	lsr	r21
     8ea:	47 95       	ror	r20
     8ec:	56 95       	lsr	r21
     8ee:	47 95       	ror	r20
     8f0:	61 e0       	ldi	r22, 0x01	; 1
     8f2:	87 e0       	ldi	r24, 0x07	; 7
     8f4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(6, 1, SEMICORCHEA);
     8f8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     8fc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     900:	56 95       	lsr	r21
     902:	47 95       	ror	r20
     904:	56 95       	lsr	r21
     906:	47 95       	ror	r20
     908:	61 e0       	ldi	r22, 0x01	; 1
     90a:	86 e0       	ldi	r24, 0x06	; 6
     90c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
     910:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     914:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     918:	56 95       	lsr	r21
     91a:	47 95       	ror	r20
     91c:	56 95       	lsr	r21
     91e:	47 95       	ror	r20
     920:	61 e0       	ldi	r22, 0x01	; 1
     922:	85 e0       	ldi	r24, 0x05	; 5
     924:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
	// 9
	play_note_ms(9, 1, CORCHEA);
	play_note_ms(6, 1, SEMICORCHEA);
	delay_ms_var(SEMICORCHEA);
	for (uint8_t i = 0; i < 3; i++){
     928:	cf 5f       	subi	r28, 0xFF	; 255
     92a:	c3 30       	cpi	r28, 0x03	; 3
     92c:	68 f2       	brcs	.-102    	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
		play_note_ms(6, 1, SEMICORCHEA);
		play_note_ms(5, 1, SEMICORCHEA);
	}
	
	// 10
	play_note_ms(0, 1, SEMICORCHEA + CORCHEA);
     92e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     932:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     936:	ac 01       	movw	r20, r24
     938:	56 95       	lsr	r21
     93a:	47 95       	ror	r20
     93c:	56 95       	lsr	r21
     93e:	47 95       	ror	r20
     940:	96 95       	lsr	r25
     942:	87 95       	ror	r24
     944:	48 0f       	add	r20, r24
     946:	59 1f       	adc	r21, r25
     948:	61 e0       	ldi	r22, 0x01	; 1
     94a:	80 e0       	ldi	r24, 0x00	; 0
     94c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
     950:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     954:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     958:	56 95       	lsr	r21
     95a:	47 95       	ror	r20
     95c:	56 95       	lsr	r21
     95e:	47 95       	ror	r20
     960:	61 e0       	ldi	r22, 0x01	; 1
     962:	80 e0       	ldi	r24, 0x00	; 0
     964:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(7, 0, SEMICORCHEA);
     968:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     96c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     970:	56 95       	lsr	r21
     972:	47 95       	ror	r20
     974:	56 95       	lsr	r21
     976:	47 95       	ror	r20
     978:	60 e0       	ldi	r22, 0x00	; 0
     97a:	87 e0       	ldi	r24, 0x07	; 7
     97c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(9, 0, SEMICORCHEA);
     980:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     984:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     988:	56 95       	lsr	r21
     98a:	47 95       	ror	r20
     98c:	56 95       	lsr	r21
     98e:	47 95       	ror	r20
     990:	60 e0       	ldi	r22, 0x00	; 0
     992:	89 e0       	ldi	r24, 0x09	; 9
     994:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
     998:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     99c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9a0:	56 95       	lsr	r21
     9a2:	47 95       	ror	r20
     9a4:	56 95       	lsr	r21
     9a6:	47 95       	ror	r20
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	8b e0       	ldi	r24, 0x0B	; 11
     9ac:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(2, 1, SEMICORCHEA);
     9b0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     9b4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9b8:	56 95       	lsr	r21
     9ba:	47 95       	ror	r20
     9bc:	56 95       	lsr	r21
     9be:	47 95       	ror	r20
     9c0:	61 e0       	ldi	r22, 0x01	; 1
     9c2:	82 e0       	ldi	r24, 0x02	; 2
     9c4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA + CORCHEA);
     9c8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     9cc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9d0:	ac 01       	movw	r20, r24
     9d2:	56 95       	lsr	r21
     9d4:	47 95       	ror	r20
     9d6:	56 95       	lsr	r21
     9d8:	47 95       	ror	r20
     9da:	96 95       	lsr	r25
     9dc:	87 95       	ror	r24
     9de:	48 0f       	add	r20, r24
     9e0:	59 1f       	adc	r21, r25
     9e2:	61 e0       	ldi	r22, 0x01	; 1
     9e4:	80 e0       	ldi	r24, 0x00	; 0
     9e6:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
     9ea:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     9ee:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9f2:	56 95       	lsr	r21
     9f4:	47 95       	ror	r20
     9f6:	56 95       	lsr	r21
     9f8:	47 95       	ror	r20
     9fa:	61 e0       	ldi	r22, 0x01	; 1
     9fc:	80 e0       	ldi	r24, 0x00	; 0
     9fe:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(7, 0, SEMISEMICORCHEA);
     a02:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a06:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a0a:	56 95       	lsr	r21
     a0c:	47 95       	ror	r20
     a0e:	56 95       	lsr	r21
     a10:	47 95       	ror	r20
     a12:	56 95       	lsr	r21
     a14:	47 95       	ror	r20
     a16:	60 e0       	ldi	r22, 0x00	; 0
     a18:	87 e0       	ldi	r24, 0x07	; 7
     a1a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(8, 0, SEMISEMICORCHEA);
     a1e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a22:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a26:	56 95       	lsr	r21
     a28:	47 95       	ror	r20
     a2a:	56 95       	lsr	r21
     a2c:	47 95       	ror	r20
     a2e:	56 95       	lsr	r21
     a30:	47 95       	ror	r20
     a32:	60 e0       	ldi	r22, 0x00	; 0
     a34:	88 e0       	ldi	r24, 0x08	; 8
     a36:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(9, 0, SEMISEMICORCHEA);
     a3a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a3e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a42:	56 95       	lsr	r21
     a44:	47 95       	ror	r20
     a46:	56 95       	lsr	r21
     a48:	47 95       	ror	r20
     a4a:	56 95       	lsr	r21
     a4c:	47 95       	ror	r20
     a4e:	60 e0       	ldi	r22, 0x00	; 0
     a50:	89 e0       	ldi	r24, 0x09	; 9
     a52:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(10, 0, SEMISEMICORCHEA);
     a56:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a5a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a5e:	56 95       	lsr	r21
     a60:	47 95       	ror	r20
     a62:	56 95       	lsr	r21
     a64:	47 95       	ror	r20
     a66:	56 95       	lsr	r21
     a68:	47 95       	ror	r20
     a6a:	60 e0       	ldi	r22, 0x00	; 0
     a6c:	8a e0       	ldi	r24, 0x0A	; 10
     a6e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, SEMISEMICORCHEA);
     a72:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a76:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a7a:	56 95       	lsr	r21
     a7c:	47 95       	ror	r20
     a7e:	56 95       	lsr	r21
     a80:	47 95       	ror	r20
     a82:	56 95       	lsr	r21
     a84:	47 95       	ror	r20
     a86:	60 e0       	ldi	r22, 0x00	; 0
     a88:	8b e0       	ldi	r24, 0x0B	; 11
     a8a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
     a8e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a92:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a96:	56 95       	lsr	r21
     a98:	47 95       	ror	r20
     a9a:	56 95       	lsr	r21
     a9c:	47 95       	ror	r20
     a9e:	61 e0       	ldi	r22, 0x01	; 1
     aa0:	80 e0       	ldi	r24, 0x00	; 0
     aa2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
	// 11
	play_note_ms(11, 0, SEMICORCHEA);
     aa6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     aaa:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     aae:	56 95       	lsr	r21
     ab0:	47 95       	ror	r20
     ab2:	56 95       	lsr	r21
     ab4:	47 95       	ror	r20
     ab6:	60 e0       	ldi	r22, 0x00	; 0
     ab8:	8b e0       	ldi	r24, 0x0B	; 11
     aba:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     abe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     ac2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     ac6:	96 95       	lsr	r25
     ac8:	87 95       	ror	r24
     aca:	96 95       	lsr	r25
     acc:	87 95       	ror	r24
     ace:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, CORCHEA);
     ad2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     ad6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     ada:	56 95       	lsr	r21
     adc:	47 95       	ror	r20
     ade:	61 e0       	ldi	r22, 0x01	; 1
     ae0:	80 e0       	ldi	r24, 0x00	; 0
     ae2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
     ae6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     aea:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     aee:	56 95       	lsr	r21
     af0:	47 95       	ror	r20
     af2:	56 95       	lsr	r21
     af4:	47 95       	ror	r20
     af6:	60 e0       	ldi	r22, 0x00	; 0
     af8:	8b e0       	ldi	r24, 0x0B	; 11
     afa:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     afe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b02:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b06:	96 95       	lsr	r25
     b08:	87 95       	ror	r24
     b0a:	96 95       	lsr	r25
     b0c:	87 95       	ror	r24
     b0e:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, CORCHEA);
     b12:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b16:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b1a:	56 95       	lsr	r21
     b1c:	47 95       	ror	r20
     b1e:	61 e0       	ldi	r22, 0x01	; 1
     b20:	80 e0       	ldi	r24, 0x00	; 0
     b22:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
     b26:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b2a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b2e:	56 95       	lsr	r21
     b30:	47 95       	ror	r20
     b32:	56 95       	lsr	r21
     b34:	47 95       	ror	r20
     b36:	60 e0       	ldi	r22, 0x00	; 0
     b38:	8b e0       	ldi	r24, 0x0B	; 11
     b3a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     b3e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b42:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b46:	96 95       	lsr	r25
     b48:	87 95       	ror	r24
     b4a:	96 95       	lsr	r25
     b4c:	87 95       	ror	r24
     b4e:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, CORCHEA);
     b52:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b56:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b5a:	56 95       	lsr	r21
     b5c:	47 95       	ror	r20
     b5e:	61 e0       	ldi	r22, 0x01	; 1
     b60:	80 e0       	ldi	r24, 0x00	; 0
     b62:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, SEMICORCHEA);
     b66:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b6a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b6e:	56 95       	lsr	r21
     b70:	47 95       	ror	r20
     b72:	56 95       	lsr	r21
     b74:	47 95       	ror	r20
     b76:	60 e0       	ldi	r22, 0x00	; 0
     b78:	8b e0       	ldi	r24, 0x0B	; 11
     b7a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(CORCHEA);
     b7e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b82:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b86:	96 95       	lsr	r25
     b88:	87 95       	ror	r24
     b8a:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	
	// 12
	play_note_ms(11, 0, SEMISEMICORCHEA);
     b8e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b92:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b96:	56 95       	lsr	r21
     b98:	47 95       	ror	r20
     b9a:	56 95       	lsr	r21
     b9c:	47 95       	ror	r20
     b9e:	56 95       	lsr	r21
     ba0:	47 95       	ror	r20
     ba2:	60 e0       	ldi	r22, 0x00	; 0
     ba4:	8b e0       	ldi	r24, 0x0B	; 11
     ba6:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMISEMICORCHEA);
     baa:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     bae:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     bb2:	56 95       	lsr	r21
     bb4:	47 95       	ror	r20
     bb6:	56 95       	lsr	r21
     bb8:	47 95       	ror	r20
     bba:	56 95       	lsr	r21
     bbc:	47 95       	ror	r20
     bbe:	61 e0       	ldi	r22, 0x01	; 1
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(2, 1, SEMISEMICORCHEA);
     bc6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     bca:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     bce:	56 95       	lsr	r21
     bd0:	47 95       	ror	r20
     bd2:	56 95       	lsr	r21
     bd4:	47 95       	ror	r20
     bd6:	56 95       	lsr	r21
     bd8:	47 95       	ror	r20
     bda:	61 e0       	ldi	r22, 0x01	; 1
     bdc:	82 e0       	ldi	r24, 0x02	; 2
     bde:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 1, SEMISEMICORCHEA + REDONDA);
     be2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     be6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     bea:	ac 01       	movw	r20, r24
     bec:	56 95       	lsr	r21
     bee:	47 95       	ror	r20
     bf0:	56 95       	lsr	r21
     bf2:	47 95       	ror	r20
     bf4:	56 95       	lsr	r21
     bf6:	47 95       	ror	r20
     bf8:	88 0f       	add	r24, r24
     bfa:	99 1f       	adc	r25, r25
     bfc:	88 0f       	add	r24, r24
     bfe:	99 1f       	adc	r25, r25
     c00:	48 0f       	add	r20, r24
     c02:	59 1f       	adc	r21, r25
     c04:	61 e0       	ldi	r22, 0x01	; 1
     c06:	84 e0       	ldi	r24, 0x04	; 4
     c08:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(REDONDA);
     c0c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     c10:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     c14:	88 0f       	add	r24, r24
     c16:	99 1f       	adc	r25, r25
     c18:	88 0f       	add	r24, r24
     c1a:	99 1f       	adc	r25, r25
     c1c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
}
     c20:	cf 91       	pop	r28
     c22:	08 95       	ret

00000c24 <c_SuperMario>:

void c_SuperMario(void){
     c24:	cf 93       	push	r28
	
	// Canción 2 - Super Mario Bros
	
	// 1
	play_note_ms(4, 1, SEMICORCHEA);
     c26:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     c2a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     c2e:	56 95       	lsr	r21
     c30:	47 95       	ror	r20
     c32:	56 95       	lsr	r21
     c34:	47 95       	ror	r20
     c36:	61 e0       	ldi	r22, 0x01	; 1
     c38:	84 e0       	ldi	r24, 0x04	; 4
     c3a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 1, SEMICORCHEA);
     c3e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     c42:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     c46:	56 95       	lsr	r21
     c48:	47 95       	ror	r20
     c4a:	56 95       	lsr	r21
     c4c:	47 95       	ror	r20
     c4e:	61 e0       	ldi	r22, 0x01	; 1
     c50:	84 e0       	ldi	r24, 0x04	; 4
     c52:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     c56:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     c5a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     c5e:	96 95       	lsr	r25
     c60:	87 95       	ror	r24
     c62:	96 95       	lsr	r25
     c64:	87 95       	ror	r24
     c66:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(4, 1, SEMICORCHEA);
     c6a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     c6e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     c72:	56 95       	lsr	r21
     c74:	47 95       	ror	r20
     c76:	56 95       	lsr	r21
     c78:	47 95       	ror	r20
     c7a:	61 e0       	ldi	r22, 0x01	; 1
     c7c:	84 e0       	ldi	r24, 0x04	; 4
     c7e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     c82:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     c86:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     c8a:	96 95       	lsr	r25
     c8c:	87 95       	ror	r24
     c8e:	96 95       	lsr	r25
     c90:	87 95       	ror	r24
     c92:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
     c96:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     c9a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     c9e:	56 95       	lsr	r21
     ca0:	47 95       	ror	r20
     ca2:	56 95       	lsr	r21
     ca4:	47 95       	ror	r20
     ca6:	61 e0       	ldi	r22, 0x01	; 1
     ca8:	80 e0       	ldi	r24, 0x00	; 0
     caa:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 1, SEMICORCHEA);
     cae:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     cb2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     cb6:	56 95       	lsr	r21
     cb8:	47 95       	ror	r20
     cba:	56 95       	lsr	r21
     cbc:	47 95       	ror	r20
     cbe:	61 e0       	ldi	r22, 0x01	; 1
     cc0:	84 e0       	ldi	r24, 0x04	; 4
     cc2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
     cc6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     cca:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     cce:	96 95       	lsr	r25
     cd0:	87 95       	ror	r24
     cd2:	96 95       	lsr	r25
     cd4:	87 95       	ror	r24
     cd6:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(7, 1, SEMICORCHEA);
     cda:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     cde:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     ce2:	56 95       	lsr	r21
     ce4:	47 95       	ror	r20
     ce6:	56 95       	lsr	r21
     ce8:	47 95       	ror	r20
     cea:	61 e0       	ldi	r22, 0x01	; 1
     cec:	87 e0       	ldi	r24, 0x07	; 7
     cee:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(CORCHEA + SEMICORCHEA);
     cf2:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     cf6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     cfa:	c9 01       	movw	r24, r18
     cfc:	96 95       	lsr	r25
     cfe:	87 95       	ror	r24
     d00:	36 95       	lsr	r19
     d02:	27 95       	ror	r18
     d04:	36 95       	lsr	r19
     d06:	27 95       	ror	r18
     d08:	82 0f       	add	r24, r18
     d0a:	93 1f       	adc	r25, r19
     d0c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(7, 0, CORCHEA);
     d10:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     d14:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     d18:	56 95       	lsr	r21
     d1a:	47 95       	ror	r20
     d1c:	60 e0       	ldi	r22, 0x00	; 0
     d1e:	87 e0       	ldi	r24, 0x07	; 7
     d20:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(CORCHEA);
     d24:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     d28:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     d2c:	96 95       	lsr	r25
     d2e:	87 95       	ror	r24
     d30:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	
	for (uint8_t i = 0; i < 2; i++){
     d34:	c0 e0       	ldi	r28, 0x00	; 0
     d36:	33 c1       	rjmp	.+614    	; 0xf9e <c_SuperMario+0x37a>
		
		// 2
		play_note_ms(0, 1, SEMICORCHEA);
     d38:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     d3c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     d40:	56 95       	lsr	r21
     d42:	47 95       	ror	r20
     d44:	56 95       	lsr	r21
     d46:	47 95       	ror	r20
     d48:	61 e0       	ldi	r22, 0x01	; 1
     d4a:	80 e0       	ldi	r24, 0x00	; 0
     d4c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
     d50:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     d54:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     d58:	96 95       	lsr	r25
     d5a:	87 95       	ror	r24
     d5c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(7, 0, SEMICORCHEA);
     d60:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     d64:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     d68:	56 95       	lsr	r21
     d6a:	47 95       	ror	r20
     d6c:	56 95       	lsr	r21
     d6e:	47 95       	ror	r20
     d70:	60 e0       	ldi	r22, 0x00	; 0
     d72:	87 e0       	ldi	r24, 0x07	; 7
     d74:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
     d78:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     d7c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     d80:	96 95       	lsr	r25
     d82:	87 95       	ror	r24
     d84:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(4, 0, SEMICORCHEA);
     d88:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     d8c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     d90:	56 95       	lsr	r21
     d92:	47 95       	ror	r20
     d94:	56 95       	lsr	r21
     d96:	47 95       	ror	r20
     d98:	60 e0       	ldi	r22, 0x00	; 0
     d9a:	84 e0       	ldi	r24, 0x04	; 4
     d9c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
     da0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     da4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     da8:	96 95       	lsr	r25
     daa:	87 95       	ror	r24
     dac:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(9, 0, SEMICORCHEA);
     db0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     db4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     db8:	56 95       	lsr	r21
     dba:	47 95       	ror	r20
     dbc:	56 95       	lsr	r21
     dbe:	47 95       	ror	r20
     dc0:	60 e0       	ldi	r22, 0x00	; 0
     dc2:	89 e0       	ldi	r24, 0x09	; 9
     dc4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
     dc8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     dcc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     dd0:	96 95       	lsr	r25
     dd2:	87 95       	ror	r24
     dd4:	96 95       	lsr	r25
     dd6:	87 95       	ror	r24
     dd8:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(11, 0, SEMICORCHEA);
     ddc:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     de0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     de4:	56 95       	lsr	r21
     de6:	47 95       	ror	r20
     de8:	56 95       	lsr	r21
     dea:	47 95       	ror	r20
     dec:	60 e0       	ldi	r22, 0x00	; 0
     dee:	8b e0       	ldi	r24, 0x0B	; 11
     df0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
     df4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     df8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     dfc:	96 95       	lsr	r25
     dfe:	87 95       	ror	r24
     e00:	96 95       	lsr	r25
     e02:	87 95       	ror	r24
     e04:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(10, 0, SEMICORCHEA);
     e08:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e0c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e10:	56 95       	lsr	r21
     e12:	47 95       	ror	r20
     e14:	56 95       	lsr	r21
     e16:	47 95       	ror	r20
     e18:	60 e0       	ldi	r22, 0x00	; 0
     e1a:	8a e0       	ldi	r24, 0x0A	; 10
     e1c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
     e20:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e24:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e28:	56 95       	lsr	r21
     e2a:	47 95       	ror	r20
     e2c:	56 95       	lsr	r21
     e2e:	47 95       	ror	r20
     e30:	60 e0       	ldi	r22, 0x00	; 0
     e32:	89 e0       	ldi	r24, 0x09	; 9
     e34:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
     e38:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e3c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e40:	96 95       	lsr	r25
     e42:	87 95       	ror	r24
     e44:	96 95       	lsr	r25
     e46:	87 95       	ror	r24
     e48:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		
		// 3
		play_note_ms(7, 0, SEMICORCHEA);
     e4c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e50:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e54:	56 95       	lsr	r21
     e56:	47 95       	ror	r20
     e58:	56 95       	lsr	r21
     e5a:	47 95       	ror	r20
     e5c:	60 e0       	ldi	r22, 0x00	; 0
     e5e:	87 e0       	ldi	r24, 0x07	; 7
     e60:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(4, 1, SEMICORCHEA);
     e64:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e68:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e6c:	56 95       	lsr	r21
     e6e:	47 95       	ror	r20
     e70:	56 95       	lsr	r21
     e72:	47 95       	ror	r20
     e74:	61 e0       	ldi	r22, 0x01	; 1
     e76:	84 e0       	ldi	r24, 0x04	; 4
     e78:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
     e7c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e80:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e84:	96 95       	lsr	r25
     e86:	87 95       	ror	r24
     e88:	96 95       	lsr	r25
     e8a:	87 95       	ror	r24
     e8c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(7, 1, SEMICORCHEA);
     e90:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e94:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e98:	56 95       	lsr	r21
     e9a:	47 95       	ror	r20
     e9c:	56 95       	lsr	r21
     e9e:	47 95       	ror	r20
     ea0:	61 e0       	ldi	r22, 0x01	; 1
     ea2:	87 e0       	ldi	r24, 0x07	; 7
     ea4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 1, SEMICORCHEA);
     ea8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     eac:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     eb0:	56 95       	lsr	r21
     eb2:	47 95       	ror	r20
     eb4:	56 95       	lsr	r21
     eb6:	47 95       	ror	r20
     eb8:	61 e0       	ldi	r22, 0x01	; 1
     eba:	89 e0       	ldi	r24, 0x09	; 9
     ebc:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
     ec0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     ec4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     ec8:	96 95       	lsr	r25
     eca:	87 95       	ror	r24
     ecc:	96 95       	lsr	r25
     ece:	87 95       	ror	r24
     ed0:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(5, 1, SEMICORCHEA);
     ed4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     ed8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     edc:	56 95       	lsr	r21
     ede:	47 95       	ror	r20
     ee0:	56 95       	lsr	r21
     ee2:	47 95       	ror	r20
     ee4:	61 e0       	ldi	r22, 0x01	; 1
     ee6:	85 e0       	ldi	r24, 0x05	; 5
     ee8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 1, SEMICORCHEA);
     eec:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     ef0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     ef4:	56 95       	lsr	r21
     ef6:	47 95       	ror	r20
     ef8:	56 95       	lsr	r21
     efa:	47 95       	ror	r20
     efc:	61 e0       	ldi	r22, 0x01	; 1
     efe:	87 e0       	ldi	r24, 0x07	; 7
     f00:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
     f04:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f08:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     f0c:	96 95       	lsr	r25
     f0e:	87 95       	ror	r24
     f10:	96 95       	lsr	r25
     f12:	87 95       	ror	r24
     f14:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(4, 1, SEMICORCHEA);
     f18:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f1c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     f20:	56 95       	lsr	r21
     f22:	47 95       	ror	r20
     f24:	56 95       	lsr	r21
     f26:	47 95       	ror	r20
     f28:	61 e0       	ldi	r22, 0x01	; 1
     f2a:	84 e0       	ldi	r24, 0x04	; 4
     f2c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
     f30:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f34:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     f38:	96 95       	lsr	r25
     f3a:	87 95       	ror	r24
     f3c:	96 95       	lsr	r25
     f3e:	87 95       	ror	r24
     f40:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(0, 1, SEMICORCHEA);
     f44:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f48:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     f4c:	56 95       	lsr	r21
     f4e:	47 95       	ror	r20
     f50:	56 95       	lsr	r21
     f52:	47 95       	ror	r20
     f54:	61 e0       	ldi	r22, 0x01	; 1
     f56:	80 e0       	ldi	r24, 0x00	; 0
     f58:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(2, 1, SEMICORCHEA);
     f5c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f60:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     f64:	56 95       	lsr	r21
     f66:	47 95       	ror	r20
     f68:	56 95       	lsr	r21
     f6a:	47 95       	ror	r20
     f6c:	61 e0       	ldi	r22, 0x01	; 1
     f6e:	82 e0       	ldi	r24, 0x02	; 2
     f70:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(11, 0, SEMICORCHEA);
     f74:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f78:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     f7c:	56 95       	lsr	r21
     f7e:	47 95       	ror	r20
     f80:	56 95       	lsr	r21
     f82:	47 95       	ror	r20
     f84:	60 e0       	ldi	r22, 0x00	; 0
     f86:	8b e0       	ldi	r24, 0x0B	; 11
     f88:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
     f8c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f90:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     f94:	96 95       	lsr	r25
     f96:	87 95       	ror	r24
     f98:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(7, 1, SEMICORCHEA);
	delay_ms_var(CORCHEA + SEMICORCHEA);
	play_note_ms(7, 0, CORCHEA);
	delay_ms_var(CORCHEA);
	
	for (uint8_t i = 0; i < 2; i++){
     f9c:	cf 5f       	subi	r28, 0xFF	; 255
     f9e:	c2 30       	cpi	r28, 0x02	; 2
     fa0:	08 f4       	brcc	.+2      	; 0xfa4 <c_SuperMario+0x380>
     fa2:	ca ce       	rjmp	.-620    	; 0xd38 <c_SuperMario+0x114>
     fa4:	c0 e0       	ldi	r28, 0x00	; 0
     fa6:	5d c2       	rjmp	.+1210   	; 0x1462 <c_SuperMario+0x83e>
		delay_ms_var(CORCHEA);
	}
	
	for (uint8_t i = 0; i < 2; i++){
		// 4
		delay_ms_var(CORCHEA);
     fa8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     fac:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     fb0:	96 95       	lsr	r25
     fb2:	87 95       	ror	r24
     fb4:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(7, 1, SEMICORCHEA);
     fb8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     fbc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     fc0:	56 95       	lsr	r21
     fc2:	47 95       	ror	r20
     fc4:	56 95       	lsr	r21
     fc6:	47 95       	ror	r20
     fc8:	61 e0       	ldi	r22, 0x01	; 1
     fca:	87 e0       	ldi	r24, 0x07	; 7
     fcc:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(6, 1, SEMICORCHEA);
     fd0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     fd4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     fd8:	56 95       	lsr	r21
     fda:	47 95       	ror	r20
     fdc:	56 95       	lsr	r21
     fde:	47 95       	ror	r20
     fe0:	61 e0       	ldi	r22, 0x01	; 1
     fe2:	86 e0       	ldi	r24, 0x06	; 6
     fe4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
     fe8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     fec:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     ff0:	56 95       	lsr	r21
     ff2:	47 95       	ror	r20
     ff4:	56 95       	lsr	r21
     ff6:	47 95       	ror	r20
     ff8:	61 e0       	ldi	r22, 0x01	; 1
     ffa:	85 e0       	ldi	r24, 0x05	; 5
     ffc:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(3, 1, SEMICORCHEA);
    1000:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1004:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1008:	56 95       	lsr	r21
    100a:	47 95       	ror	r20
    100c:	56 95       	lsr	r21
    100e:	47 95       	ror	r20
    1010:	61 e0       	ldi	r22, 0x01	; 1
    1012:	83 e0       	ldi	r24, 0x03	; 3
    1014:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    1018:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    101c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1020:	96 95       	lsr	r25
    1022:	87 95       	ror	r24
    1024:	96 95       	lsr	r25
    1026:	87 95       	ror	r24
    1028:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(4, 1, SEMICORCHEA);
    102c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1030:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1034:	56 95       	lsr	r21
    1036:	47 95       	ror	r20
    1038:	56 95       	lsr	r21
    103a:	47 95       	ror	r20
    103c:	61 e0       	ldi	r22, 0x01	; 1
    103e:	84 e0       	ldi	r24, 0x04	; 4
    1040:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    1044:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1048:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    104c:	96 95       	lsr	r25
    104e:	87 95       	ror	r24
    1050:	96 95       	lsr	r25
    1052:	87 95       	ror	r24
    1054:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(8, 0, SEMICORCHEA);
    1058:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    105c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1060:	56 95       	lsr	r21
    1062:	47 95       	ror	r20
    1064:	56 95       	lsr	r21
    1066:	47 95       	ror	r20
    1068:	60 e0       	ldi	r22, 0x00	; 0
    106a:	88 e0       	ldi	r24, 0x08	; 8
    106c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
    1070:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1074:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1078:	56 95       	lsr	r21
    107a:	47 95       	ror	r20
    107c:	56 95       	lsr	r21
    107e:	47 95       	ror	r20
    1080:	60 e0       	ldi	r22, 0x00	; 0
    1082:	89 e0       	ldi	r24, 0x09	; 9
    1084:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, SEMICORCHEA);
    1088:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    108c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1090:	56 95       	lsr	r21
    1092:	47 95       	ror	r20
    1094:	56 95       	lsr	r21
    1096:	47 95       	ror	r20
    1098:	61 e0       	ldi	r22, 0x01	; 1
    109a:	80 e0       	ldi	r24, 0x00	; 0
    109c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    10a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    10a4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    10a8:	96 95       	lsr	r25
    10aa:	87 95       	ror	r24
    10ac:	96 95       	lsr	r25
    10ae:	87 95       	ror	r24
    10b0:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(9, 0, SEMICORCHEA);
    10b4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    10b8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    10bc:	56 95       	lsr	r21
    10be:	47 95       	ror	r20
    10c0:	56 95       	lsr	r21
    10c2:	47 95       	ror	r20
    10c4:	60 e0       	ldi	r22, 0x00	; 0
    10c6:	89 e0       	ldi	r24, 0x09	; 9
    10c8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, SEMICORCHEA);
    10cc:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    10d0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    10d4:	56 95       	lsr	r21
    10d6:	47 95       	ror	r20
    10d8:	56 95       	lsr	r21
    10da:	47 95       	ror	r20
    10dc:	61 e0       	ldi	r22, 0x01	; 1
    10de:	80 e0       	ldi	r24, 0x00	; 0
    10e0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(2, 1, SEMICORCHEA);
    10e4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    10e8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    10ec:	56 95       	lsr	r21
    10ee:	47 95       	ror	r20
    10f0:	56 95       	lsr	r21
    10f2:	47 95       	ror	r20
    10f4:	61 e0       	ldi	r22, 0x01	; 1
    10f6:	82 e0       	ldi	r24, 0x02	; 2
    10f8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		
		// 5
		delay_ms_var(CORCHEA);
    10fc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1100:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1104:	96 95       	lsr	r25
    1106:	87 95       	ror	r24
    1108:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(7, 1, SEMICORCHEA);
    110c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1110:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1114:	56 95       	lsr	r21
    1116:	47 95       	ror	r20
    1118:	56 95       	lsr	r21
    111a:	47 95       	ror	r20
    111c:	61 e0       	ldi	r22, 0x01	; 1
    111e:	87 e0       	ldi	r24, 0x07	; 7
    1120:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(6, 1, SEMICORCHEA);
    1124:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1128:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    112c:	56 95       	lsr	r21
    112e:	47 95       	ror	r20
    1130:	56 95       	lsr	r21
    1132:	47 95       	ror	r20
    1134:	61 e0       	ldi	r22, 0x01	; 1
    1136:	86 e0       	ldi	r24, 0x06	; 6
    1138:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
    113c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1140:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1144:	56 95       	lsr	r21
    1146:	47 95       	ror	r20
    1148:	56 95       	lsr	r21
    114a:	47 95       	ror	r20
    114c:	61 e0       	ldi	r22, 0x01	; 1
    114e:	85 e0       	ldi	r24, 0x05	; 5
    1150:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(3, 1, SEMICORCHEA);
    1154:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1158:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    115c:	56 95       	lsr	r21
    115e:	47 95       	ror	r20
    1160:	56 95       	lsr	r21
    1162:	47 95       	ror	r20
    1164:	61 e0       	ldi	r22, 0x01	; 1
    1166:	83 e0       	ldi	r24, 0x03	; 3
    1168:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    116c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1170:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1174:	96 95       	lsr	r25
    1176:	87 95       	ror	r24
    1178:	96 95       	lsr	r25
    117a:	87 95       	ror	r24
    117c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(4, 1, SEMICORCHEA);
    1180:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1184:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1188:	56 95       	lsr	r21
    118a:	47 95       	ror	r20
    118c:	56 95       	lsr	r21
    118e:	47 95       	ror	r20
    1190:	61 e0       	ldi	r22, 0x01	; 1
    1192:	84 e0       	ldi	r24, 0x04	; 4
    1194:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    1198:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    119c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    11a0:	96 95       	lsr	r25
    11a2:	87 95       	ror	r24
    11a4:	96 95       	lsr	r25
    11a6:	87 95       	ror	r24
    11a8:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(0, 2, SEMICORCHEA);
    11ac:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    11b0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    11b4:	56 95       	lsr	r21
    11b6:	47 95       	ror	r20
    11b8:	56 95       	lsr	r21
    11ba:	47 95       	ror	r20
    11bc:	62 e0       	ldi	r22, 0x02	; 2
    11be:	80 e0       	ldi	r24, 0x00	; 0
    11c0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    11c4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    11c8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    11cc:	96 95       	lsr	r25
    11ce:	87 95       	ror	r24
    11d0:	96 95       	lsr	r25
    11d2:	87 95       	ror	r24
    11d4:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(0, 2, SEMICORCHEA);
    11d8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    11dc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    11e0:	56 95       	lsr	r21
    11e2:	47 95       	ror	r20
    11e4:	56 95       	lsr	r21
    11e6:	47 95       	ror	r20
    11e8:	62 e0       	ldi	r22, 0x02	; 2
    11ea:	80 e0       	ldi	r24, 0x00	; 0
    11ec:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 2, CORCHEA);
    11f0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    11f4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    11f8:	56 95       	lsr	r21
    11fa:	47 95       	ror	r20
    11fc:	62 e0       	ldi	r22, 0x02	; 2
    11fe:	80 e0       	ldi	r24, 0x00	; 0
    1200:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    1204:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1208:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    120c:	96 95       	lsr	r25
    120e:	87 95       	ror	r24
    1210:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		
		// 6
		delay_ms_var(CORCHEA);
    1214:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1218:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    121c:	96 95       	lsr	r25
    121e:	87 95       	ror	r24
    1220:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(7, 1, SEMICORCHEA);
    1224:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1228:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    122c:	56 95       	lsr	r21
    122e:	47 95       	ror	r20
    1230:	56 95       	lsr	r21
    1232:	47 95       	ror	r20
    1234:	61 e0       	ldi	r22, 0x01	; 1
    1236:	87 e0       	ldi	r24, 0x07	; 7
    1238:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(6, 1, SEMICORCHEA);
    123c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1240:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1244:	56 95       	lsr	r21
    1246:	47 95       	ror	r20
    1248:	56 95       	lsr	r21
    124a:	47 95       	ror	r20
    124c:	61 e0       	ldi	r22, 0x01	; 1
    124e:	86 e0       	ldi	r24, 0x06	; 6
    1250:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
    1254:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1258:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    125c:	56 95       	lsr	r21
    125e:	47 95       	ror	r20
    1260:	56 95       	lsr	r21
    1262:	47 95       	ror	r20
    1264:	61 e0       	ldi	r22, 0x01	; 1
    1266:	85 e0       	ldi	r24, 0x05	; 5
    1268:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(3, 1, SEMICORCHEA);
    126c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1270:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1274:	56 95       	lsr	r21
    1276:	47 95       	ror	r20
    1278:	56 95       	lsr	r21
    127a:	47 95       	ror	r20
    127c:	61 e0       	ldi	r22, 0x01	; 1
    127e:	83 e0       	ldi	r24, 0x03	; 3
    1280:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    1284:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1288:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    128c:	96 95       	lsr	r25
    128e:	87 95       	ror	r24
    1290:	96 95       	lsr	r25
    1292:	87 95       	ror	r24
    1294:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(4, 1, SEMICORCHEA);
    1298:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    129c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    12a0:	56 95       	lsr	r21
    12a2:	47 95       	ror	r20
    12a4:	56 95       	lsr	r21
    12a6:	47 95       	ror	r20
    12a8:	61 e0       	ldi	r22, 0x01	; 1
    12aa:	84 e0       	ldi	r24, 0x04	; 4
    12ac:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    12b0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    12b4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    12b8:	96 95       	lsr	r25
    12ba:	87 95       	ror	r24
    12bc:	96 95       	lsr	r25
    12be:	87 95       	ror	r24
    12c0:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(8, 0, SEMICORCHEA);
    12c4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    12c8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    12cc:	56 95       	lsr	r21
    12ce:	47 95       	ror	r20
    12d0:	56 95       	lsr	r21
    12d2:	47 95       	ror	r20
    12d4:	60 e0       	ldi	r22, 0x00	; 0
    12d6:	88 e0       	ldi	r24, 0x08	; 8
    12d8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
    12dc:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    12e0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    12e4:	56 95       	lsr	r21
    12e6:	47 95       	ror	r20
    12e8:	56 95       	lsr	r21
    12ea:	47 95       	ror	r20
    12ec:	60 e0       	ldi	r22, 0x00	; 0
    12ee:	89 e0       	ldi	r24, 0x09	; 9
    12f0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, SEMICORCHEA);
    12f4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    12f8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    12fc:	56 95       	lsr	r21
    12fe:	47 95       	ror	r20
    1300:	56 95       	lsr	r21
    1302:	47 95       	ror	r20
    1304:	61 e0       	ldi	r22, 0x01	; 1
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    130c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1310:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1314:	96 95       	lsr	r25
    1316:	87 95       	ror	r24
    1318:	96 95       	lsr	r25
    131a:	87 95       	ror	r24
    131c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(9, 0, SEMICORCHEA);
    1320:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1324:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1328:	56 95       	lsr	r21
    132a:	47 95       	ror	r20
    132c:	56 95       	lsr	r21
    132e:	47 95       	ror	r20
    1330:	60 e0       	ldi	r22, 0x00	; 0
    1332:	89 e0       	ldi	r24, 0x09	; 9
    1334:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, SEMICORCHEA);
    1338:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    133c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1340:	56 95       	lsr	r21
    1342:	47 95       	ror	r20
    1344:	56 95       	lsr	r21
    1346:	47 95       	ror	r20
    1348:	61 e0       	ldi	r22, 0x01	; 1
    134a:	80 e0       	ldi	r24, 0x00	; 0
    134c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(2, 1, SEMICORCHEA);
    1350:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1354:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1358:	56 95       	lsr	r21
    135a:	47 95       	ror	r20
    135c:	56 95       	lsr	r21
    135e:	47 95       	ror	r20
    1360:	61 e0       	ldi	r22, 0x01	; 1
    1362:	82 e0       	ldi	r24, 0x02	; 2
    1364:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		
		// 7
		delay_ms_var(CORCHEA);
    1368:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    136c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1370:	96 95       	lsr	r25
    1372:	87 95       	ror	r24
    1374:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(3, 1, SEMICORCHEA);
    1378:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    137c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1380:	56 95       	lsr	r21
    1382:	47 95       	ror	r20
    1384:	56 95       	lsr	r21
    1386:	47 95       	ror	r20
    1388:	61 e0       	ldi	r22, 0x01	; 1
    138a:	83 e0       	ldi	r24, 0x03	; 3
    138c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    1390:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1394:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1398:	96 95       	lsr	r25
    139a:	87 95       	ror	r24
    139c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(2, 1, SEMICORCHEA);
    13a0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    13a4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    13a8:	56 95       	lsr	r21
    13aa:	47 95       	ror	r20
    13ac:	56 95       	lsr	r21
    13ae:	47 95       	ror	r20
    13b0:	61 e0       	ldi	r22, 0x01	; 1
    13b2:	82 e0       	ldi	r24, 0x02	; 2
    13b4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    13b8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    13bc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    13c0:	96 95       	lsr	r25
    13c2:	87 95       	ror	r24
    13c4:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(0, 1, SEMICORCHEA);
    13c8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    13cc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    13d0:	56 95       	lsr	r21
    13d2:	47 95       	ror	r20
    13d4:	56 95       	lsr	r21
    13d6:	47 95       	ror	r20
    13d8:	61 e0       	ldi	r22, 0x01	; 1
    13da:	80 e0       	ldi	r24, 0x00	; 0
    13dc:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    13e0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    13e4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    13e8:	96 95       	lsr	r25
    13ea:	87 95       	ror	r24
    13ec:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(7, 0, SEMICORCHEA);
    13f0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    13f4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    13f8:	56 95       	lsr	r21
    13fa:	47 95       	ror	r20
    13fc:	56 95       	lsr	r21
    13fe:	47 95       	ror	r20
    1400:	60 e0       	ldi	r22, 0x00	; 0
    1402:	87 e0       	ldi	r24, 0x07	; 7
    1404:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 0, SEMICORCHEA);
    1408:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    140c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1410:	56 95       	lsr	r21
    1412:	47 95       	ror	r20
    1414:	56 95       	lsr	r21
    1416:	47 95       	ror	r20
    1418:	60 e0       	ldi	r22, 0x00	; 0
    141a:	87 e0       	ldi	r24, 0x07	; 7
    141c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    1420:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1424:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1428:	96 95       	lsr	r25
    142a:	87 95       	ror	r24
    142c:	96 95       	lsr	r25
    142e:	87 95       	ror	r24
    1430:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(7, 0, SEMICORCHEA);
    1434:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1438:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    143c:	56 95       	lsr	r21
    143e:	47 95       	ror	r20
    1440:	56 95       	lsr	r21
    1442:	47 95       	ror	r20
    1444:	60 e0       	ldi	r22, 0x00	; 0
    1446:	87 e0       	ldi	r24, 0x07	; 7
    1448:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    144c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1450:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1454:	96 95       	lsr	r25
    1456:	87 95       	ror	r24
    1458:	96 95       	lsr	r25
    145a:	87 95       	ror	r24
    145c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(2, 1, SEMICORCHEA);
		play_note_ms(11, 0, SEMICORCHEA);
		delay_ms_var(CORCHEA);
	}
	
	for (uint8_t i = 0; i < 2; i++){
    1460:	cf 5f       	subi	r28, 0xFF	; 255
    1462:	c2 30       	cpi	r28, 0x02	; 2
    1464:	08 f4       	brcc	.+2      	; 0x1468 <c_SuperMario+0x844>
    1466:	a0 cd       	rjmp	.-1216   	; 0xfa8 <c_SuperMario+0x384>
		play_note_ms(7, 0, SEMICORCHEA);
		delay_ms_var(SEMICORCHEA);
	}
	
	// 8
	play_note_ms(0, 1, SEMICORCHEA);
    1468:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    146c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1470:	56 95       	lsr	r21
    1472:	47 95       	ror	r20
    1474:	56 95       	lsr	r21
    1476:	47 95       	ror	r20
    1478:	61 e0       	ldi	r22, 0x01	; 1
    147a:	80 e0       	ldi	r24, 0x00	; 0
    147c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
    1480:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1484:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1488:	56 95       	lsr	r21
    148a:	47 95       	ror	r20
    148c:	56 95       	lsr	r21
    148e:	47 95       	ror	r20
    1490:	61 e0       	ldi	r22, 0x01	; 1
    1492:	80 e0       	ldi	r24, 0x00	; 0
    1494:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    1498:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    149c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    14a0:	96 95       	lsr	r25
    14a2:	87 95       	ror	r24
    14a4:	96 95       	lsr	r25
    14a6:	87 95       	ror	r24
    14a8:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    14ac:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    14b0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    14b4:	56 95       	lsr	r21
    14b6:	47 95       	ror	r20
    14b8:	56 95       	lsr	r21
    14ba:	47 95       	ror	r20
    14bc:	61 e0       	ldi	r22, 0x01	; 1
    14be:	80 e0       	ldi	r24, 0x00	; 0
    14c0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    14c4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    14c8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    14cc:	96 95       	lsr	r25
    14ce:	87 95       	ror	r24
    14d0:	96 95       	lsr	r25
    14d2:	87 95       	ror	r24
    14d4:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    14d8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    14dc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    14e0:	56 95       	lsr	r21
    14e2:	47 95       	ror	r20
    14e4:	56 95       	lsr	r21
    14e6:	47 95       	ror	r20
    14e8:	61 e0       	ldi	r22, 0x01	; 1
    14ea:	80 e0       	ldi	r24, 0x00	; 0
    14ec:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(2, 1, SEMICORCHEA);
    14f0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    14f4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    14f8:	56 95       	lsr	r21
    14fa:	47 95       	ror	r20
    14fc:	56 95       	lsr	r21
    14fe:	47 95       	ror	r20
    1500:	61 e0       	ldi	r22, 0x01	; 1
    1502:	82 e0       	ldi	r24, 0x02	; 2
    1504:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    1508:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    150c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1510:	96 95       	lsr	r25
    1512:	87 95       	ror	r24
    1514:	96 95       	lsr	r25
    1516:	87 95       	ror	r24
    1518:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(4, 1, SEMICORCHEA);
    151c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1520:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1524:	56 95       	lsr	r21
    1526:	47 95       	ror	r20
    1528:	56 95       	lsr	r21
    152a:	47 95       	ror	r20
    152c:	61 e0       	ldi	r22, 0x01	; 1
    152e:	84 e0       	ldi	r24, 0x04	; 4
    1530:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
    1534:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1538:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    153c:	56 95       	lsr	r21
    153e:	47 95       	ror	r20
    1540:	56 95       	lsr	r21
    1542:	47 95       	ror	r20
    1544:	61 e0       	ldi	r22, 0x01	; 1
    1546:	80 e0       	ldi	r24, 0x00	; 0
    1548:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    154c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1550:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1554:	96 95       	lsr	r25
    1556:	87 95       	ror	r24
    1558:	96 95       	lsr	r25
    155a:	87 95       	ror	r24
    155c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(9, 0, SEMICORCHEA);
    1560:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1564:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1568:	56 95       	lsr	r21
    156a:	47 95       	ror	r20
    156c:	56 95       	lsr	r21
    156e:	47 95       	ror	r20
    1570:	60 e0       	ldi	r22, 0x00	; 0
    1572:	89 e0       	ldi	r24, 0x09	; 9
    1574:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(7, 0, CORCHEA);
    1578:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    157c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1580:	56 95       	lsr	r21
    1582:	47 95       	ror	r20
    1584:	60 e0       	ldi	r22, 0x00	; 0
    1586:	87 e0       	ldi	r24, 0x07	; 7
    1588:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(CORCHEA);
    158c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1590:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1594:	96 95       	lsr	r25
    1596:	87 95       	ror	r24
    1598:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	
	// 9
	play_note_ms(0, 1, SEMICORCHEA);
    159c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    15a0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    15a4:	56 95       	lsr	r21
    15a6:	47 95       	ror	r20
    15a8:	56 95       	lsr	r21
    15aa:	47 95       	ror	r20
    15ac:	61 e0       	ldi	r22, 0x01	; 1
    15ae:	80 e0       	ldi	r24, 0x00	; 0
    15b0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
    15b4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    15b8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    15bc:	56 95       	lsr	r21
    15be:	47 95       	ror	r20
    15c0:	56 95       	lsr	r21
    15c2:	47 95       	ror	r20
    15c4:	61 e0       	ldi	r22, 0x01	; 1
    15c6:	80 e0       	ldi	r24, 0x00	; 0
    15c8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    15cc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    15d0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    15d4:	96 95       	lsr	r25
    15d6:	87 95       	ror	r24
    15d8:	96 95       	lsr	r25
    15da:	87 95       	ror	r24
    15dc:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    15e0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    15e4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    15e8:	56 95       	lsr	r21
    15ea:	47 95       	ror	r20
    15ec:	56 95       	lsr	r21
    15ee:	47 95       	ror	r20
    15f0:	61 e0       	ldi	r22, 0x01	; 1
    15f2:	80 e0       	ldi	r24, 0x00	; 0
    15f4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    15f8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    15fc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1600:	96 95       	lsr	r25
    1602:	87 95       	ror	r24
    1604:	96 95       	lsr	r25
    1606:	87 95       	ror	r24
    1608:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    160c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1610:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1614:	56 95       	lsr	r21
    1616:	47 95       	ror	r20
    1618:	56 95       	lsr	r21
    161a:	47 95       	ror	r20
    161c:	61 e0       	ldi	r22, 0x01	; 1
    161e:	80 e0       	ldi	r24, 0x00	; 0
    1620:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(2, 1, SEMICORCHEA);
    1624:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1628:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    162c:	56 95       	lsr	r21
    162e:	47 95       	ror	r20
    1630:	56 95       	lsr	r21
    1632:	47 95       	ror	r20
    1634:	61 e0       	ldi	r22, 0x01	; 1
    1636:	82 e0       	ldi	r24, 0x02	; 2
    1638:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 1, SEMICORCHEA);
    163c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1640:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1644:	56 95       	lsr	r21
    1646:	47 95       	ror	r20
    1648:	56 95       	lsr	r21
    164a:	47 95       	ror	r20
    164c:	61 e0       	ldi	r22, 0x01	; 1
    164e:	84 e0       	ldi	r24, 0x04	; 4
    1650:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(BLANCA);
    1654:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1658:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    165c:	88 0f       	add	r24, r24
    165e:	99 1f       	adc	r25, r25
    1660:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	
	// 8
	play_note_ms(0, 1, SEMICORCHEA);
    1664:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1668:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    166c:	56 95       	lsr	r21
    166e:	47 95       	ror	r20
    1670:	56 95       	lsr	r21
    1672:	47 95       	ror	r20
    1674:	61 e0       	ldi	r22, 0x01	; 1
    1676:	80 e0       	ldi	r24, 0x00	; 0
    1678:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
    167c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1680:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1684:	56 95       	lsr	r21
    1686:	47 95       	ror	r20
    1688:	56 95       	lsr	r21
    168a:	47 95       	ror	r20
    168c:	61 e0       	ldi	r22, 0x01	; 1
    168e:	80 e0       	ldi	r24, 0x00	; 0
    1690:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    1694:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1698:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    169c:	96 95       	lsr	r25
    169e:	87 95       	ror	r24
    16a0:	96 95       	lsr	r25
    16a2:	87 95       	ror	r24
    16a4:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    16a8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    16ac:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    16b0:	56 95       	lsr	r21
    16b2:	47 95       	ror	r20
    16b4:	56 95       	lsr	r21
    16b6:	47 95       	ror	r20
    16b8:	61 e0       	ldi	r22, 0x01	; 1
    16ba:	80 e0       	ldi	r24, 0x00	; 0
    16bc:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    16c0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    16c4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    16c8:	96 95       	lsr	r25
    16ca:	87 95       	ror	r24
    16cc:	96 95       	lsr	r25
    16ce:	87 95       	ror	r24
    16d0:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    16d4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    16d8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    16dc:	56 95       	lsr	r21
    16de:	47 95       	ror	r20
    16e0:	56 95       	lsr	r21
    16e2:	47 95       	ror	r20
    16e4:	61 e0       	ldi	r22, 0x01	; 1
    16e6:	80 e0       	ldi	r24, 0x00	; 0
    16e8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(2, 1, SEMICORCHEA);
    16ec:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    16f0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    16f4:	56 95       	lsr	r21
    16f6:	47 95       	ror	r20
    16f8:	56 95       	lsr	r21
    16fa:	47 95       	ror	r20
    16fc:	61 e0       	ldi	r22, 0x01	; 1
    16fe:	82 e0       	ldi	r24, 0x02	; 2
    1700:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    1704:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1708:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    170c:	96 95       	lsr	r25
    170e:	87 95       	ror	r24
    1710:	96 95       	lsr	r25
    1712:	87 95       	ror	r24
    1714:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(4, 1, SEMICORCHEA);
    1718:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    171c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1720:	56 95       	lsr	r21
    1722:	47 95       	ror	r20
    1724:	56 95       	lsr	r21
    1726:	47 95       	ror	r20
    1728:	61 e0       	ldi	r22, 0x01	; 1
    172a:	84 e0       	ldi	r24, 0x04	; 4
    172c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
    1730:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1734:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1738:	56 95       	lsr	r21
    173a:	47 95       	ror	r20
    173c:	56 95       	lsr	r21
    173e:	47 95       	ror	r20
    1740:	61 e0       	ldi	r22, 0x01	; 1
    1742:	80 e0       	ldi	r24, 0x00	; 0
    1744:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    1748:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    174c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1750:	96 95       	lsr	r25
    1752:	87 95       	ror	r24
    1754:	96 95       	lsr	r25
    1756:	87 95       	ror	r24
    1758:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(9, 0, SEMICORCHEA);
    175c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1760:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1764:	56 95       	lsr	r21
    1766:	47 95       	ror	r20
    1768:	56 95       	lsr	r21
    176a:	47 95       	ror	r20
    176c:	60 e0       	ldi	r22, 0x00	; 0
    176e:	89 e0       	ldi	r24, 0x09	; 9
    1770:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(7, 0, CORCHEA);
    1774:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1778:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    177c:	56 95       	lsr	r21
    177e:	47 95       	ror	r20
    1780:	60 e0       	ldi	r22, 0x00	; 0
    1782:	87 e0       	ldi	r24, 0x07	; 7
    1784:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(CORCHEA);
    1788:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    178c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1790:	96 95       	lsr	r25
    1792:	87 95       	ror	r24
    1794:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	
	// 1
	play_note_ms(4, 1, SEMICORCHEA);
    1798:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    179c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    17a0:	56 95       	lsr	r21
    17a2:	47 95       	ror	r20
    17a4:	56 95       	lsr	r21
    17a6:	47 95       	ror	r20
    17a8:	61 e0       	ldi	r22, 0x01	; 1
    17aa:	84 e0       	ldi	r24, 0x04	; 4
    17ac:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 1, SEMICORCHEA);
    17b0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    17b4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    17b8:	56 95       	lsr	r21
    17ba:	47 95       	ror	r20
    17bc:	56 95       	lsr	r21
    17be:	47 95       	ror	r20
    17c0:	61 e0       	ldi	r22, 0x01	; 1
    17c2:	84 e0       	ldi	r24, 0x04	; 4
    17c4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    17c8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    17cc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    17d0:	96 95       	lsr	r25
    17d2:	87 95       	ror	r24
    17d4:	96 95       	lsr	r25
    17d6:	87 95       	ror	r24
    17d8:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(4, 1, SEMICORCHEA);
    17dc:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    17e0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    17e4:	56 95       	lsr	r21
    17e6:	47 95       	ror	r20
    17e8:	56 95       	lsr	r21
    17ea:	47 95       	ror	r20
    17ec:	61 e0       	ldi	r22, 0x01	; 1
    17ee:	84 e0       	ldi	r24, 0x04	; 4
    17f0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    17f4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    17f8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    17fc:	96 95       	lsr	r25
    17fe:	87 95       	ror	r24
    1800:	96 95       	lsr	r25
    1802:	87 95       	ror	r24
    1804:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    1808:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    180c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1810:	56 95       	lsr	r21
    1812:	47 95       	ror	r20
    1814:	56 95       	lsr	r21
    1816:	47 95       	ror	r20
    1818:	61 e0       	ldi	r22, 0x01	; 1
    181a:	80 e0       	ldi	r24, 0x00	; 0
    181c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 1, SEMICORCHEA);
    1820:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1824:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1828:	56 95       	lsr	r21
    182a:	47 95       	ror	r20
    182c:	56 95       	lsr	r21
    182e:	47 95       	ror	r20
    1830:	61 e0       	ldi	r22, 0x01	; 1
    1832:	84 e0       	ldi	r24, 0x04	; 4
    1834:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    1838:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    183c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1840:	96 95       	lsr	r25
    1842:	87 95       	ror	r24
    1844:	96 95       	lsr	r25
    1846:	87 95       	ror	r24
    1848:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(7, 1, CORCHEA);
    184c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1850:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1854:	56 95       	lsr	r21
    1856:	47 95       	ror	r20
    1858:	61 e0       	ldi	r22, 0x01	; 1
    185a:	87 e0       	ldi	r24, 0x07	; 7
    185c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(CORCHEA);
    1860:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1864:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1868:	96 95       	lsr	r25
    186a:	87 95       	ror	r24
    186c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(7, 0, CORCHEA);
    1870:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1874:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1878:	56 95       	lsr	r21
    187a:	47 95       	ror	r20
    187c:	60 e0       	ldi	r22, 0x00	; 0
    187e:	87 e0       	ldi	r24, 0x07	; 7
    1880:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(CORCHEA);
    1884:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1888:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    188c:	96 95       	lsr	r25
    188e:	87 95       	ror	r24
    1890:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	
	for (uint8_t i = 0; i < 2; i++){
    1894:	c0 e0       	ldi	r28, 0x00	; 0
    1896:	33 c1       	rjmp	.+614    	; 0x1afe <c_SuperMario+0xeda>
		
		// 2
		play_note_ms(0, 1, SEMICORCHEA);
    1898:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    189c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    18a0:	56 95       	lsr	r21
    18a2:	47 95       	ror	r20
    18a4:	56 95       	lsr	r21
    18a6:	47 95       	ror	r20
    18a8:	61 e0       	ldi	r22, 0x01	; 1
    18aa:	80 e0       	ldi	r24, 0x00	; 0
    18ac:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    18b0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    18b4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    18b8:	96 95       	lsr	r25
    18ba:	87 95       	ror	r24
    18bc:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(7, 0, SEMICORCHEA);
    18c0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    18c4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    18c8:	56 95       	lsr	r21
    18ca:	47 95       	ror	r20
    18cc:	56 95       	lsr	r21
    18ce:	47 95       	ror	r20
    18d0:	60 e0       	ldi	r22, 0x00	; 0
    18d2:	87 e0       	ldi	r24, 0x07	; 7
    18d4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    18d8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    18dc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    18e0:	96 95       	lsr	r25
    18e2:	87 95       	ror	r24
    18e4:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(4, 0, SEMICORCHEA);
    18e8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    18ec:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    18f0:	56 95       	lsr	r21
    18f2:	47 95       	ror	r20
    18f4:	56 95       	lsr	r21
    18f6:	47 95       	ror	r20
    18f8:	60 e0       	ldi	r22, 0x00	; 0
    18fa:	84 e0       	ldi	r24, 0x04	; 4
    18fc:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    1900:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1904:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1908:	96 95       	lsr	r25
    190a:	87 95       	ror	r24
    190c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(9, 0, SEMICORCHEA);
    1910:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1914:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1918:	56 95       	lsr	r21
    191a:	47 95       	ror	r20
    191c:	56 95       	lsr	r21
    191e:	47 95       	ror	r20
    1920:	60 e0       	ldi	r22, 0x00	; 0
    1922:	89 e0       	ldi	r24, 0x09	; 9
    1924:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    1928:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    192c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1930:	96 95       	lsr	r25
    1932:	87 95       	ror	r24
    1934:	96 95       	lsr	r25
    1936:	87 95       	ror	r24
    1938:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(11, 0, SEMICORCHEA);
    193c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1940:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1944:	56 95       	lsr	r21
    1946:	47 95       	ror	r20
    1948:	56 95       	lsr	r21
    194a:	47 95       	ror	r20
    194c:	60 e0       	ldi	r22, 0x00	; 0
    194e:	8b e0       	ldi	r24, 0x0B	; 11
    1950:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    1954:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1958:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    195c:	96 95       	lsr	r25
    195e:	87 95       	ror	r24
    1960:	96 95       	lsr	r25
    1962:	87 95       	ror	r24
    1964:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(10, 0, SEMICORCHEA);
    1968:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    196c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1970:	56 95       	lsr	r21
    1972:	47 95       	ror	r20
    1974:	56 95       	lsr	r21
    1976:	47 95       	ror	r20
    1978:	60 e0       	ldi	r22, 0x00	; 0
    197a:	8a e0       	ldi	r24, 0x0A	; 10
    197c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
    1980:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1984:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1988:	56 95       	lsr	r21
    198a:	47 95       	ror	r20
    198c:	56 95       	lsr	r21
    198e:	47 95       	ror	r20
    1990:	60 e0       	ldi	r22, 0x00	; 0
    1992:	89 e0       	ldi	r24, 0x09	; 9
    1994:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    1998:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    199c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    19a0:	96 95       	lsr	r25
    19a2:	87 95       	ror	r24
    19a4:	96 95       	lsr	r25
    19a6:	87 95       	ror	r24
    19a8:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		
		// 3
		play_note_ms(7, 0, SEMICORCHEA);
    19ac:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    19b0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    19b4:	56 95       	lsr	r21
    19b6:	47 95       	ror	r20
    19b8:	56 95       	lsr	r21
    19ba:	47 95       	ror	r20
    19bc:	60 e0       	ldi	r22, 0x00	; 0
    19be:	87 e0       	ldi	r24, 0x07	; 7
    19c0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(4, 1, SEMICORCHEA);
    19c4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    19c8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    19cc:	56 95       	lsr	r21
    19ce:	47 95       	ror	r20
    19d0:	56 95       	lsr	r21
    19d2:	47 95       	ror	r20
    19d4:	61 e0       	ldi	r22, 0x01	; 1
    19d6:	84 e0       	ldi	r24, 0x04	; 4
    19d8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    19dc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    19e0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    19e4:	96 95       	lsr	r25
    19e6:	87 95       	ror	r24
    19e8:	96 95       	lsr	r25
    19ea:	87 95       	ror	r24
    19ec:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(7, 1, SEMICORCHEA);
    19f0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    19f4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    19f8:	56 95       	lsr	r21
    19fa:	47 95       	ror	r20
    19fc:	56 95       	lsr	r21
    19fe:	47 95       	ror	r20
    1a00:	61 e0       	ldi	r22, 0x01	; 1
    1a02:	87 e0       	ldi	r24, 0x07	; 7
    1a04:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 1, SEMICORCHEA);
    1a08:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a0c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a10:	56 95       	lsr	r21
    1a12:	47 95       	ror	r20
    1a14:	56 95       	lsr	r21
    1a16:	47 95       	ror	r20
    1a18:	61 e0       	ldi	r22, 0x01	; 1
    1a1a:	89 e0       	ldi	r24, 0x09	; 9
    1a1c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    1a20:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a24:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a28:	96 95       	lsr	r25
    1a2a:	87 95       	ror	r24
    1a2c:	96 95       	lsr	r25
    1a2e:	87 95       	ror	r24
    1a30:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(5, 1, SEMICORCHEA);
    1a34:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a38:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a3c:	56 95       	lsr	r21
    1a3e:	47 95       	ror	r20
    1a40:	56 95       	lsr	r21
    1a42:	47 95       	ror	r20
    1a44:	61 e0       	ldi	r22, 0x01	; 1
    1a46:	85 e0       	ldi	r24, 0x05	; 5
    1a48:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 1, SEMICORCHEA);
    1a4c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a50:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a54:	56 95       	lsr	r21
    1a56:	47 95       	ror	r20
    1a58:	56 95       	lsr	r21
    1a5a:	47 95       	ror	r20
    1a5c:	61 e0       	ldi	r22, 0x01	; 1
    1a5e:	87 e0       	ldi	r24, 0x07	; 7
    1a60:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    1a64:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a68:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a6c:	96 95       	lsr	r25
    1a6e:	87 95       	ror	r24
    1a70:	96 95       	lsr	r25
    1a72:	87 95       	ror	r24
    1a74:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(4, 1, SEMICORCHEA);
    1a78:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a7c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a80:	56 95       	lsr	r21
    1a82:	47 95       	ror	r20
    1a84:	56 95       	lsr	r21
    1a86:	47 95       	ror	r20
    1a88:	61 e0       	ldi	r22, 0x01	; 1
    1a8a:	84 e0       	ldi	r24, 0x04	; 4
    1a8c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(SEMICORCHEA);
    1a90:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a94:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a98:	96 95       	lsr	r25
    1a9a:	87 95       	ror	r24
    1a9c:	96 95       	lsr	r25
    1a9e:	87 95       	ror	r24
    1aa0:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(0, 1, SEMICORCHEA);
    1aa4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1aa8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1aac:	56 95       	lsr	r21
    1aae:	47 95       	ror	r20
    1ab0:	56 95       	lsr	r21
    1ab2:	47 95       	ror	r20
    1ab4:	61 e0       	ldi	r22, 0x01	; 1
    1ab6:	80 e0       	ldi	r24, 0x00	; 0
    1ab8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(2, 1, SEMICORCHEA);
    1abc:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ac0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ac4:	56 95       	lsr	r21
    1ac6:	47 95       	ror	r20
    1ac8:	56 95       	lsr	r21
    1aca:	47 95       	ror	r20
    1acc:	61 e0       	ldi	r22, 0x01	; 1
    1ace:	82 e0       	ldi	r24, 0x02	; 2
    1ad0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(11, 0, SEMICORCHEA);
    1ad4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ad8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1adc:	56 95       	lsr	r21
    1ade:	47 95       	ror	r20
    1ae0:	56 95       	lsr	r21
    1ae2:	47 95       	ror	r20
    1ae4:	60 e0       	ldi	r22, 0x00	; 0
    1ae6:	8b e0       	ldi	r24, 0x0B	; 11
    1ae8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    1aec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1af0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1af4:	96 95       	lsr	r25
    1af6:	87 95       	ror	r24
    1af8:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(7, 1, CORCHEA);
	delay_ms_var(CORCHEA);
	play_note_ms(7, 0, CORCHEA);
	delay_ms_var(CORCHEA);
	
	for (uint8_t i = 0; i < 2; i++){
    1afc:	cf 5f       	subi	r28, 0xFF	; 255
    1afe:	c2 30       	cpi	r28, 0x02	; 2
    1b00:	08 f4       	brcc	.+2      	; 0x1b04 <c_SuperMario+0xee0>
    1b02:	ca ce       	rjmp	.-620    	; 0x1898 <c_SuperMario+0xc74>
    1b04:	c0 e0       	ldi	r28, 0x00	; 0
    1b06:	c1 c1       	rjmp	.+898    	; 0x1e8a <c_SuperMario+0x1266>
		delay_ms_var(CORCHEA);
	}
	
	for (uint8_t i = 0; i < 2; i++){
		//10
		play_note_ms(4, 1, SEMICORCHEA);
    1b08:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b0c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b10:	56 95       	lsr	r21
    1b12:	47 95       	ror	r20
    1b14:	56 95       	lsr	r21
    1b16:	47 95       	ror	r20
    1b18:	61 e0       	ldi	r22, 0x01	; 1
    1b1a:	84 e0       	ldi	r24, 0x04	; 4
    1b1c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, CORCHEA);
    1b20:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b24:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b28:	56 95       	lsr	r21
    1b2a:	47 95       	ror	r20
    1b2c:	61 e0       	ldi	r22, 0x01	; 1
    1b2e:	80 e0       	ldi	r24, 0x00	; 0
    1b30:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 0, SEMICORCHEA);
    1b34:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b38:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b3c:	56 95       	lsr	r21
    1b3e:	47 95       	ror	r20
    1b40:	56 95       	lsr	r21
    1b42:	47 95       	ror	r20
    1b44:	60 e0       	ldi	r22, 0x00	; 0
    1b46:	87 e0       	ldi	r24, 0x07	; 7
    1b48:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    1b4c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b50:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b54:	96 95       	lsr	r25
    1b56:	87 95       	ror	r24
    1b58:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(8, 0, CORCHEA);
    1b5c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b60:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b64:	56 95       	lsr	r21
    1b66:	47 95       	ror	r20
    1b68:	60 e0       	ldi	r22, 0x00	; 0
    1b6a:	88 e0       	ldi	r24, 0x08	; 8
    1b6c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
    1b70:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b74:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b78:	56 95       	lsr	r21
    1b7a:	47 95       	ror	r20
    1b7c:	56 95       	lsr	r21
    1b7e:	47 95       	ror	r20
    1b80:	60 e0       	ldi	r22, 0x00	; 0
    1b82:	89 e0       	ldi	r24, 0x09	; 9
    1b84:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, CORCHEA);
    1b88:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b8c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b90:	56 95       	lsr	r21
    1b92:	47 95       	ror	r20
    1b94:	61 e0       	ldi	r22, 0x01	; 1
    1b96:	85 e0       	ldi	r24, 0x05	; 5
    1b98:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
    1b9c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ba0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ba4:	56 95       	lsr	r21
    1ba6:	47 95       	ror	r20
    1ba8:	56 95       	lsr	r21
    1baa:	47 95       	ror	r20
    1bac:	61 e0       	ldi	r22, 0x01	; 1
    1bae:	85 e0       	ldi	r24, 0x05	; 5
    1bb0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, CORCHEA);
    1bb4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1bb8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1bbc:	56 95       	lsr	r21
    1bbe:	47 95       	ror	r20
    1bc0:	60 e0       	ldi	r22, 0x00	; 0
    1bc2:	89 e0       	ldi	r24, 0x09	; 9
    1bc4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    1bc8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1bcc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1bd0:	96 95       	lsr	r25
    1bd2:	87 95       	ror	r24
    1bd4:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		
		// 11
		play_note_ms(11, 0, SEMICORCHEA);
    1bd8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1bdc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1be0:	56 95       	lsr	r21
    1be2:	47 95       	ror	r20
    1be4:	56 95       	lsr	r21
    1be6:	47 95       	ror	r20
    1be8:	60 e0       	ldi	r22, 0x00	; 0
    1bea:	8b e0       	ldi	r24, 0x0B	; 11
    1bec:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 1, CORCHEA);
    1bf0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1bf4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1bf8:	56 95       	lsr	r21
    1bfa:	47 95       	ror	r20
    1bfc:	61 e0       	ldi	r22, 0x01	; 1
    1bfe:	89 e0       	ldi	r24, 0x09	; 9
    1c00:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 1, SEMICORCHEA);
    1c04:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c08:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c0c:	56 95       	lsr	r21
    1c0e:	47 95       	ror	r20
    1c10:	56 95       	lsr	r21
    1c12:	47 95       	ror	r20
    1c14:	61 e0       	ldi	r22, 0x01	; 1
    1c16:	89 e0       	ldi	r24, 0x09	; 9
    1c18:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 1, SEMICORCHEA);
    1c1c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c20:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c24:	56 95       	lsr	r21
    1c26:	47 95       	ror	r20
    1c28:	56 95       	lsr	r21
    1c2a:	47 95       	ror	r20
    1c2c:	61 e0       	ldi	r22, 0x01	; 1
    1c2e:	89 e0       	ldi	r24, 0x09	; 9
    1c30:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 1, CORCHEA);
    1c34:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c38:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c3c:	56 95       	lsr	r21
    1c3e:	47 95       	ror	r20
    1c40:	61 e0       	ldi	r22, 0x01	; 1
    1c42:	87 e0       	ldi	r24, 0x07	; 7
    1c44:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
    1c48:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c4c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c50:	56 95       	lsr	r21
    1c52:	47 95       	ror	r20
    1c54:	56 95       	lsr	r21
    1c56:	47 95       	ror	r20
    1c58:	61 e0       	ldi	r22, 0x01	; 1
    1c5a:	85 e0       	ldi	r24, 0x05	; 5
    1c5c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(4, 1, SEMICORCHEA);
    1c60:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c64:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c68:	56 95       	lsr	r21
    1c6a:	47 95       	ror	r20
    1c6c:	56 95       	lsr	r21
    1c6e:	47 95       	ror	r20
    1c70:	61 e0       	ldi	r22, 0x01	; 1
    1c72:	84 e0       	ldi	r24, 0x04	; 4
    1c74:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, CORCHEA);
    1c78:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c7c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c80:	56 95       	lsr	r21
    1c82:	47 95       	ror	r20
    1c84:	61 e0       	ldi	r22, 0x01	; 1
    1c86:	80 e0       	ldi	r24, 0x00	; 0
    1c88:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
    1c8c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c90:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c94:	56 95       	lsr	r21
    1c96:	47 95       	ror	r20
    1c98:	56 95       	lsr	r21
    1c9a:	47 95       	ror	r20
    1c9c:	60 e0       	ldi	r22, 0x00	; 0
    1c9e:	89 e0       	ldi	r24, 0x09	; 9
    1ca0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 0, CORCHEA);
    1ca4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ca8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1cac:	56 95       	lsr	r21
    1cae:	47 95       	ror	r20
    1cb0:	60 e0       	ldi	r22, 0x00	; 0
    1cb2:	87 e0       	ldi	r24, 0x07	; 7
    1cb4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    1cb8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1cbc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1cc0:	96 95       	lsr	r25
    1cc2:	87 95       	ror	r24
    1cc4:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		
		// 10
		play_note_ms(4, 1, SEMICORCHEA);
    1cc8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ccc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1cd0:	56 95       	lsr	r21
    1cd2:	47 95       	ror	r20
    1cd4:	56 95       	lsr	r21
    1cd6:	47 95       	ror	r20
    1cd8:	61 e0       	ldi	r22, 0x01	; 1
    1cda:	84 e0       	ldi	r24, 0x04	; 4
    1cdc:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, CORCHEA);
    1ce0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ce4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ce8:	56 95       	lsr	r21
    1cea:	47 95       	ror	r20
    1cec:	61 e0       	ldi	r22, 0x01	; 1
    1cee:	80 e0       	ldi	r24, 0x00	; 0
    1cf0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 0, SEMICORCHEA);
    1cf4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1cf8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1cfc:	56 95       	lsr	r21
    1cfe:	47 95       	ror	r20
    1d00:	56 95       	lsr	r21
    1d02:	47 95       	ror	r20
    1d04:	60 e0       	ldi	r22, 0x00	; 0
    1d06:	87 e0       	ldi	r24, 0x07	; 7
    1d08:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    1d0c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d10:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d14:	96 95       	lsr	r25
    1d16:	87 95       	ror	r24
    1d18:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(8, 0, CORCHEA);
    1d1c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d20:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d24:	56 95       	lsr	r21
    1d26:	47 95       	ror	r20
    1d28:	60 e0       	ldi	r22, 0x00	; 0
    1d2a:	88 e0       	ldi	r24, 0x08	; 8
    1d2c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
    1d30:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d34:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d38:	56 95       	lsr	r21
    1d3a:	47 95       	ror	r20
    1d3c:	56 95       	lsr	r21
    1d3e:	47 95       	ror	r20
    1d40:	60 e0       	ldi	r22, 0x00	; 0
    1d42:	89 e0       	ldi	r24, 0x09	; 9
    1d44:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, CORCHEA);
    1d48:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d4c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d50:	56 95       	lsr	r21
    1d52:	47 95       	ror	r20
    1d54:	61 e0       	ldi	r22, 0x01	; 1
    1d56:	85 e0       	ldi	r24, 0x05	; 5
    1d58:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
    1d5c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d60:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d64:	56 95       	lsr	r21
    1d66:	47 95       	ror	r20
    1d68:	56 95       	lsr	r21
    1d6a:	47 95       	ror	r20
    1d6c:	61 e0       	ldi	r22, 0x01	; 1
    1d6e:	85 e0       	ldi	r24, 0x05	; 5
    1d70:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, CORCHEA);
    1d74:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d78:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d7c:	56 95       	lsr	r21
    1d7e:	47 95       	ror	r20
    1d80:	60 e0       	ldi	r22, 0x00	; 0
    1d82:	89 e0       	ldi	r24, 0x09	; 9
    1d84:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    1d88:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d8c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d90:	96 95       	lsr	r25
    1d92:	87 95       	ror	r24
    1d94:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		
		// 12
		play_note_ms(11, 0, SEMICORCHEA);
    1d98:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d9c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1da0:	56 95       	lsr	r21
    1da2:	47 95       	ror	r20
    1da4:	56 95       	lsr	r21
    1da6:	47 95       	ror	r20
    1da8:	60 e0       	ldi	r22, 0x00	; 0
    1daa:	8b e0       	ldi	r24, 0x0B	; 11
    1dac:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, CORCHEA);
    1db0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1db4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1db8:	56 95       	lsr	r21
    1dba:	47 95       	ror	r20
    1dbc:	61 e0       	ldi	r22, 0x01	; 1
    1dbe:	85 e0       	ldi	r24, 0x05	; 5
    1dc0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
    1dc4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1dc8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1dcc:	56 95       	lsr	r21
    1dce:	47 95       	ror	r20
    1dd0:	56 95       	lsr	r21
    1dd2:	47 95       	ror	r20
    1dd4:	61 e0       	ldi	r22, 0x01	; 1
    1dd6:	85 e0       	ldi	r24, 0x05	; 5
    1dd8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
    1ddc:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1de0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1de4:	56 95       	lsr	r21
    1de6:	47 95       	ror	r20
    1de8:	56 95       	lsr	r21
    1dea:	47 95       	ror	r20
    1dec:	61 e0       	ldi	r22, 0x01	; 1
    1dee:	85 e0       	ldi	r24, 0x05	; 5
    1df0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(4, 1, CORCHEA);
    1df4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1df8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1dfc:	56 95       	lsr	r21
    1dfe:	47 95       	ror	r20
    1e00:	61 e0       	ldi	r22, 0x01	; 1
    1e02:	84 e0       	ldi	r24, 0x04	; 4
    1e04:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(2, 1, SEMICORCHEA);
    1e08:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e0c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e10:	56 95       	lsr	r21
    1e12:	47 95       	ror	r20
    1e14:	56 95       	lsr	r21
    1e16:	47 95       	ror	r20
    1e18:	61 e0       	ldi	r22, 0x01	; 1
    1e1a:	82 e0       	ldi	r24, 0x02	; 2
    1e1c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, SEMICORCHEA);
    1e20:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e24:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e28:	56 95       	lsr	r21
    1e2a:	47 95       	ror	r20
    1e2c:	56 95       	lsr	r21
    1e2e:	47 95       	ror	r20
    1e30:	61 e0       	ldi	r22, 0x01	; 1
    1e32:	80 e0       	ldi	r24, 0x00	; 0
    1e34:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(2, 0, CORCHEA);
    1e38:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e3c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e40:	56 95       	lsr	r21
    1e42:	47 95       	ror	r20
    1e44:	60 e0       	ldi	r22, 0x00	; 0
    1e46:	82 e0       	ldi	r24, 0x02	; 2
    1e48:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(2, 0, SEMICORCHEA);
    1e4c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e50:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e54:	56 95       	lsr	r21
    1e56:	47 95       	ror	r20
    1e58:	56 95       	lsr	r21
    1e5a:	47 95       	ror	r20
    1e5c:	60 e0       	ldi	r22, 0x00	; 0
    1e5e:	82 e0       	ldi	r24, 0x02	; 2
    1e60:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, CORCHEA);
    1e64:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e68:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e6c:	56 95       	lsr	r21
    1e6e:	47 95       	ror	r20
    1e70:	61 e0       	ldi	r22, 0x01	; 1
    1e72:	80 e0       	ldi	r24, 0x00	; 0
    1e74:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    1e78:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e7c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e80:	96 95       	lsr	r25
    1e82:	87 95       	ror	r24
    1e84:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(2, 1, SEMICORCHEA);
		play_note_ms(11, 0, SEMICORCHEA);
		delay_ms_var(CORCHEA);
	}
	
	for (uint8_t i = 0; i < 2; i++){
    1e88:	cf 5f       	subi	r28, 0xFF	; 255
    1e8a:	c2 30       	cpi	r28, 0x02	; 2
    1e8c:	08 f4       	brcc	.+2      	; 0x1e90 <c_SuperMario+0x126c>
    1e8e:	3c ce       	rjmp	.-904    	; 0x1b08 <c_SuperMario+0xee4>
		play_note_ms(0, 1, CORCHEA);
		delay_ms_var(CORCHEA);
	}
	
	// 13
	play_note_ms(0, 1, SEMICORCHEA);
    1e90:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1e94:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1e98:	56 95       	lsr	r21
    1e9a:	47 95       	ror	r20
    1e9c:	56 95       	lsr	r21
    1e9e:	47 95       	ror	r20
    1ea0:	61 e0       	ldi	r22, 0x01	; 1
    1ea2:	80 e0       	ldi	r24, 0x00	; 0
    1ea4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
    1ea8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1eac:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1eb0:	56 95       	lsr	r21
    1eb2:	47 95       	ror	r20
    1eb4:	56 95       	lsr	r21
    1eb6:	47 95       	ror	r20
    1eb8:	61 e0       	ldi	r22, 0x01	; 1
    1eba:	80 e0       	ldi	r24, 0x00	; 0
    1ebc:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    1ec0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ec4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ec8:	96 95       	lsr	r25
    1eca:	87 95       	ror	r24
    1ecc:	96 95       	lsr	r25
    1ece:	87 95       	ror	r24
    1ed0:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    1ed4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ed8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1edc:	56 95       	lsr	r21
    1ede:	47 95       	ror	r20
    1ee0:	56 95       	lsr	r21
    1ee2:	47 95       	ror	r20
    1ee4:	61 e0       	ldi	r22, 0x01	; 1
    1ee6:	80 e0       	ldi	r24, 0x00	; 0
    1ee8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    1eec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ef0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ef4:	96 95       	lsr	r25
    1ef6:	87 95       	ror	r24
    1ef8:	96 95       	lsr	r25
    1efa:	87 95       	ror	r24
    1efc:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    1f00:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f04:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f08:	56 95       	lsr	r21
    1f0a:	47 95       	ror	r20
    1f0c:	56 95       	lsr	r21
    1f0e:	47 95       	ror	r20
    1f10:	61 e0       	ldi	r22, 0x01	; 1
    1f12:	80 e0       	ldi	r24, 0x00	; 0
    1f14:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(2, 1, CORCHEA);
    1f18:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f1c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f20:	56 95       	lsr	r21
    1f22:	47 95       	ror	r20
    1f24:	61 e0       	ldi	r22, 0x01	; 1
    1f26:	82 e0       	ldi	r24, 0x02	; 2
    1f28:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 1, SEMICORCHEA);
    1f2c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f30:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f34:	56 95       	lsr	r21
    1f36:	47 95       	ror	r20
    1f38:	56 95       	lsr	r21
    1f3a:	47 95       	ror	r20
    1f3c:	61 e0       	ldi	r22, 0x01	; 1
    1f3e:	84 e0       	ldi	r24, 0x04	; 4
    1f40:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
    1f44:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f48:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f4c:	56 95       	lsr	r21
    1f4e:	47 95       	ror	r20
    1f50:	56 95       	lsr	r21
    1f52:	47 95       	ror	r20
    1f54:	61 e0       	ldi	r22, 0x01	; 1
    1f56:	80 e0       	ldi	r24, 0x00	; 0
    1f58:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    1f5c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f60:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f64:	96 95       	lsr	r25
    1f66:	87 95       	ror	r24
    1f68:	96 95       	lsr	r25
    1f6a:	87 95       	ror	r24
    1f6c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(9, 0, SEMICORCHEA);
    1f70:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f74:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f78:	56 95       	lsr	r21
    1f7a:	47 95       	ror	r20
    1f7c:	56 95       	lsr	r21
    1f7e:	47 95       	ror	r20
    1f80:	60 e0       	ldi	r22, 0x00	; 0
    1f82:	89 e0       	ldi	r24, 0x09	; 9
    1f84:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(7, 0, NEGRA);
    1f88:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f8c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f90:	60 e0       	ldi	r22, 0x00	; 0
    1f92:	87 e0       	ldi	r24, 0x07	; 7
    1f94:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
	// 14
	play_note_ms(0, 1, SEMICORCHEA);
    1f98:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f9c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1fa0:	56 95       	lsr	r21
    1fa2:	47 95       	ror	r20
    1fa4:	56 95       	lsr	r21
    1fa6:	47 95       	ror	r20
    1fa8:	61 e0       	ldi	r22, 0x01	; 1
    1faa:	80 e0       	ldi	r24, 0x00	; 0
    1fac:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
    1fb0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1fb4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1fb8:	56 95       	lsr	r21
    1fba:	47 95       	ror	r20
    1fbc:	56 95       	lsr	r21
    1fbe:	47 95       	ror	r20
    1fc0:	61 e0       	ldi	r22, 0x01	; 1
    1fc2:	80 e0       	ldi	r24, 0x00	; 0
    1fc4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    1fc8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1fcc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1fd0:	96 95       	lsr	r25
    1fd2:	87 95       	ror	r24
    1fd4:	96 95       	lsr	r25
    1fd6:	87 95       	ror	r24
    1fd8:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    1fdc:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1fe0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1fe4:	56 95       	lsr	r21
    1fe6:	47 95       	ror	r20
    1fe8:	56 95       	lsr	r21
    1fea:	47 95       	ror	r20
    1fec:	61 e0       	ldi	r22, 0x01	; 1
    1fee:	80 e0       	ldi	r24, 0x00	; 0
    1ff0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    1ff4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ff8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ffc:	96 95       	lsr	r25
    1ffe:	87 95       	ror	r24
    2000:	96 95       	lsr	r25
    2002:	87 95       	ror	r24
    2004:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    2008:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    200c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2010:	56 95       	lsr	r21
    2012:	47 95       	ror	r20
    2014:	56 95       	lsr	r21
    2016:	47 95       	ror	r20
    2018:	61 e0       	ldi	r22, 0x01	; 1
    201a:	80 e0       	ldi	r24, 0x00	; 0
    201c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(2, 1, SEMICORCHEA);
    2020:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2024:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2028:	56 95       	lsr	r21
    202a:	47 95       	ror	r20
    202c:	56 95       	lsr	r21
    202e:	47 95       	ror	r20
    2030:	61 e0       	ldi	r22, 0x01	; 1
    2032:	82 e0       	ldi	r24, 0x02	; 2
    2034:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 1, SEMICORCHEA);
    2038:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    203c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2040:	56 95       	lsr	r21
    2042:	47 95       	ror	r20
    2044:	56 95       	lsr	r21
    2046:	47 95       	ror	r20
    2048:	61 e0       	ldi	r22, 0x01	; 1
    204a:	84 e0       	ldi	r24, 0x04	; 4
    204c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(CORCHEA);
    2050:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2054:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2058:	96 95       	lsr	r25
    205a:	87 95       	ror	r24
    205c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(4, 1, SEMICORCHEA);
    2060:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2064:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2068:	56 95       	lsr	r21
    206a:	47 95       	ror	r20
    206c:	56 95       	lsr	r21
    206e:	47 95       	ror	r20
    2070:	61 e0       	ldi	r22, 0x01	; 1
    2072:	84 e0       	ldi	r24, 0x04	; 4
    2074:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(7, 1, SEMICORCHEA);
    2078:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    207c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2080:	56 95       	lsr	r21
    2082:	47 95       	ror	r20
    2084:	56 95       	lsr	r21
    2086:	47 95       	ror	r20
    2088:	61 e0       	ldi	r22, 0x01	; 1
    208a:	87 e0       	ldi	r24, 0x07	; 7
    208c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 2, SEMICORCHEA);
    2090:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2094:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2098:	56 95       	lsr	r21
    209a:	47 95       	ror	r20
    209c:	56 95       	lsr	r21
    209e:	47 95       	ror	r20
    20a0:	62 e0       	ldi	r22, 0x02	; 2
    20a2:	84 e0       	ldi	r24, 0x04	; 4
    20a4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 2, SEMICORCHEA);
    20a8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    20ac:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    20b0:	56 95       	lsr	r21
    20b2:	47 95       	ror	r20
    20b4:	56 95       	lsr	r21
    20b6:	47 95       	ror	r20
    20b8:	62 e0       	ldi	r22, 0x02	; 2
    20ba:	80 e0       	ldi	r24, 0x00	; 0
    20bc:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(2, 2, SEMICORCHEA);
    20c0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    20c4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    20c8:	56 95       	lsr	r21
    20ca:	47 95       	ror	r20
    20cc:	56 95       	lsr	r21
    20ce:	47 95       	ror	r20
    20d0:	62 e0       	ldi	r22, 0x02	; 2
    20d2:	82 e0       	ldi	r24, 0x02	; 2
    20d4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(7, 2, SEMICORCHEA);
    20d8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    20dc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    20e0:	56 95       	lsr	r21
    20e2:	47 95       	ror	r20
    20e4:	56 95       	lsr	r21
    20e6:	47 95       	ror	r20
    20e8:	62 e0       	ldi	r22, 0x02	; 2
    20ea:	87 e0       	ldi	r24, 0x07	; 7
    20ec:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
	// 13
	play_note_ms(0, 1, SEMICORCHEA);
    20f0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    20f4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    20f8:	56 95       	lsr	r21
    20fa:	47 95       	ror	r20
    20fc:	56 95       	lsr	r21
    20fe:	47 95       	ror	r20
    2100:	61 e0       	ldi	r22, 0x01	; 1
    2102:	80 e0       	ldi	r24, 0x00	; 0
    2104:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
    2108:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    210c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2110:	56 95       	lsr	r21
    2112:	47 95       	ror	r20
    2114:	56 95       	lsr	r21
    2116:	47 95       	ror	r20
    2118:	61 e0       	ldi	r22, 0x01	; 1
    211a:	80 e0       	ldi	r24, 0x00	; 0
    211c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    2120:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2124:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2128:	96 95       	lsr	r25
    212a:	87 95       	ror	r24
    212c:	96 95       	lsr	r25
    212e:	87 95       	ror	r24
    2130:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    2134:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2138:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    213c:	56 95       	lsr	r21
    213e:	47 95       	ror	r20
    2140:	56 95       	lsr	r21
    2142:	47 95       	ror	r20
    2144:	61 e0       	ldi	r22, 0x01	; 1
    2146:	80 e0       	ldi	r24, 0x00	; 0
    2148:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    214c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2150:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2154:	96 95       	lsr	r25
    2156:	87 95       	ror	r24
    2158:	96 95       	lsr	r25
    215a:	87 95       	ror	r24
    215c:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    2160:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2164:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2168:	56 95       	lsr	r21
    216a:	47 95       	ror	r20
    216c:	56 95       	lsr	r21
    216e:	47 95       	ror	r20
    2170:	61 e0       	ldi	r22, 0x01	; 1
    2172:	80 e0       	ldi	r24, 0x00	; 0
    2174:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(2, 1, CORCHEA);
    2178:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    217c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2180:	56 95       	lsr	r21
    2182:	47 95       	ror	r20
    2184:	61 e0       	ldi	r22, 0x01	; 1
    2186:	82 e0       	ldi	r24, 0x02	; 2
    2188:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 1, SEMICORCHEA);
    218c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2190:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2194:	56 95       	lsr	r21
    2196:	47 95       	ror	r20
    2198:	56 95       	lsr	r21
    219a:	47 95       	ror	r20
    219c:	61 e0       	ldi	r22, 0x01	; 1
    219e:	84 e0       	ldi	r24, 0x04	; 4
    21a0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(0, 1, SEMICORCHEA);
    21a4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    21a8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    21ac:	56 95       	lsr	r21
    21ae:	47 95       	ror	r20
    21b0:	56 95       	lsr	r21
    21b2:	47 95       	ror	r20
    21b4:	61 e0       	ldi	r22, 0x01	; 1
    21b6:	80 e0       	ldi	r24, 0x00	; 0
    21b8:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    21bc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    21c0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    21c4:	96 95       	lsr	r25
    21c6:	87 95       	ror	r24
    21c8:	96 95       	lsr	r25
    21ca:	87 95       	ror	r24
    21cc:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(9, 0, SEMICORCHEA);
    21d0:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    21d4:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    21d8:	56 95       	lsr	r21
    21da:	47 95       	ror	r20
    21dc:	56 95       	lsr	r21
    21de:	47 95       	ror	r20
    21e0:	60 e0       	ldi	r22, 0x00	; 0
    21e2:	89 e0       	ldi	r24, 0x09	; 9
    21e4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(7, 0, NEGRA);
    21e8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    21ec:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    21f0:	60 e0       	ldi	r22, 0x00	; 0
    21f2:	87 e0       	ldi	r24, 0x07	; 7
    21f4:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
	// 1
	play_note_ms(4, 1, SEMICORCHEA);
    21f8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    21fc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2200:	56 95       	lsr	r21
    2202:	47 95       	ror	r20
    2204:	56 95       	lsr	r21
    2206:	47 95       	ror	r20
    2208:	61 e0       	ldi	r22, 0x01	; 1
    220a:	84 e0       	ldi	r24, 0x04	; 4
    220c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 1, SEMICORCHEA);
    2210:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2214:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2218:	56 95       	lsr	r21
    221a:	47 95       	ror	r20
    221c:	56 95       	lsr	r21
    221e:	47 95       	ror	r20
    2220:	61 e0       	ldi	r22, 0x01	; 1
    2222:	84 e0       	ldi	r24, 0x04	; 4
    2224:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    2228:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    222c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2230:	96 95       	lsr	r25
    2232:	87 95       	ror	r24
    2234:	96 95       	lsr	r25
    2236:	87 95       	ror	r24
    2238:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(4, 1, SEMICORCHEA);
    223c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2240:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2244:	56 95       	lsr	r21
    2246:	47 95       	ror	r20
    2248:	56 95       	lsr	r21
    224a:	47 95       	ror	r20
    224c:	61 e0       	ldi	r22, 0x01	; 1
    224e:	84 e0       	ldi	r24, 0x04	; 4
    2250:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    2254:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2258:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    225c:	96 95       	lsr	r25
    225e:	87 95       	ror	r24
    2260:	96 95       	lsr	r25
    2262:	87 95       	ror	r24
    2264:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(0, 1, SEMICORCHEA);
    2268:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    226c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2270:	56 95       	lsr	r21
    2272:	47 95       	ror	r20
    2274:	56 95       	lsr	r21
    2276:	47 95       	ror	r20
    2278:	61 e0       	ldi	r22, 0x01	; 1
    227a:	80 e0       	ldi	r24, 0x00	; 0
    227c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 1, SEMICORCHEA);
    2280:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2284:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2288:	56 95       	lsr	r21
    228a:	47 95       	ror	r20
    228c:	56 95       	lsr	r21
    228e:	47 95       	ror	r20
    2290:	61 e0       	ldi	r22, 0x01	; 1
    2292:	84 e0       	ldi	r24, 0x04	; 4
    2294:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    2298:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    229c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    22a0:	96 95       	lsr	r25
    22a2:	87 95       	ror	r24
    22a4:	96 95       	lsr	r25
    22a6:	87 95       	ror	r24
    22a8:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(7, 1, SEMICORCHEA);
    22ac:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    22b0:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    22b4:	56 95       	lsr	r21
    22b6:	47 95       	ror	r20
    22b8:	56 95       	lsr	r21
    22ba:	47 95       	ror	r20
    22bc:	61 e0       	ldi	r22, 0x01	; 1
    22be:	87 e0       	ldi	r24, 0x07	; 7
    22c0:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(CORCHEA + SEMICORCHEA);
    22c4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    22c8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    22cc:	c9 01       	movw	r24, r18
    22ce:	96 95       	lsr	r25
    22d0:	87 95       	ror	r24
    22d2:	36 95       	lsr	r19
    22d4:	27 95       	ror	r18
    22d6:	36 95       	lsr	r19
    22d8:	27 95       	ror	r18
    22da:	82 0f       	add	r24, r18
    22dc:	93 1f       	adc	r25, r19
    22de:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(7, 0, CORCHEA);
    22e2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    22e6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    22ea:	56 95       	lsr	r21
    22ec:	47 95       	ror	r20
    22ee:	60 e0       	ldi	r22, 0x00	; 0
    22f0:	87 e0       	ldi	r24, 0x07	; 7
    22f2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(CORCHEA);
    22f6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    22fa:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    22fe:	96 95       	lsr	r25
    2300:	87 95       	ror	r24
    2302:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	
	for (uint8_t i = 0; i < 2; i++){
    2306:	c0 e0       	ldi	r28, 0x00	; 0
    2308:	c1 c1       	rjmp	.+898    	; 0x268c <c_SuperMario+0x1a68>
		//10
		play_note_ms(4, 1, SEMICORCHEA);
    230a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    230e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2312:	56 95       	lsr	r21
    2314:	47 95       	ror	r20
    2316:	56 95       	lsr	r21
    2318:	47 95       	ror	r20
    231a:	61 e0       	ldi	r22, 0x01	; 1
    231c:	84 e0       	ldi	r24, 0x04	; 4
    231e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, CORCHEA);
    2322:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2326:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    232a:	56 95       	lsr	r21
    232c:	47 95       	ror	r20
    232e:	61 e0       	ldi	r22, 0x01	; 1
    2330:	80 e0       	ldi	r24, 0x00	; 0
    2332:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 0, SEMICORCHEA);
    2336:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    233a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    233e:	56 95       	lsr	r21
    2340:	47 95       	ror	r20
    2342:	56 95       	lsr	r21
    2344:	47 95       	ror	r20
    2346:	60 e0       	ldi	r22, 0x00	; 0
    2348:	87 e0       	ldi	r24, 0x07	; 7
    234a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    234e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2352:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2356:	96 95       	lsr	r25
    2358:	87 95       	ror	r24
    235a:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(8, 0, CORCHEA);
    235e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2362:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2366:	56 95       	lsr	r21
    2368:	47 95       	ror	r20
    236a:	60 e0       	ldi	r22, 0x00	; 0
    236c:	88 e0       	ldi	r24, 0x08	; 8
    236e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
    2372:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2376:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    237a:	56 95       	lsr	r21
    237c:	47 95       	ror	r20
    237e:	56 95       	lsr	r21
    2380:	47 95       	ror	r20
    2382:	60 e0       	ldi	r22, 0x00	; 0
    2384:	89 e0       	ldi	r24, 0x09	; 9
    2386:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, CORCHEA);
    238a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    238e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2392:	56 95       	lsr	r21
    2394:	47 95       	ror	r20
    2396:	61 e0       	ldi	r22, 0x01	; 1
    2398:	85 e0       	ldi	r24, 0x05	; 5
    239a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
    239e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    23a2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    23a6:	56 95       	lsr	r21
    23a8:	47 95       	ror	r20
    23aa:	56 95       	lsr	r21
    23ac:	47 95       	ror	r20
    23ae:	61 e0       	ldi	r22, 0x01	; 1
    23b0:	85 e0       	ldi	r24, 0x05	; 5
    23b2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, CORCHEA);
    23b6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    23ba:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    23be:	56 95       	lsr	r21
    23c0:	47 95       	ror	r20
    23c2:	60 e0       	ldi	r22, 0x00	; 0
    23c4:	89 e0       	ldi	r24, 0x09	; 9
    23c6:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    23ca:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    23ce:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    23d2:	96 95       	lsr	r25
    23d4:	87 95       	ror	r24
    23d6:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		
		// 11
		play_note_ms(11, 0, SEMICORCHEA);
    23da:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    23de:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    23e2:	56 95       	lsr	r21
    23e4:	47 95       	ror	r20
    23e6:	56 95       	lsr	r21
    23e8:	47 95       	ror	r20
    23ea:	60 e0       	ldi	r22, 0x00	; 0
    23ec:	8b e0       	ldi	r24, 0x0B	; 11
    23ee:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 1, CORCHEA);
    23f2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    23f6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    23fa:	56 95       	lsr	r21
    23fc:	47 95       	ror	r20
    23fe:	61 e0       	ldi	r22, 0x01	; 1
    2400:	89 e0       	ldi	r24, 0x09	; 9
    2402:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 1, SEMICORCHEA);
    2406:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    240a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    240e:	56 95       	lsr	r21
    2410:	47 95       	ror	r20
    2412:	56 95       	lsr	r21
    2414:	47 95       	ror	r20
    2416:	61 e0       	ldi	r22, 0x01	; 1
    2418:	89 e0       	ldi	r24, 0x09	; 9
    241a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 1, SEMICORCHEA);
    241e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2422:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2426:	56 95       	lsr	r21
    2428:	47 95       	ror	r20
    242a:	56 95       	lsr	r21
    242c:	47 95       	ror	r20
    242e:	61 e0       	ldi	r22, 0x01	; 1
    2430:	89 e0       	ldi	r24, 0x09	; 9
    2432:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 1, CORCHEA);
    2436:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    243a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    243e:	56 95       	lsr	r21
    2440:	47 95       	ror	r20
    2442:	61 e0       	ldi	r22, 0x01	; 1
    2444:	87 e0       	ldi	r24, 0x07	; 7
    2446:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
    244a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    244e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2452:	56 95       	lsr	r21
    2454:	47 95       	ror	r20
    2456:	56 95       	lsr	r21
    2458:	47 95       	ror	r20
    245a:	61 e0       	ldi	r22, 0x01	; 1
    245c:	85 e0       	ldi	r24, 0x05	; 5
    245e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(4, 1, SEMICORCHEA);
    2462:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2466:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    246a:	56 95       	lsr	r21
    246c:	47 95       	ror	r20
    246e:	56 95       	lsr	r21
    2470:	47 95       	ror	r20
    2472:	61 e0       	ldi	r22, 0x01	; 1
    2474:	84 e0       	ldi	r24, 0x04	; 4
    2476:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, CORCHEA);
    247a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    247e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2482:	56 95       	lsr	r21
    2484:	47 95       	ror	r20
    2486:	61 e0       	ldi	r22, 0x01	; 1
    2488:	80 e0       	ldi	r24, 0x00	; 0
    248a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
    248e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2492:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2496:	56 95       	lsr	r21
    2498:	47 95       	ror	r20
    249a:	56 95       	lsr	r21
    249c:	47 95       	ror	r20
    249e:	60 e0       	ldi	r22, 0x00	; 0
    24a0:	89 e0       	ldi	r24, 0x09	; 9
    24a2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 0, CORCHEA);
    24a6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    24aa:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    24ae:	56 95       	lsr	r21
    24b0:	47 95       	ror	r20
    24b2:	60 e0       	ldi	r22, 0x00	; 0
    24b4:	87 e0       	ldi	r24, 0x07	; 7
    24b6:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    24ba:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    24be:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    24c2:	96 95       	lsr	r25
    24c4:	87 95       	ror	r24
    24c6:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		
		// 10
		play_note_ms(4, 1, SEMICORCHEA);
    24ca:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    24ce:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    24d2:	56 95       	lsr	r21
    24d4:	47 95       	ror	r20
    24d6:	56 95       	lsr	r21
    24d8:	47 95       	ror	r20
    24da:	61 e0       	ldi	r22, 0x01	; 1
    24dc:	84 e0       	ldi	r24, 0x04	; 4
    24de:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, CORCHEA);
    24e2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    24e6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    24ea:	56 95       	lsr	r21
    24ec:	47 95       	ror	r20
    24ee:	61 e0       	ldi	r22, 0x01	; 1
    24f0:	80 e0       	ldi	r24, 0x00	; 0
    24f2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(7, 0, SEMICORCHEA);
    24f6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    24fa:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    24fe:	56 95       	lsr	r21
    2500:	47 95       	ror	r20
    2502:	56 95       	lsr	r21
    2504:	47 95       	ror	r20
    2506:	60 e0       	ldi	r22, 0x00	; 0
    2508:	87 e0       	ldi	r24, 0x07	; 7
    250a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    250e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2512:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2516:	96 95       	lsr	r25
    2518:	87 95       	ror	r24
    251a:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		play_note_ms(8, 0, CORCHEA);
    251e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2522:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2526:	56 95       	lsr	r21
    2528:	47 95       	ror	r20
    252a:	60 e0       	ldi	r22, 0x00	; 0
    252c:	88 e0       	ldi	r24, 0x08	; 8
    252e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, SEMICORCHEA);
    2532:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2536:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    253a:	56 95       	lsr	r21
    253c:	47 95       	ror	r20
    253e:	56 95       	lsr	r21
    2540:	47 95       	ror	r20
    2542:	60 e0       	ldi	r22, 0x00	; 0
    2544:	89 e0       	ldi	r24, 0x09	; 9
    2546:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, CORCHEA);
    254a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    254e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2552:	56 95       	lsr	r21
    2554:	47 95       	ror	r20
    2556:	61 e0       	ldi	r22, 0x01	; 1
    2558:	85 e0       	ldi	r24, 0x05	; 5
    255a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
    255e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2562:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2566:	56 95       	lsr	r21
    2568:	47 95       	ror	r20
    256a:	56 95       	lsr	r21
    256c:	47 95       	ror	r20
    256e:	61 e0       	ldi	r22, 0x01	; 1
    2570:	85 e0       	ldi	r24, 0x05	; 5
    2572:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(9, 0, CORCHEA);
    2576:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    257a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    257e:	56 95       	lsr	r21
    2580:	47 95       	ror	r20
    2582:	60 e0       	ldi	r22, 0x00	; 0
    2584:	89 e0       	ldi	r24, 0x09	; 9
    2586:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    258a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    258e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2592:	96 95       	lsr	r25
    2594:	87 95       	ror	r24
    2596:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
		
		// 12
		play_note_ms(11, 0, SEMICORCHEA);
    259a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    259e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    25a2:	56 95       	lsr	r21
    25a4:	47 95       	ror	r20
    25a6:	56 95       	lsr	r21
    25a8:	47 95       	ror	r20
    25aa:	60 e0       	ldi	r22, 0x00	; 0
    25ac:	8b e0       	ldi	r24, 0x0B	; 11
    25ae:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, CORCHEA);
    25b2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    25b6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    25ba:	56 95       	lsr	r21
    25bc:	47 95       	ror	r20
    25be:	61 e0       	ldi	r22, 0x01	; 1
    25c0:	85 e0       	ldi	r24, 0x05	; 5
    25c2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
    25c6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    25ca:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    25ce:	56 95       	lsr	r21
    25d0:	47 95       	ror	r20
    25d2:	56 95       	lsr	r21
    25d4:	47 95       	ror	r20
    25d6:	61 e0       	ldi	r22, 0x01	; 1
    25d8:	85 e0       	ldi	r24, 0x05	; 5
    25da:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(5, 1, SEMICORCHEA);
    25de:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    25e2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    25e6:	56 95       	lsr	r21
    25e8:	47 95       	ror	r20
    25ea:	56 95       	lsr	r21
    25ec:	47 95       	ror	r20
    25ee:	61 e0       	ldi	r22, 0x01	; 1
    25f0:	85 e0       	ldi	r24, 0x05	; 5
    25f2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(4, 1, CORCHEA);
    25f6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    25fa:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    25fe:	56 95       	lsr	r21
    2600:	47 95       	ror	r20
    2602:	61 e0       	ldi	r22, 0x01	; 1
    2604:	84 e0       	ldi	r24, 0x04	; 4
    2606:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(2, 1, SEMICORCHEA);
    260a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    260e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2612:	56 95       	lsr	r21
    2614:	47 95       	ror	r20
    2616:	56 95       	lsr	r21
    2618:	47 95       	ror	r20
    261a:	61 e0       	ldi	r22, 0x01	; 1
    261c:	82 e0       	ldi	r24, 0x02	; 2
    261e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, SEMICORCHEA);
    2622:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2626:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    262a:	56 95       	lsr	r21
    262c:	47 95       	ror	r20
    262e:	56 95       	lsr	r21
    2630:	47 95       	ror	r20
    2632:	61 e0       	ldi	r22, 0x01	; 1
    2634:	80 e0       	ldi	r24, 0x00	; 0
    2636:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(2, 0, CORCHEA);
    263a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    263e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2642:	56 95       	lsr	r21
    2644:	47 95       	ror	r20
    2646:	60 e0       	ldi	r22, 0x00	; 0
    2648:	82 e0       	ldi	r24, 0x02	; 2
    264a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(2, 0, SEMICORCHEA);
    264e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2652:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2656:	56 95       	lsr	r21
    2658:	47 95       	ror	r20
    265a:	56 95       	lsr	r21
    265c:	47 95       	ror	r20
    265e:	60 e0       	ldi	r22, 0x00	; 0
    2660:	82 e0       	ldi	r24, 0x02	; 2
    2662:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		play_note_ms(0, 1, CORCHEA);
    2666:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    266a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    266e:	56 95       	lsr	r21
    2670:	47 95       	ror	r20
    2672:	61 e0       	ldi	r22, 0x01	; 1
    2674:	80 e0       	ldi	r24, 0x00	; 0
    2676:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
		delay_ms_var(CORCHEA);
    267a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    267e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2682:	96 95       	lsr	r25
    2684:	87 95       	ror	r24
    2686:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(7, 1, SEMICORCHEA);
	delay_ms_var(CORCHEA + SEMICORCHEA);
	play_note_ms(7, 0, CORCHEA);
	delay_ms_var(CORCHEA);
	
	for (uint8_t i = 0; i < 2; i++){
    268a:	cf 5f       	subi	r28, 0xFF	; 255
    268c:	c2 30       	cpi	r28, 0x02	; 2
    268e:	08 f4       	brcc	.+2      	; 0x2692 <c_SuperMario+0x1a6e>
    2690:	3c ce       	rjmp	.-904    	; 0x230a <c_SuperMario+0x16e6>
		play_note_ms(0, 1, CORCHEA);
		delay_ms_var(CORCHEA);
	}
	
	// Fin
	play_note_ms(0, 1, CORCHEA);
    2692:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2696:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    269a:	56 95       	lsr	r21
    269c:	47 95       	ror	r20
    269e:	61 e0       	ldi	r22, 0x01	; 1
    26a0:	80 e0       	ldi	r24, 0x00	; 0
    26a2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    26a6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    26aa:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    26ae:	96 95       	lsr	r25
    26b0:	87 95       	ror	r24
    26b2:	96 95       	lsr	r25
    26b4:	87 95       	ror	r24
    26b6:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(7, 0, CORCHEA);
    26ba:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    26be:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    26c2:	56 95       	lsr	r21
    26c4:	47 95       	ror	r20
    26c6:	60 e0       	ldi	r22, 0x00	; 0
    26c8:	87 e0       	ldi	r24, 0x07	; 7
    26ca:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	delay_ms_var(SEMICORCHEA);
    26ce:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    26d2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    26d6:	96 95       	lsr	r25
    26d8:	87 95       	ror	r24
    26da:	96 95       	lsr	r25
    26dc:	87 95       	ror	r24
    26de:	0e 94 ea 13 	call	0x27d4	; 0x27d4 <delay_ms_var>
	play_note_ms(4, 0, CORCHEA);
    26e2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    26e6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    26ea:	56 95       	lsr	r21
    26ec:	47 95       	ror	r20
    26ee:	60 e0       	ldi	r22, 0x00	; 0
    26f0:	84 e0       	ldi	r24, 0x04	; 4
    26f2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(9, 0, SEMICORCHEA);
    26f6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    26fa:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    26fe:	56 95       	lsr	r21
    2700:	47 95       	ror	r20
    2702:	56 95       	lsr	r21
    2704:	47 95       	ror	r20
    2706:	60 e0       	ldi	r22, 0x00	; 0
    2708:	89 e0       	ldi	r24, 0x09	; 9
    270a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(11, 0, CORCHEA);
    270e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2712:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2716:	56 95       	lsr	r21
    2718:	47 95       	ror	r20
    271a:	60 e0       	ldi	r22, 0x00	; 0
    271c:	8b e0       	ldi	r24, 0x0B	; 11
    271e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(9, 0, SEMICORCHEA);
    2722:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2726:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    272a:	56 95       	lsr	r21
    272c:	47 95       	ror	r20
    272e:	56 95       	lsr	r21
    2730:	47 95       	ror	r20
    2732:	60 e0       	ldi	r22, 0x00	; 0
    2734:	89 e0       	ldi	r24, 0x09	; 9
    2736:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(8, 0, SEMICORCHEA);
    273a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    273e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2742:	56 95       	lsr	r21
    2744:	47 95       	ror	r20
    2746:	56 95       	lsr	r21
    2748:	47 95       	ror	r20
    274a:	60 e0       	ldi	r22, 0x00	; 0
    274c:	88 e0       	ldi	r24, 0x08	; 8
    274e:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(10, 0, CORCHEA);
    2752:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2756:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    275a:	56 95       	lsr	r21
    275c:	47 95       	ror	r20
    275e:	60 e0       	ldi	r22, 0x00	; 0
    2760:	8a e0       	ldi	r24, 0x0A	; 10
    2762:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(8, 0, SEMICORCHEA);
    2766:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    276a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    276e:	56 95       	lsr	r21
    2770:	47 95       	ror	r20
    2772:	56 95       	lsr	r21
    2774:	47 95       	ror	r20
    2776:	60 e0       	ldi	r22, 0x00	; 0
    2778:	88 e0       	ldi	r24, 0x08	; 8
    277a:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 0, SEMISEMICORCHEA);
    277e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2782:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2786:	56 95       	lsr	r21
    2788:	47 95       	ror	r20
    278a:	56 95       	lsr	r21
    278c:	47 95       	ror	r20
    278e:	56 95       	lsr	r21
    2790:	47 95       	ror	r20
    2792:	60 e0       	ldi	r22, 0x00	; 0
    2794:	84 e0       	ldi	r24, 0x04	; 4
    2796:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(2, 0, SEMISEMICORCHEA);
    279a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    279e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    27a2:	56 95       	lsr	r21
    27a4:	47 95       	ror	r20
    27a6:	56 95       	lsr	r21
    27a8:	47 95       	ror	r20
    27aa:	56 95       	lsr	r21
    27ac:	47 95       	ror	r20
    27ae:	60 e0       	ldi	r22, 0x00	; 0
    27b0:	82 e0       	ldi	r24, 0x02	; 2
    27b2:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	play_note_ms(4, 0, NEGRA + CORCHEA);
    27b6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    27ba:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    27be:	ca 01       	movw	r24, r20
    27c0:	96 95       	lsr	r25
    27c2:	87 95       	ror	r24
    27c4:	48 0f       	add	r20, r24
    27c6:	59 1f       	adc	r21, r25
    27c8:	60 e0       	ldi	r22, 0x00	; 0
    27ca:	84 e0       	ldi	r24, 0x04	; 4
    27cc:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <play_note_ms>
	
		
}
    27d0:	cf 91       	pop	r28
    27d2:	08 95       	ret

000027d4 <delay_ms_var>:

#include "funciones.h"
#include "sonidos.h"

void delay_ms_var(uint16_t ms) {
	while (ms--) _delay_ms(1);
    27d4:	07 c0       	rjmp	.+14     	; 0x27e4 <delay_ms_var+0x10>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    27d6:	8f e9       	ldi	r24, 0x9F	; 159
    27d8:	9f e0       	ldi	r25, 0x0F	; 15
    27da:	01 97       	sbiw	r24, 0x01	; 1
    27dc:	f1 f7       	brne	.-4      	; 0x27da <delay_ms_var+0x6>
    27de:	00 c0       	rjmp	.+0      	; 0x27e0 <delay_ms_var+0xc>
    27e0:	00 00       	nop
    27e2:	c9 01       	movw	r24, r18
    27e4:	9c 01       	movw	r18, r24
    27e6:	21 50       	subi	r18, 0x01	; 1
    27e8:	31 09       	sbc	r19, r1
    27ea:	89 2b       	or	r24, r25
    27ec:	a1 f7       	brne	.-24     	; 0x27d6 <delay_ms_var+0x2>
}
    27ee:	08 95       	ret

000027f0 <play_note_ms>:

void play_note_ms(uint8_t idx, int8_t octave, uint16_t ms) {
    27f0:	cf 93       	push	r28
    27f2:	df 93       	push	r29
    27f4:	ea 01       	movw	r28, r20
	sound_note_on(idx, octave);
    27f6:	0e 94 06 16 	call	0x2c0c	; 0x2c0c <sound_note_on>
	while (ms--) _delay_ms(1);
    27fa:	07 c0       	rjmp	.+14     	; 0x280a <play_note_ms+0x1a>
    27fc:	ef e9       	ldi	r30, 0x9F	; 159
    27fe:	ff e0       	ldi	r31, 0x0F	; 15
    2800:	31 97       	sbiw	r30, 0x01	; 1
    2802:	f1 f7       	brne	.-4      	; 0x2800 <play_note_ms+0x10>
    2804:	00 c0       	rjmp	.+0      	; 0x2806 <play_note_ms+0x16>
    2806:	00 00       	nop
    2808:	ec 01       	movw	r28, r24
    280a:	ce 01       	movw	r24, r28
    280c:	01 97       	sbiw	r24, 0x01	; 1
    280e:	cd 2b       	or	r28, r29
    2810:	a9 f7       	brne	.-22     	; 0x27fc <play_note_ms+0xc>
	sound_off();
    2812:	0e 94 fd 15 	call	0x2bfa	; 0x2bfa <sound_off>
    2816:	8f e3       	ldi	r24, 0x3F	; 63
    2818:	9c e9       	ldi	r25, 0x9C	; 156
    281a:	01 97       	sbiw	r24, 0x01	; 1
    281c:	f1 f7       	brne	.-4      	; 0x281a <play_note_ms+0x2a>
    281e:	00 c0       	rjmp	.+0      	; 0x2820 <play_note_ms+0x30>
    2820:	00 00       	nop
	_delay_ms(10);
    2822:	df 91       	pop	r29
    2824:	cf 91       	pop	r28
    2826:	08 95       	ret

00002828 <hw_init_pins>:
#include "hw_pins.h"

void hw_init_pins(void) {
    // Audio pin como salida, inicialmente en 0 
    AUDIO_DDR  |=  (1<<AUDIO_PIN);
    2828:	84 b1       	in	r24, 0x04	; 4
    282a:	88 60       	ori	r24, 0x08	; 8
    282c:	84 b9       	out	0x04, r24	; 4
    AUDIO_PORT &= ~(1<<AUDIO_PIN);
    282e:	85 b1       	in	r24, 0x05	; 5
    2830:	87 7f       	andi	r24, 0xF7	; 247
    2832:	85 b9       	out	0x05, r24	; 5

    // Notas: entradas con pull-up
    NOTE_PORTC_DDR  &= ~NOTES_MASK_C;
    2834:	87 b1       	in	r24, 0x07	; 7
    2836:	80 7c       	andi	r24, 0xC0	; 192
    2838:	87 b9       	out	0x07, r24	; 7
    NOTE_PORTC_PORT |=  NOTES_MASK_C;
    283a:	88 b1       	in	r24, 0x08	; 8
    283c:	8f 63       	ori	r24, 0x3F	; 63
    283e:	88 b9       	out	0x08, r24	; 8

    NOTE_PORTD_DDR  &= ~NOTES_MASK_D;
    2840:	8a b1       	in	r24, 0x0a	; 10
    2842:	83 70       	andi	r24, 0x03	; 3
    2844:	8a b9       	out	0x0a, r24	; 10
    NOTE_PORTD_PORT |=  NOTES_MASK_D;
    2846:	8b b1       	in	r24, 0x0b	; 11
    2848:	8c 6f       	ori	r24, 0xFC	; 252
    284a:	8b b9       	out	0x0b, r24	; 11
    284c:	08 95       	ret

0000284e <main>:
#include "canciones.h"
#include "funciones.h"
#include "uart.h"
#include "piano.h"

int main(void) {
    284e:	cf 93       	push	r28
    2850:	df 93       	push	r29
    2852:	cd b7       	in	r28, 0x3d	; 61
    2854:	de b7       	in	r29, 0x3e	; 62
    2856:	a0 97       	sbiw	r28, 0x20	; 32
    2858:	0f b6       	in	r0, 0x3f	; 63
    285a:	f8 94       	cli
    285c:	de bf       	out	0x3e, r29	; 62
    285e:	0f be       	out	0x3f, r0	; 63
    2860:	cd bf       	out	0x3d, r28	; 61
	// ==== Inicializaciones ====
	hw_init_pins();           // pines de salida/audio, LEDs, etc.
    2862:	0e 94 14 14 	call	0x2828	; 0x2828 <hw_init_pins>
	sound_init_timer2();      // tu Timer2 configurado para generar sonido
    2866:	0e 94 e5 15 	call	0x2bca	; 0x2bca <sound_init_timer2>
	piano_init();             // inicializa las 12 teclas
    286a:	0e 94 ce 14 	call	0x299c	; 0x299c <piano_init>
	uart_init(9600);          // UART a 9600 baud
    286e:	60 e8       	ldi	r22, 0x80	; 128
    2870:	75 e2       	ldi	r23, 0x25	; 37
    2872:	80 e0       	ldi	r24, 0x00	; 0
    2874:	90 e0       	ldi	r25, 0x00	; 0
    2876:	0e 94 25 16 	call	0x2c4a	; 0x2c4a <uart_init>
    287a:	2f ef       	ldi	r18, 0xFF	; 255
    287c:	80 e7       	ldi	r24, 0x70	; 112
    287e:	92 e0       	ldi	r25, 0x02	; 2
    2880:	21 50       	subi	r18, 0x01	; 1
    2882:	80 40       	sbci	r24, 0x00	; 0
    2884:	90 40       	sbci	r25, 0x00	; 0
    2886:	e1 f7       	brne	.-8      	; 0x2880 <main+0x32>
    2888:	00 c0       	rjmp	.+0      	; 0x288a <main+0x3c>
    288a:	00 00       	nop
	_delay_ms(50);

	uart_write("Bienvenido al Piano via UART!\n");
    288c:	82 e0       	ldi	r24, 0x02	; 2
    288e:	91 e0       	ldi	r25, 0x01	; 1
    2890:	0e 94 5e 16 	call	0x2cbc	; 0x2cbc <uart_write>
	uart_write("Comandos disponibles:\n");
    2894:	81 e2       	ldi	r24, 0x21	; 33
    2896:	91 e0       	ldi	r25, 0x01	; 1
    2898:	0e 94 5e 16 	call	0x2cbc	; 0x2cbc <uart_write>
	uart_write("  C1   -> Reproducir Cancion 1\n");
    289c:	88 e3       	ldi	r24, 0x38	; 56
    289e:	91 e0       	ldi	r25, 0x01	; 1
    28a0:	0e 94 5e 16 	call	0x2cbc	; 0x2cbc <uart_write>
	uart_write("  C2   -> Reproducir Cancion 2\n");
    28a4:	88 e5       	ldi	r24, 0x58	; 88
    28a6:	91 e0       	ldi	r25, 0x01	; 1
    28a8:	0e 94 5e 16 	call	0x2cbc	; 0x2cbc <uart_write>
	uart_write("  PIANO-> Modo piano manual\n> ");
    28ac:	88 e7       	ldi	r24, 0x78	; 120
    28ae:	91 e0       	ldi	r25, 0x01	; 1
    28b0:	0e 94 5e 16 	call	0x2cbc	; 0x2cbc <uart_write>

	enum { MODE_PIANO = 0, MODE_SONG = 1 } mode = MODE_PIANO;
	uint8_t current_song = 0;
    28b4:	00 e0       	ldi	r16, 0x00	; 0
	uart_write("Comandos disponibles:\n");
	uart_write("  C1   -> Reproducir Cancion 1\n");
	uart_write("  C2   -> Reproducir Cancion 2\n");
	uart_write("  PIANO-> Modo piano manual\n> ");

	enum { MODE_PIANO = 0, MODE_SONG = 1 } mode = MODE_PIANO;
    28b6:	10 e0       	ldi	r17, 0x00	; 0
	uint8_t current_song = 0;
	char line[32];

	for (;;) {
		// Lectura del UART (por línea, termina con \n o \r)
		int8_t n = uart_readline(line, sizeof(line));
    28b8:	60 e2       	ldi	r22, 0x20	; 32
    28ba:	ce 01       	movw	r24, r28
    28bc:	01 96       	adiw	r24, 0x01	; 1
    28be:	0e 94 8d 16 	call	0x2d1a	; 0x2d1a <uart_readline>
		if (n > 0) {
    28c2:	18 16       	cp	r1, r24
    28c4:	bc f0       	brlt	.+46     	; 0x28f4 <main+0xa6>
    28c6:	4f c0       	rjmp	.+158    	; 0x2966 <main+0x118>
			// Pasar a mayúsculas
			for (int i = 0; i < n; ++i)
			if (line[i] >= 'a' && line[i] <= 'z') line[i] -= 32;
    28c8:	e1 e0       	ldi	r30, 0x01	; 1
    28ca:	f0 e0       	ldi	r31, 0x00	; 0
    28cc:	ec 0f       	add	r30, r28
    28ce:	fd 1f       	adc	r31, r29
    28d0:	e2 0f       	add	r30, r18
    28d2:	f3 1f       	adc	r31, r19
    28d4:	90 81       	ld	r25, Z
    28d6:	4f e9       	ldi	r20, 0x9F	; 159
    28d8:	49 0f       	add	r20, r25
    28da:	4a 31       	cpi	r20, 0x1A	; 26
    28dc:	40 f4       	brcc	.+16     	; 0x28ee <main+0xa0>
    28de:	e1 e0       	ldi	r30, 0x01	; 1
    28e0:	f0 e0       	ldi	r31, 0x00	; 0
    28e2:	ec 0f       	add	r30, r28
    28e4:	fd 1f       	adc	r31, r29
    28e6:	e2 0f       	add	r30, r18
    28e8:	f3 1f       	adc	r31, r19
    28ea:	90 52       	subi	r25, 0x20	; 32
    28ec:	90 83       	st	Z, r25
	for (;;) {
		// Lectura del UART (por línea, termina con \n o \r)
		int8_t n = uart_readline(line, sizeof(line));
		if (n > 0) {
			// Pasar a mayúsculas
			for (int i = 0; i < n; ++i)
    28ee:	2f 5f       	subi	r18, 0xFF	; 255
    28f0:	3f 4f       	sbci	r19, 0xFF	; 255
    28f2:	02 c0       	rjmp	.+4      	; 0x28f8 <main+0xaa>
    28f4:	20 e0       	ldi	r18, 0x00	; 0
    28f6:	30 e0       	ldi	r19, 0x00	; 0
    28f8:	48 2f       	mov	r20, r24
    28fa:	08 2e       	mov	r0, r24
    28fc:	00 0c       	add	r0, r0
    28fe:	55 0b       	sbc	r21, r21
    2900:	24 17       	cp	r18, r20
    2902:	35 07       	cpc	r19, r21
    2904:	0c f3       	brlt	.-62     	; 0x28c8 <main+0x7a>
			if (line[i] >= 'a' && line[i] <= 'z') line[i] -= 32;

			if (!strcmp(line, "C1")) {
    2906:	67 e9       	ldi	r22, 0x97	; 151
    2908:	71 e0       	ldi	r23, 0x01	; 1
    290a:	ce 01       	movw	r24, r28
    290c:	01 96       	adiw	r24, 0x01	; 1
    290e:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <strcmp>
    2912:	89 2b       	or	r24, r25
    2914:	39 f4       	brne	.+14     	; 0x2924 <main+0xd6>
				uart_write(">> Reproduciendo CANCION 1\n> ");
    2916:	8a e9       	ldi	r24, 0x9A	; 154
    2918:	91 e0       	ldi	r25, 0x01	; 1
    291a:	0e 94 5e 16 	call	0x2cbc	; 0x2cbc <uart_write>
				current_song = 1;
    291e:	01 e0       	ldi	r16, 0x01	; 1
				mode = MODE_SONG;
    2920:	11 e0       	ldi	r17, 0x01	; 1
    2922:	21 c0       	rjmp	.+66     	; 0x2966 <main+0x118>
				} else if (!strcmp(line, "C2")) {
    2924:	68 eb       	ldi	r22, 0xB8	; 184
    2926:	71 e0       	ldi	r23, 0x01	; 1
    2928:	ce 01       	movw	r24, r28
    292a:	01 96       	adiw	r24, 0x01	; 1
    292c:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <strcmp>
    2930:	89 2b       	or	r24, r25
    2932:	39 f4       	brne	.+14     	; 0x2942 <main+0xf4>
				uart_write(">> Reproduciendo CANCION 2\n> ");
    2934:	8b eb       	ldi	r24, 0xBB	; 187
    2936:	91 e0       	ldi	r25, 0x01	; 1
    2938:	0e 94 5e 16 	call	0x2cbc	; 0x2cbc <uart_write>
				current_song = 2;
    293c:	02 e0       	ldi	r16, 0x02	; 2
				mode = MODE_SONG;
    293e:	11 e0       	ldi	r17, 0x01	; 1
    2940:	12 c0       	rjmp	.+36     	; 0x2966 <main+0x118>
				} else if (!strcmp(line, "PIANO")) {
    2942:	69 ed       	ldi	r22, 0xD9	; 217
    2944:	71 e0       	ldi	r23, 0x01	; 1
    2946:	ce 01       	movw	r24, r28
    2948:	01 96       	adiw	r24, 0x01	; 1
    294a:	0e 94 37 17 	call	0x2e6e	; 0x2e6e <strcmp>
    294e:	89 2b       	or	r24, r25
    2950:	31 f4       	brne	.+12     	; 0x295e <main+0x110>
				uart_write(">> Modo PIANO activado\n> ");
    2952:	8f ed       	ldi	r24, 0xDF	; 223
    2954:	91 e0       	ldi	r25, 0x01	; 1
    2956:	0e 94 5e 16 	call	0x2cbc	; 0x2cbc <uart_write>
				mode = MODE_PIANO;
    295a:	10 e0       	ldi	r17, 0x00	; 0
    295c:	04 c0       	rjmp	.+8      	; 0x2966 <main+0x118>
				} else {
				uart_write("?? Comando invalido\n> ");
    295e:	89 ef       	ldi	r24, 0xF9	; 249
    2960:	91 e0       	ldi	r25, 0x01	; 1
    2962:	0e 94 5e 16 	call	0x2cbc	; 0x2cbc <uart_write>
			}
		}

		// Lógica principal
		if (mode == MODE_SONG) {
    2966:	11 30       	cpi	r17, 0x01	; 1
    2968:	81 f4       	brne	.+32     	; 0x298a <main+0x13c>
			// Canciones bloqueantes
			if (current_song == 1) {
    296a:	01 30       	cpi	r16, 0x01	; 1
    296c:	19 f4       	brne	.+6      	; 0x2974 <main+0x126>
				c_asesina();   // canción 1
    296e:	0e 94 6b 00 	call	0xd6	; 0xd6 <c_asesina>
    2972:	04 c0       	rjmp	.+8      	; 0x297c <main+0x12e>
				} else if (current_song == 2) {
    2974:	02 30       	cpi	r16, 0x02	; 2
    2976:	11 f4       	brne	.+4      	; 0x297c <main+0x12e>
				c_SuperMario();  // canción 2
    2978:	0e 94 12 06 	call	0xc24	; 0xc24 <c_SuperMario>
			} 

			// Cuando termina la canción, vuelve al modo piano
			current_song = 0;
			mode = MODE_PIANO;
			uart_write(">> Cancion finalizada. Modo PIANO.\n> ");
    297c:	80 e1       	ldi	r24, 0x10	; 16
    297e:	92 e0       	ldi	r25, 0x02	; 2
    2980:	0e 94 5e 16 	call	0x2cbc	; 0x2cbc <uart_write>
				} else if (current_song == 2) {
				c_SuperMario();  // canción 2
			} 

			// Cuando termina la canción, vuelve al modo piano
			current_song = 0;
    2984:	00 e0       	ldi	r16, 0x00	; 0
			mode = MODE_PIANO;
    2986:	10 e0       	ldi	r17, 0x00	; 0
    2988:	02 c0       	rjmp	.+4      	; 0x298e <main+0x140>
			uart_write(">> Cancion finalizada. Modo PIANO.\n> ");
		}
		else {
			// Modo Piano manual
			piano_mode_tick();   // lee teclas y toca la nota correspondiente
    298a:	0e 94 17 15 	call	0x2a2e	; 0x2a2e <piano_mode_tick>
    298e:	8f e9       	ldi	r24, 0x9F	; 159
    2990:	9f e0       	ldi	r25, 0x0F	; 15
    2992:	01 97       	sbiw	r24, 0x01	; 1
    2994:	f1 f7       	brne	.-4      	; 0x2992 <main+0x144>
    2996:	00 c0       	rjmp	.+0      	; 0x2998 <main+0x14a>
    2998:	00 00       	nop
    299a:	8e cf       	rjmp	.-228    	; 0x28b8 <main+0x6a>

0000299c <piano_init>:
}


void piano_init(void) {
	// Entradas + pull-ups
	K00_DDR &= ~(1<<K00_BIT); K00_PORT |= (1<<K00_BIT);
    299c:	87 b1       	in	r24, 0x07	; 7
    299e:	8e 7f       	andi	r24, 0xFE	; 254
    29a0:	87 b9       	out	0x07, r24	; 7
    29a2:	88 b1       	in	r24, 0x08	; 8
    29a4:	81 60       	ori	r24, 0x01	; 1
    29a6:	88 b9       	out	0x08, r24	; 8
	K01_DDR &= ~(1<<K01_BIT); K01_PORT |= (1<<K01_BIT);
    29a8:	87 b1       	in	r24, 0x07	; 7
    29aa:	8d 7f       	andi	r24, 0xFD	; 253
    29ac:	87 b9       	out	0x07, r24	; 7
    29ae:	88 b1       	in	r24, 0x08	; 8
    29b0:	82 60       	ori	r24, 0x02	; 2
    29b2:	88 b9       	out	0x08, r24	; 8
	K02_DDR &= ~(1<<K02_BIT); K02_PORT |= (1<<K02_BIT);
    29b4:	87 b1       	in	r24, 0x07	; 7
    29b6:	8b 7f       	andi	r24, 0xFB	; 251
    29b8:	87 b9       	out	0x07, r24	; 7
    29ba:	88 b1       	in	r24, 0x08	; 8
    29bc:	84 60       	ori	r24, 0x04	; 4
    29be:	88 b9       	out	0x08, r24	; 8
	K03_DDR &= ~(1<<K03_BIT); K03_PORT |= (1<<K03_BIT);
    29c0:	87 b1       	in	r24, 0x07	; 7
    29c2:	87 7f       	andi	r24, 0xF7	; 247
    29c4:	87 b9       	out	0x07, r24	; 7
    29c6:	88 b1       	in	r24, 0x08	; 8
    29c8:	88 60       	ori	r24, 0x08	; 8
    29ca:	88 b9       	out	0x08, r24	; 8
	K04_DDR &= ~(1<<K04_BIT); K04_PORT |= (1<<K04_BIT);
    29cc:	87 b1       	in	r24, 0x07	; 7
    29ce:	8f 7e       	andi	r24, 0xEF	; 239
    29d0:	87 b9       	out	0x07, r24	; 7
    29d2:	88 b1       	in	r24, 0x08	; 8
    29d4:	80 61       	ori	r24, 0x10	; 16
    29d6:	88 b9       	out	0x08, r24	; 8
	K05_DDR &= ~(1<<K05_BIT); K05_PORT |= (1<<K05_BIT);
    29d8:	87 b1       	in	r24, 0x07	; 7
    29da:	8f 7d       	andi	r24, 0xDF	; 223
    29dc:	87 b9       	out	0x07, r24	; 7
    29de:	88 b1       	in	r24, 0x08	; 8
    29e0:	80 62       	ori	r24, 0x20	; 32
    29e2:	88 b9       	out	0x08, r24	; 8
	K06_DDR &= ~(1<<K06_BIT); K06_PORT |= (1<<K06_BIT);
    29e4:	8a b1       	in	r24, 0x0a	; 10
    29e6:	8b 7f       	andi	r24, 0xFB	; 251
    29e8:	8a b9       	out	0x0a, r24	; 10
    29ea:	8b b1       	in	r24, 0x0b	; 11
    29ec:	84 60       	ori	r24, 0x04	; 4
    29ee:	8b b9       	out	0x0b, r24	; 11
	K07_DDR &= ~(1<<K07_BIT); K07_PORT |= (1<<K07_BIT);
    29f0:	8a b1       	in	r24, 0x0a	; 10
    29f2:	87 7f       	andi	r24, 0xF7	; 247
    29f4:	8a b9       	out	0x0a, r24	; 10
    29f6:	8b b1       	in	r24, 0x0b	; 11
    29f8:	88 60       	ori	r24, 0x08	; 8
    29fa:	8b b9       	out	0x0b, r24	; 11
	K08_DDR &= ~(1<<K08_BIT); K08_PORT |= (1<<K08_BIT);
    29fc:	8a b1       	in	r24, 0x0a	; 10
    29fe:	8f 7e       	andi	r24, 0xEF	; 239
    2a00:	8a b9       	out	0x0a, r24	; 10
    2a02:	8b b1       	in	r24, 0x0b	; 11
    2a04:	80 61       	ori	r24, 0x10	; 16
    2a06:	8b b9       	out	0x0b, r24	; 11
	K09_DDR &= ~(1<<K09_BIT); K09_PORT |= (1<<K09_BIT);
    2a08:	8a b1       	in	r24, 0x0a	; 10
    2a0a:	8f 7d       	andi	r24, 0xDF	; 223
    2a0c:	8a b9       	out	0x0a, r24	; 10
    2a0e:	8b b1       	in	r24, 0x0b	; 11
    2a10:	80 62       	ori	r24, 0x20	; 32
    2a12:	8b b9       	out	0x0b, r24	; 11
	K10_DDR &= ~(1<<K10_BIT); K10_PORT |= (1<<K10_BIT);
    2a14:	8a b1       	in	r24, 0x0a	; 10
    2a16:	8f 7b       	andi	r24, 0xBF	; 191
    2a18:	8a b9       	out	0x0a, r24	; 10
    2a1a:	8b b1       	in	r24, 0x0b	; 11
    2a1c:	80 64       	ori	r24, 0x40	; 64
    2a1e:	8b b9       	out	0x0b, r24	; 11
	K11_DDR &= ~(1<<K11_BIT); K11_PORT |= (1<<K11_BIT);
    2a20:	8a b1       	in	r24, 0x0a	; 10
    2a22:	8f 77       	andi	r24, 0x7F	; 127
    2a24:	8a b9       	out	0x0a, r24	; 10
    2a26:	8b b1       	in	r24, 0x0b	; 11
    2a28:	80 68       	ori	r24, 0x80	; 128
    2a2a:	8b b9       	out	0x0b, r24	; 11
    2a2c:	08 95       	ret

00002a2e <piano_mode_tick>:
}

void piano_mode_tick(void) {
	int8_t pressed = -1;

	for (uint8_t k = 0; k < 12; ++k) {
    2a2e:	80 e0       	ldi	r24, 0x00	; 0
    2a30:	8f c0       	rjmp	.+286    	; 0x2b50 <piano_mode_tick+0x122>
#define K11_PORT    PORTD
#define K11_BIT     7   // B

// Funciones internas
static inline uint8_t key_raw(uint8_t k) {
	switch (k) {
    2a32:	48 2f       	mov	r20, r24
    2a34:	50 e0       	ldi	r21, 0x00	; 0
    2a36:	4c 30       	cpi	r20, 0x0C	; 12
    2a38:	51 05       	cpc	r21, r1
    2a3a:	e0 f5       	brcc	.+120    	; 0x2ab4 <piano_mode_tick+0x86>
    2a3c:	fa 01       	movw	r30, r20
    2a3e:	ec 5c       	subi	r30, 0xCC	; 204
    2a40:	ff 4f       	sbci	r31, 0xFF	; 255
    2a42:	0c 94 31 17 	jmp	0x2e62	; 0x2e62 <__tablejump2__>
		case  0: return (K00_PINREG & (1<<K00_BIT)) ? 1:0;
    2a46:	96 b1       	in	r25, 0x06	; 6
    2a48:	91 70       	andi	r25, 0x01	; 1
    2a4a:	35 c0       	rjmp	.+106    	; 0x2ab6 <piano_mode_tick+0x88>
		case  1: return (K01_PINREG & (1<<K01_BIT)) ? 1:0;
    2a4c:	96 b1       	in	r25, 0x06	; 6
    2a4e:	96 95       	lsr	r25
    2a50:	91 70       	andi	r25, 0x01	; 1
    2a52:	31 c0       	rjmp	.+98     	; 0x2ab6 <piano_mode_tick+0x88>
		case  2: return (K02_PINREG & (1<<K02_BIT)) ? 1:0;
    2a54:	96 b1       	in	r25, 0x06	; 6
    2a56:	92 fb       	bst	r25, 2
    2a58:	99 27       	eor	r25, r25
    2a5a:	90 f9       	bld	r25, 0
    2a5c:	2c c0       	rjmp	.+88     	; 0x2ab6 <piano_mode_tick+0x88>
		case  3: return (K03_PINREG & (1<<K03_BIT)) ? 1:0;
    2a5e:	96 b1       	in	r25, 0x06	; 6
    2a60:	93 fb       	bst	r25, 3
    2a62:	99 27       	eor	r25, r25
    2a64:	90 f9       	bld	r25, 0
    2a66:	27 c0       	rjmp	.+78     	; 0x2ab6 <piano_mode_tick+0x88>
		case  4: return (K04_PINREG & (1<<K04_BIT)) ? 1:0;
    2a68:	96 b1       	in	r25, 0x06	; 6
    2a6a:	92 95       	swap	r25
    2a6c:	91 70       	andi	r25, 0x01	; 1
    2a6e:	23 c0       	rjmp	.+70     	; 0x2ab6 <piano_mode_tick+0x88>
		case  5: return (K05_PINREG & (1<<K05_BIT)) ? 1:0;
    2a70:	96 b1       	in	r25, 0x06	; 6
    2a72:	95 fb       	bst	r25, 5
    2a74:	99 27       	eor	r25, r25
    2a76:	90 f9       	bld	r25, 0
    2a78:	1e c0       	rjmp	.+60     	; 0x2ab6 <piano_mode_tick+0x88>
		case  6: return (K06_PINREG & (1<<K06_BIT)) ? 1:0;
    2a7a:	99 b1       	in	r25, 0x09	; 9
    2a7c:	92 fb       	bst	r25, 2
    2a7e:	99 27       	eor	r25, r25
    2a80:	90 f9       	bld	r25, 0
    2a82:	19 c0       	rjmp	.+50     	; 0x2ab6 <piano_mode_tick+0x88>
		case  7: return (K07_PINREG & (1<<K07_BIT)) ? 1:0;
    2a84:	99 b1       	in	r25, 0x09	; 9
    2a86:	93 fb       	bst	r25, 3
    2a88:	99 27       	eor	r25, r25
    2a8a:	90 f9       	bld	r25, 0
    2a8c:	14 c0       	rjmp	.+40     	; 0x2ab6 <piano_mode_tick+0x88>
		case  8: return (K08_PINREG & (1<<K08_BIT)) ? 1:0;
    2a8e:	99 b1       	in	r25, 0x09	; 9
    2a90:	92 95       	swap	r25
    2a92:	91 70       	andi	r25, 0x01	; 1
    2a94:	10 c0       	rjmp	.+32     	; 0x2ab6 <piano_mode_tick+0x88>
		case  9: return (K09_PINREG & (1<<K09_BIT)) ? 1:0;
    2a96:	99 b1       	in	r25, 0x09	; 9
    2a98:	95 fb       	bst	r25, 5
    2a9a:	99 27       	eor	r25, r25
    2a9c:	90 f9       	bld	r25, 0
    2a9e:	0b c0       	rjmp	.+22     	; 0x2ab6 <piano_mode_tick+0x88>
		case 10: return (K10_PINREG & (1<<K10_BIT)) ? 1:0;
    2aa0:	99 b1       	in	r25, 0x09	; 9
    2aa2:	96 fb       	bst	r25, 6
    2aa4:	99 27       	eor	r25, r25
    2aa6:	90 f9       	bld	r25, 0
    2aa8:	06 c0       	rjmp	.+12     	; 0x2ab6 <piano_mode_tick+0x88>
		case 11: return (K11_PINREG & (1<<K11_BIT)) ? 1:0;
    2aaa:	99 b1       	in	r25, 0x09	; 9
    2aac:	99 1f       	adc	r25, r25
    2aae:	99 27       	eor	r25, r25
    2ab0:	99 1f       	adc	r25, r25
    2ab2:	01 c0       	rjmp	.+2      	; 0x2ab6 <piano_mode_tick+0x88>
	}
	return 1;
    2ab4:	91 e0       	ldi	r25, 0x01	; 1

void piano_mode_tick(void) {
	int8_t pressed = -1;

	for (uint8_t k = 0; k < 12; ++k) {
		if (key_raw(k) == 0) { // tecla presionada (activo en LOW)
    2ab6:	91 11       	cpse	r25, r1
    2ab8:	4a c0       	rjmp	.+148    	; 0x2b4e <piano_mode_tick+0x120>
    2aba:	ef ef       	ldi	r30, 0xFF	; 255
    2abc:	fc e7       	ldi	r31, 0x7C	; 124
    2abe:	31 97       	sbiw	r30, 0x01	; 1
    2ac0:	f1 f7       	brne	.-4      	; 0x2abe <piano_mode_tick+0x90>
    2ac2:	00 c0       	rjmp	.+0      	; 0x2ac4 <piano_mode_tick+0x96>
    2ac4:	00 00       	nop
#define K11_PORT    PORTD
#define K11_BIT     7   // B

// Funciones internas
static inline uint8_t key_raw(uint8_t k) {
	switch (k) {
    2ac6:	48 2f       	mov	r20, r24
    2ac8:	50 e0       	ldi	r21, 0x00	; 0
    2aca:	4c 30       	cpi	r20, 0x0C	; 12
    2acc:	51 05       	cpc	r21, r1
    2ace:	e0 f5       	brcc	.+120    	; 0x2b48 <piano_mode_tick+0x11a>
    2ad0:	fa 01       	movw	r30, r20
    2ad2:	e0 5c       	subi	r30, 0xC0	; 192
    2ad4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ad6:	0c 94 31 17 	jmp	0x2e62	; 0x2e62 <__tablejump2__>
		case  0: return (K00_PINREG & (1<<K00_BIT)) ? 1:0;
    2ada:	96 b1       	in	r25, 0x06	; 6
    2adc:	91 70       	andi	r25, 0x01	; 1
    2ade:	35 c0       	rjmp	.+106    	; 0x2b4a <piano_mode_tick+0x11c>
		case  1: return (K01_PINREG & (1<<K01_BIT)) ? 1:0;
    2ae0:	96 b1       	in	r25, 0x06	; 6
    2ae2:	96 95       	lsr	r25
    2ae4:	91 70       	andi	r25, 0x01	; 1
    2ae6:	31 c0       	rjmp	.+98     	; 0x2b4a <piano_mode_tick+0x11c>
		case  2: return (K02_PINREG & (1<<K02_BIT)) ? 1:0;
    2ae8:	96 b1       	in	r25, 0x06	; 6
    2aea:	92 fb       	bst	r25, 2
    2aec:	99 27       	eor	r25, r25
    2aee:	90 f9       	bld	r25, 0
    2af0:	2c c0       	rjmp	.+88     	; 0x2b4a <piano_mode_tick+0x11c>
		case  3: return (K03_PINREG & (1<<K03_BIT)) ? 1:0;
    2af2:	96 b1       	in	r25, 0x06	; 6
    2af4:	93 fb       	bst	r25, 3
    2af6:	99 27       	eor	r25, r25
    2af8:	90 f9       	bld	r25, 0
    2afa:	27 c0       	rjmp	.+78     	; 0x2b4a <piano_mode_tick+0x11c>
		case  4: return (K04_PINREG & (1<<K04_BIT)) ? 1:0;
    2afc:	96 b1       	in	r25, 0x06	; 6
    2afe:	92 95       	swap	r25
    2b00:	91 70       	andi	r25, 0x01	; 1
    2b02:	23 c0       	rjmp	.+70     	; 0x2b4a <piano_mode_tick+0x11c>
		case  5: return (K05_PINREG & (1<<K05_BIT)) ? 1:0;
    2b04:	96 b1       	in	r25, 0x06	; 6
    2b06:	95 fb       	bst	r25, 5
    2b08:	99 27       	eor	r25, r25
    2b0a:	90 f9       	bld	r25, 0
    2b0c:	1e c0       	rjmp	.+60     	; 0x2b4a <piano_mode_tick+0x11c>
		case  6: return (K06_PINREG & (1<<K06_BIT)) ? 1:0;
    2b0e:	99 b1       	in	r25, 0x09	; 9
    2b10:	92 fb       	bst	r25, 2
    2b12:	99 27       	eor	r25, r25
    2b14:	90 f9       	bld	r25, 0
    2b16:	19 c0       	rjmp	.+50     	; 0x2b4a <piano_mode_tick+0x11c>
		case  7: return (K07_PINREG & (1<<K07_BIT)) ? 1:0;
    2b18:	99 b1       	in	r25, 0x09	; 9
    2b1a:	93 fb       	bst	r25, 3
    2b1c:	99 27       	eor	r25, r25
    2b1e:	90 f9       	bld	r25, 0
    2b20:	14 c0       	rjmp	.+40     	; 0x2b4a <piano_mode_tick+0x11c>
		case  8: return (K08_PINREG & (1<<K08_BIT)) ? 1:0;
    2b22:	99 b1       	in	r25, 0x09	; 9
    2b24:	92 95       	swap	r25
    2b26:	91 70       	andi	r25, 0x01	; 1
    2b28:	10 c0       	rjmp	.+32     	; 0x2b4a <piano_mode_tick+0x11c>
		case  9: return (K09_PINREG & (1<<K09_BIT)) ? 1:0;
    2b2a:	99 b1       	in	r25, 0x09	; 9
    2b2c:	95 fb       	bst	r25, 5
    2b2e:	99 27       	eor	r25, r25
    2b30:	90 f9       	bld	r25, 0
    2b32:	0b c0       	rjmp	.+22     	; 0x2b4a <piano_mode_tick+0x11c>
		case 10: return (K10_PINREG & (1<<K10_BIT)) ? 1:0;
    2b34:	99 b1       	in	r25, 0x09	; 9
    2b36:	96 fb       	bst	r25, 6
    2b38:	99 27       	eor	r25, r25
    2b3a:	90 f9       	bld	r25, 0
    2b3c:	06 c0       	rjmp	.+12     	; 0x2b4a <piano_mode_tick+0x11c>
		case 11: return (K11_PINREG & (1<<K11_BIT)) ? 1:0;
    2b3e:	99 b1       	in	r25, 0x09	; 9
    2b40:	99 1f       	adc	r25, r25
    2b42:	99 27       	eor	r25, r25
    2b44:	99 1f       	adc	r25, r25
    2b46:	01 c0       	rjmp	.+2      	; 0x2b4a <piano_mode_tick+0x11c>
	}
	return 1;
    2b48:	91 e0       	ldi	r25, 0x01	; 1
	int8_t pressed = -1;

	for (uint8_t k = 0; k < 12; ++k) {
		if (key_raw(k) == 0) { // tecla presionada (activo en LOW)
			_delay_ms(DEBOUNCE_MS);
			if (key_raw(k) == 0) { pressed = (int8_t)k; break; }
    2b4a:	99 23       	and	r25, r25
    2b4c:	29 f0       	breq	.+10     	; 0x2b58 <piano_mode_tick+0x12a>
}

void piano_mode_tick(void) {
	int8_t pressed = -1;

	for (uint8_t k = 0; k < 12; ++k) {
    2b4e:	8f 5f       	subi	r24, 0xFF	; 255
    2b50:	8c 30       	cpi	r24, 0x0C	; 12
    2b52:	08 f4       	brcc	.+2      	; 0x2b56 <piano_mode_tick+0x128>
    2b54:	6e cf       	rjmp	.-292    	; 0x2a32 <piano_mode_tick+0x4>
	K10_DDR &= ~(1<<K10_BIT); K10_PORT |= (1<<K10_BIT);
	K11_DDR &= ~(1<<K11_BIT); K11_PORT |= (1<<K11_BIT);
}

void piano_mode_tick(void) {
	int8_t pressed = -1;
    2b56:	8f ef       	ldi	r24, 0xFF	; 255
			_delay_ms(DEBOUNCE_MS);
			if (key_raw(k) == 0) { pressed = (int8_t)k; break; }
		}
	}

	if (pressed >= 0)
    2b58:	88 23       	and	r24, r24
    2b5a:	24 f0       	brlt	.+8      	; 0x2b64 <piano_mode_tick+0x136>
	sound_note_on((uint8_t)pressed, s_octave);
    2b5c:	60 e0       	ldi	r22, 0x00	; 0
    2b5e:	0e 94 06 16 	call	0x2c0c	; 0x2c0c <sound_note_on>
    2b62:	08 95       	ret
	else
	sound_off();
    2b64:	0e 94 fd 15 	call	0x2bfa	; 0x2bfa <sound_off>
    2b68:	08 95       	ret

00002b6a <ocr_with_octave>:
	126  // B4
};

// Ajuste de octava: subir 1 octava -> frecuencia x2 -> OCR pasa ~ a (OCR+1)/2 - 1
static uint8_t ocr_with_octave(uint8_t base, int8_t octave) {
	uint16_t val = (uint16_t)base + 1; // trabajar con (OCR+1)
    2b6a:	90 e0       	ldi	r25, 0x00	; 0
    2b6c:	01 96       	adiw	r24, 0x01	; 1
	if (octave > 0) {
    2b6e:	16 16       	cp	r1, r22
    2b70:	54 f0       	brlt	.+20     	; 0x2b86 <ocr_with_octave+0x1c>
    2b72:	0e c0       	rjmp	.+28     	; 0x2b90 <ocr_with_octave+0x26>
		while (octave--) val = (val > 1) ? (val >> 1) : 1; // divide por 2 con saturación mínima
    2b74:	82 30       	cpi	r24, 0x02	; 2
    2b76:	91 05       	cpc	r25, r1
    2b78:	18 f0       	brcs	.+6      	; 0x2b80 <ocr_with_octave+0x16>
    2b7a:	96 95       	lsr	r25
    2b7c:	87 95       	ror	r24
    2b7e:	02 c0       	rjmp	.+4      	; 0x2b84 <ocr_with_octave+0x1a>
    2b80:	81 e0       	ldi	r24, 0x01	; 1
    2b82:	90 e0       	ldi	r25, 0x00	; 0
    2b84:	62 2f       	mov	r22, r18
    2b86:	2f ef       	ldi	r18, 0xFF	; 255
    2b88:	26 0f       	add	r18, r22
    2b8a:	61 11       	cpse	r22, r1
    2b8c:	f3 cf       	rjmp	.-26     	; 0x2b74 <ocr_with_octave+0xa>
    2b8e:	10 c0       	rjmp	.+32     	; 0x2bb0 <ocr_with_octave+0x46>
		} else if (octave < 0) {
    2b90:	66 23       	and	r22, r22
    2b92:	74 f4       	brge	.+28     	; 0x2bb0 <ocr_with_octave+0x46>
    2b94:	03 c0       	rjmp	.+6      	; 0x2b9c <ocr_with_octave+0x32>
		while (octave++) val <<= 1; // multiplica por 2 (baja una octava)
    2b96:	88 0f       	add	r24, r24
    2b98:	99 1f       	adc	r25, r25
    2b9a:	62 2f       	mov	r22, r18
    2b9c:	21 e0       	ldi	r18, 0x01	; 1
    2b9e:	26 0f       	add	r18, r22
    2ba0:	61 11       	cpse	r22, r1
    2ba2:	f9 cf       	rjmp	.-14     	; 0x2b96 <ocr_with_octave+0x2c>
		if (val > 256) val = 256;   // saturar a 256 (OCR<=255)
    2ba4:	81 30       	cpi	r24, 0x01	; 1
    2ba6:	21 e0       	ldi	r18, 0x01	; 1
    2ba8:	92 07       	cpc	r25, r18
    2baa:	10 f0       	brcs	.+4      	; 0x2bb0 <ocr_with_octave+0x46>
    2bac:	80 e0       	ldi	r24, 0x00	; 0
    2bae:	91 e0       	ldi	r25, 0x01	; 1
	}
	uint16_t ocr = (val > 0) ? (val - 1) : 0;
    2bb0:	00 97       	sbiw	r24, 0x00	; 0
    2bb2:	11 f0       	breq	.+4      	; 0x2bb8 <ocr_with_octave+0x4e>
    2bb4:	01 97       	sbiw	r24, 0x01	; 1
    2bb6:	02 c0       	rjmp	.+4      	; 0x2bbc <ocr_with_octave+0x52>
    2bb8:	80 e0       	ldi	r24, 0x00	; 0
    2bba:	90 e0       	ldi	r25, 0x00	; 0
	if (ocr > 255) ocr = 255;
    2bbc:	8f 3f       	cpi	r24, 0xFF	; 255
    2bbe:	91 05       	cpc	r25, r1
    2bc0:	19 f0       	breq	.+6      	; 0x2bc8 <ocr_with_octave+0x5e>
    2bc2:	10 f0       	brcs	.+4      	; 0x2bc8 <ocr_with_octave+0x5e>
    2bc4:	8f ef       	ldi	r24, 0xFF	; 255
    2bc6:	90 e0       	ldi	r25, 0x00	; 0
	return (uint8_t)ocr;
}
    2bc8:	08 95       	ret

00002bca <sound_init_timer2>:

void sound_init_timer2(void) {
	// Pin OC2A (PB3) como salida ya lo dejaste en hw_init_pins()
	// Timer2 en CTC (WGM21=1), toggle OC2A (COM2A0=1)
	TCCR2A = 0;
    2bca:	e0 eb       	ldi	r30, 0xB0	; 176
    2bcc:	f0 e0       	ldi	r31, 0x00	; 0
    2bce:	10 82       	st	Z, r1
	TCCR2B = 0;
    2bd0:	a1 eb       	ldi	r26, 0xB1	; 177
    2bd2:	b0 e0       	ldi	r27, 0x00	; 0
    2bd4:	1c 92       	st	X, r1
	TCNT2  = 0;
    2bd6:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>

	// CTC: WGM21=1 (WGM22=0 en TCCR2B)
	TCCR2A |= (1<<WGM21);
    2bda:	80 81       	ld	r24, Z
    2bdc:	82 60       	ori	r24, 0x02	; 2
    2bde:	80 83       	st	Z, r24
	// Toggle OC2A: COM2A0=1 (no usamos COM2A1)
	TCCR2A |= (1<<COM2A0);
    2be0:	80 81       	ld	r24, Z
    2be2:	80 64       	ori	r24, 0x40	; 64
    2be4:	80 83       	st	Z, r24

	// Prescaler 128
	TCCR2B |= PRESC_BITS;
    2be6:	8c 91       	ld	r24, X
    2be8:	85 60       	ori	r24, 0x05	; 5
    2bea:	8c 93       	st	X, r24

	// Arrancamos en silencio (OCR2A arbitrario)
	OCR2A = ocr2a_base[9]; // A4 por defecto, pero OC2A quedará toggling igual
    2bec:	8d e8       	ldi	r24, 0x8D	; 141
    2bee:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	// Para silencio real, deshabilitamos el toggle hasta que suene algo:
	TCCR2A &= ~(1<<COM2A0); // OC2A desconectado => sin sonido hasta note_on
    2bf2:	80 81       	ld	r24, Z
    2bf4:	8f 7b       	andi	r24, 0xBF	; 191
    2bf6:	80 83       	st	Z, r24
    2bf8:	08 95       	ret

00002bfa <sound_off>:
}

void sound_off(void) {
	// Desconecta OC2A (pin en estado normal de PORTB)
	TCCR2A &= ~(1<<COM2A0);
    2bfa:	e0 eb       	ldi	r30, 0xB0	; 176
    2bfc:	f0 e0       	ldi	r31, 0x00	; 0
    2bfe:	80 81       	ld	r24, Z
    2c00:	8f 7b       	andi	r24, 0xBF	; 191
    2c02:	80 83       	st	Z, r24
	// Opcional: forzar pin bajo
	AUDIO_PORT &= ~(1<<AUDIO_PIN);
    2c04:	85 b1       	in	r24, 0x05	; 5
    2c06:	87 7f       	andi	r24, 0xF7	; 247
    2c08:	85 b9       	out	0x05, r24	; 5
    2c0a:	08 95       	ret

00002c0c <sound_note_on>:
}

void sound_note_on(uint8_t idx, int8_t octave) {
	if (idx >= 12) { sound_off(); return; }
    2c0c:	8c 30       	cpi	r24, 0x0C	; 12
    2c0e:	18 f0       	brcs	.+6      	; 0x2c16 <sound_note_on+0xa>
    2c10:	0e 94 fd 15 	call	0x2bfa	; 0x2bfa <sound_off>
    2c14:	08 95       	ret
	uint8_t ocr = ocr_with_octave(ocr2a_base[idx], octave);
    2c16:	e8 2f       	mov	r30, r24
    2c18:	f0 e0       	ldi	r31, 0x00	; 0
    2c1a:	ea 5c       	subi	r30, 0xCA	; 202
    2c1c:	fd 4f       	sbci	r31, 0xFD	; 253
    2c1e:	80 81       	ld	r24, Z
    2c20:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <ocr_with_octave>
	OCR2A = ocr;
    2c24:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>

	// Asegurar CTC y toggle por si alguien lo tocó
	TCCR2A &= ~((1<<COM2A1)); // COM2A1=0
    2c28:	e0 eb       	ldi	r30, 0xB0	; 176
    2c2a:	f0 e0       	ldi	r31, 0x00	; 0
    2c2c:	80 81       	ld	r24, Z
    2c2e:	8f 77       	andi	r24, 0x7F	; 127
    2c30:	80 83       	st	Z, r24
	TCCR2A |=  (1<<WGM21);    // CTC
    2c32:	80 81       	ld	r24, Z
    2c34:	82 60       	ori	r24, 0x02	; 2
    2c36:	80 83       	st	Z, r24
	TCCR2B &= ~(1<<WGM22);
    2c38:	a1 eb       	ldi	r26, 0xB1	; 177
    2c3a:	b0 e0       	ldi	r27, 0x00	; 0
    2c3c:	8c 91       	ld	r24, X
    2c3e:	87 7f       	andi	r24, 0xF7	; 247
    2c40:	8c 93       	st	X, r24

	// Habilitar toggle en OC2A (suena)
	TCCR2A |= (1<<COM2A0);
    2c42:	80 81       	ld	r24, Z
    2c44:	80 64       	ori	r24, 0x40	; 64
    2c46:	80 83       	st	Z, r24
    2c48:	08 95       	ret

00002c4a <uart_init>:
	while (*s) uart_putchar(*s++);
}

uint8_t uart_available(void) {
	return (uint8_t)((RX_BUF_SZ + rx_head - rx_tail) % RX_BUF_SZ);
}
    2c4a:	dc 01       	movw	r26, r24
    2c4c:	cb 01       	movw	r24, r22
    2c4e:	88 0f       	add	r24, r24
    2c50:	99 1f       	adc	r25, r25
    2c52:	aa 1f       	adc	r26, r26
    2c54:	bb 1f       	adc	r27, r27
    2c56:	88 0f       	add	r24, r24
    2c58:	99 1f       	adc	r25, r25
    2c5a:	aa 1f       	adc	r26, r26
    2c5c:	bb 1f       	adc	r27, r27
    2c5e:	9c 01       	movw	r18, r24
    2c60:	ad 01       	movw	r20, r26
    2c62:	22 0f       	add	r18, r18
    2c64:	33 1f       	adc	r19, r19
    2c66:	44 1f       	adc	r20, r20
    2c68:	55 1f       	adc	r21, r21
    2c6a:	22 0f       	add	r18, r18
    2c6c:	33 1f       	adc	r19, r19
    2c6e:	44 1f       	adc	r20, r20
    2c70:	55 1f       	adc	r21, r21
    2c72:	60 e0       	ldi	r22, 0x00	; 0
    2c74:	74 e2       	ldi	r23, 0x24	; 36
    2c76:	84 ef       	ldi	r24, 0xF4	; 244
    2c78:	90 e0       	ldi	r25, 0x00	; 0
    2c7a:	0e 94 0f 17 	call	0x2e1e	; 0x2e1e <__udivmodsi4>
    2c7e:	21 50       	subi	r18, 0x01	; 1
    2c80:	31 09       	sbc	r19, r1
    2c82:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    2c86:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    2c8a:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2c8e:	88 e9       	ldi	r24, 0x98	; 152
    2c90:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2c94:	86 e0       	ldi	r24, 0x06	; 6
    2c96:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
    2c9a:	78 94       	sei
    2c9c:	08 95       	ret

00002c9e <uart_putchar>:
    2c9e:	cf 93       	push	r28
    2ca0:	c8 2f       	mov	r28, r24
    2ca2:	8a 30       	cpi	r24, 0x0A	; 10
    2ca4:	19 f4       	brne	.+6      	; 0x2cac <uart_putchar+0xe>
    2ca6:	8d e0       	ldi	r24, 0x0D	; 13
    2ca8:	0e 94 4f 16 	call	0x2c9e	; 0x2c9e <uart_putchar>
    2cac:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2cb0:	85 ff       	sbrs	r24, 5
    2cb2:	fc cf       	rjmp	.-8      	; 0x2cac <uart_putchar+0xe>
    2cb4:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2cb8:	cf 91       	pop	r28
    2cba:	08 95       	ret

00002cbc <uart_write>:
    2cbc:	cf 93       	push	r28
    2cbe:	df 93       	push	r29
    2cc0:	ec 01       	movw	r28, r24
    2cc2:	03 c0       	rjmp	.+6      	; 0x2cca <uart_write+0xe>
    2cc4:	21 96       	adiw	r28, 0x01	; 1
    2cc6:	0e 94 4f 16 	call	0x2c9e	; 0x2c9e <uart_putchar>
    2cca:	88 81       	ld	r24, Y
    2ccc:	81 11       	cpse	r24, r1
    2cce:	fa cf       	rjmp	.-12     	; 0x2cc4 <uart_write+0x8>
    2cd0:	df 91       	pop	r29
    2cd2:	cf 91       	pop	r28
    2cd4:	08 95       	ret

00002cd6 <uart_getchar>:

int16_t uart_getchar(void) {
	if (rx_head == rx_tail) return -1;
    2cd6:	90 91 43 02 	lds	r25, 0x0243	; 0x800243 <rx_head>
    2cda:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <__data_end>
    2cde:	98 17       	cp	r25, r24
    2ce0:	c9 f0       	breq	.+50     	; 0x2d14 <uart_getchar+0x3e>
	uint8_t c = rx_buf[rx_tail];
    2ce2:	e0 91 42 02 	lds	r30, 0x0242	; 0x800242 <__data_end>
    2ce6:	f0 e0       	ldi	r31, 0x00	; 0
    2ce8:	ec 5b       	subi	r30, 0xBC	; 188
    2cea:	fd 4f       	sbci	r31, 0xFD	; 253
    2cec:	80 81       	ld	r24, Z
	rx_tail = (rx_tail + 1) % RX_BUF_SZ;
    2cee:	20 91 42 02 	lds	r18, 0x0242	; 0x800242 <__data_end>
    2cf2:	30 e0       	ldi	r19, 0x00	; 0
    2cf4:	2f 5f       	subi	r18, 0xFF	; 255
    2cf6:	3f 4f       	sbci	r19, 0xFF	; 255
    2cf8:	2f 73       	andi	r18, 0x3F	; 63
    2cfa:	30 78       	andi	r19, 0x80	; 128
    2cfc:	33 23       	and	r19, r19
    2cfe:	34 f4       	brge	.+12     	; 0x2d0c <uart_getchar+0x36>
    2d00:	21 50       	subi	r18, 0x01	; 1
    2d02:	31 09       	sbc	r19, r1
    2d04:	20 6c       	ori	r18, 0xC0	; 192
    2d06:	3f 6f       	ori	r19, 0xFF	; 255
    2d08:	2f 5f       	subi	r18, 0xFF	; 255
    2d0a:	3f 4f       	sbci	r19, 0xFF	; 255
    2d0c:	20 93 42 02 	sts	0x0242, r18	; 0x800242 <__data_end>
	return c;
    2d10:	90 e0       	ldi	r25, 0x00	; 0
    2d12:	08 95       	ret
uint8_t uart_available(void) {
	return (uint8_t)((RX_BUF_SZ + rx_head - rx_tail) % RX_BUF_SZ);
}

int16_t uart_getchar(void) {
	if (rx_head == rx_tail) return -1;
    2d14:	8f ef       	ldi	r24, 0xFF	; 255
    2d16:	9f ef       	ldi	r25, 0xFF	; 255
	uint8_t c = rx_buf[rx_tail];
	rx_tail = (rx_tail + 1) % RX_BUF_SZ;
	return c;
}
    2d18:	08 95       	ret

00002d1a <uart_readline>:

// Lee hasta '\n' o '\r'
int8_t uart_readline(char *dst, uint8_t maxlen) {
    2d1a:	0f 93       	push	r16
    2d1c:	1f 93       	push	r17
    2d1e:	cf 93       	push	r28
    2d20:	df 93       	push	r29
    2d22:	ac 01       	movw	r20, r24
	if (maxlen == 0) return 0;
    2d24:	66 23       	and	r22, r22
    2d26:	09 f4       	brne	.+2      	; 0x2d2a <uart_readline+0x10>
    2d28:	42 c0       	rjmp	.+132    	; 0x2dae <uart_readline+0x94>
	uint8_t n = 0;
	int16_t ch;
	// No bloquear: solo arma línea si ya llegó el terminador
	// 1) Mirar si hay '\n' en el buffer
	uint8_t i = rx_tail;
    2d2a:	20 91 42 02 	lds	r18, 0x0242	; 0x800242 <__data_end>
	uint8_t have_eol = 0;
	while (i != rx_head) {
    2d2e:	15 c0       	rjmp	.+42     	; 0x2d5a <uart_readline+0x40>
		uint8_t c = rx_buf[i];
    2d30:	30 e0       	ldi	r19, 0x00	; 0
    2d32:	f9 01       	movw	r30, r18
    2d34:	ec 5b       	subi	r30, 0xBC	; 188
    2d36:	fd 4f       	sbci	r31, 0xFD	; 253
    2d38:	90 81       	ld	r25, Z
		if (c == '\n' || c == '\r') { have_eol = 1; break; }
    2d3a:	9a 30       	cpi	r25, 0x0A	; 10
    2d3c:	a1 f0       	breq	.+40     	; 0x2d66 <uart_readline+0x4c>
    2d3e:	9d 30       	cpi	r25, 0x0D	; 13
    2d40:	a1 f0       	breq	.+40     	; 0x2d6a <uart_readline+0x50>
		i = (i + 1) % RX_BUF_SZ;
    2d42:	2f 5f       	subi	r18, 0xFF	; 255
    2d44:	3f 4f       	sbci	r19, 0xFF	; 255
    2d46:	2f 73       	andi	r18, 0x3F	; 63
    2d48:	30 78       	andi	r19, 0x80	; 128
    2d4a:	33 23       	and	r19, r19
    2d4c:	34 f4       	brge	.+12     	; 0x2d5a <uart_readline+0x40>
    2d4e:	21 50       	subi	r18, 0x01	; 1
    2d50:	31 09       	sbc	r19, r1
    2d52:	20 6c       	ori	r18, 0xC0	; 192
    2d54:	3f 6f       	ori	r19, 0xFF	; 255
    2d56:	2f 5f       	subi	r18, 0xFF	; 255
    2d58:	3f 4f       	sbci	r19, 0xFF	; 255
	int16_t ch;
	// No bloquear: solo arma línea si ya llegó el terminador
	// 1) Mirar si hay '\n' en el buffer
	uint8_t i = rx_tail;
	uint8_t have_eol = 0;
	while (i != rx_head) {
    2d5a:	90 91 43 02 	lds	r25, 0x0243	; 0x800243 <rx_head>
    2d5e:	29 13       	cpse	r18, r25
    2d60:	e7 cf       	rjmp	.-50     	; 0x2d30 <uart_readline+0x16>
	uint8_t n = 0;
	int16_t ch;
	// No bloquear: solo arma línea si ya llegó el terminador
	// 1) Mirar si hay '\n' en el buffer
	uint8_t i = rx_tail;
	uint8_t have_eol = 0;
    2d62:	80 e0       	ldi	r24, 0x00	; 0
    2d64:	03 c0       	rjmp	.+6      	; 0x2d6c <uart_readline+0x52>
	while (i != rx_head) {
		uint8_t c = rx_buf[i];
		if (c == '\n' || c == '\r') { have_eol = 1; break; }
    2d66:	81 e0       	ldi	r24, 0x01	; 1
    2d68:	01 c0       	rjmp	.+2      	; 0x2d6c <uart_readline+0x52>
    2d6a:	81 e0       	ldi	r24, 0x01	; 1
		i = (i + 1) % RX_BUF_SZ;
	}
	if (!have_eol) return 0;
    2d6c:	88 23       	and	r24, r24
    2d6e:	09 f1       	breq	.+66     	; 0x2db2 <uart_readline+0x98>
    2d70:	d6 2f       	mov	r29, r22
    2d72:	8a 01       	movw	r16, r20
    2d74:	c0 e0       	ldi	r28, 0x00	; 0
    2d76:	0d c0       	rjmp	.+26     	; 0x2d92 <uart_readline+0x78>

	// 2) Extraer hasta EOL
	while ((ch = uart_getchar()) != -1) {
		char c = (char)ch;
		if (c == '\n' || c == '\r') break;
    2d78:	8a 30       	cpi	r24, 0x0A	; 10
    2d7a:	89 f0       	breq	.+34     	; 0x2d9e <uart_readline+0x84>
    2d7c:	8d 30       	cpi	r24, 0x0D	; 13
    2d7e:	79 f0       	breq	.+30     	; 0x2d9e <uart_readline+0x84>
		if (n < (uint8_t)(maxlen - 1)) dst[n++] = c;   // evitar overflow
    2d80:	9f ef       	ldi	r25, 0xFF	; 255
    2d82:	9d 0f       	add	r25, r29
    2d84:	c9 17       	cp	r28, r25
    2d86:	28 f4       	brcc	.+10     	; 0x2d92 <uart_readline+0x78>
    2d88:	f8 01       	movw	r30, r16
    2d8a:	ec 0f       	add	r30, r28
    2d8c:	f1 1d       	adc	r31, r1
    2d8e:	80 83       	st	Z, r24
    2d90:	cf 5f       	subi	r28, 0xFF	; 255
		i = (i + 1) % RX_BUF_SZ;
	}
	if (!have_eol) return 0;

	// 2) Extraer hasta EOL
	while ((ch = uart_getchar()) != -1) {
    2d92:	0e 94 6b 16 	call	0x2cd6	; 0x2cd6 <uart_getchar>
    2d96:	8f 3f       	cpi	r24, 0xFF	; 255
    2d98:	2f ef       	ldi	r18, 0xFF	; 255
    2d9a:	92 07       	cpc	r25, r18
    2d9c:	69 f7       	brne	.-38     	; 0x2d78 <uart_readline+0x5e>
		char c = (char)ch;
		if (c == '\n' || c == '\r') break;
		if (n < (uint8_t)(maxlen - 1)) dst[n++] = c;   // evitar overflow
	}
	dst[n] = '\0';
    2d9e:	f8 01       	movw	r30, r16
    2da0:	ec 0f       	add	r30, r28
    2da2:	f1 1d       	adc	r31, r1
    2da4:	10 82       	st	Z, r1
	// "Comer" duplicado si vino \r\n
	int16_t peek = uart_getchar();
    2da6:	0e 94 6b 16 	call	0x2cd6	; 0x2cd6 <uart_getchar>
	if (peek != -1) {
		char p = (char)peek;
		if (!(p == '\n' || p == '\r')) {
		}
	}
	return (int8_t)n;
    2daa:	8c 2f       	mov	r24, r28
    2dac:	03 c0       	rjmp	.+6      	; 0x2db4 <uart_readline+0x9a>
	return c;
}

// Lee hasta '\n' o '\r'
int8_t uart_readline(char *dst, uint8_t maxlen) {
	if (maxlen == 0) return 0;
    2dae:	80 e0       	ldi	r24, 0x00	; 0
    2db0:	01 c0       	rjmp	.+2      	; 0x2db4 <uart_readline+0x9a>
	while (i != rx_head) {
		uint8_t c = rx_buf[i];
		if (c == '\n' || c == '\r') { have_eol = 1; break; }
		i = (i + 1) % RX_BUF_SZ;
	}
	if (!have_eol) return 0;
    2db2:	80 e0       	ldi	r24, 0x00	; 0
		char p = (char)peek;
		if (!(p == '\n' || p == '\r')) {
		}
	}
	return (int8_t)n;
}
    2db4:	df 91       	pop	r29
    2db6:	cf 91       	pop	r28
    2db8:	1f 91       	pop	r17
    2dba:	0f 91       	pop	r16
    2dbc:	08 95       	ret

00002dbe <__vector_18>:

ISR(USART_RX_vect) {
    2dbe:	1f 92       	push	r1
    2dc0:	0f 92       	push	r0
    2dc2:	0f b6       	in	r0, 0x3f	; 63
    2dc4:	0f 92       	push	r0
    2dc6:	11 24       	eor	r1, r1
    2dc8:	2f 93       	push	r18
    2dca:	3f 93       	push	r19
    2dcc:	8f 93       	push	r24
    2dce:	9f 93       	push	r25
    2dd0:	ef 93       	push	r30
    2dd2:	ff 93       	push	r31
	uint8_t d = UDR0;
    2dd4:	30 91 c6 00 	lds	r19, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	uint8_t next = (rx_head + 1) % RX_BUF_SZ;
    2dd8:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <rx_head>
    2ddc:	90 e0       	ldi	r25, 0x00	; 0
    2dde:	01 96       	adiw	r24, 0x01	; 1
    2de0:	8f 73       	andi	r24, 0x3F	; 63
    2de2:	90 78       	andi	r25, 0x80	; 128
    2de4:	99 23       	and	r25, r25
    2de6:	24 f4       	brge	.+8      	; 0x2df0 <__vector_18+0x32>
    2de8:	01 97       	sbiw	r24, 0x01	; 1
    2dea:	80 6c       	ori	r24, 0xC0	; 192
    2dec:	9f 6f       	ori	r25, 0xFF	; 255
    2dee:	01 96       	adiw	r24, 0x01	; 1
	if (next != rx_tail) {                 // si hay espacio
    2df0:	20 91 42 02 	lds	r18, 0x0242	; 0x800242 <__data_end>
    2df4:	28 17       	cp	r18, r24
    2df6:	41 f0       	breq	.+16     	; 0x2e08 <__vector_18+0x4a>
		rx_buf[rx_head] = d;
    2df8:	e0 91 43 02 	lds	r30, 0x0243	; 0x800243 <rx_head>
    2dfc:	f0 e0       	ldi	r31, 0x00	; 0
    2dfe:	ec 5b       	subi	r30, 0xBC	; 188
    2e00:	fd 4f       	sbci	r31, 0xFD	; 253
    2e02:	30 83       	st	Z, r19
		rx_head = next;
    2e04:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <rx_head>
	} // si no hay espacio, se descarta el byte (simple y suficiente para este uso)
}
    2e08:	ff 91       	pop	r31
    2e0a:	ef 91       	pop	r30
    2e0c:	9f 91       	pop	r25
    2e0e:	8f 91       	pop	r24
    2e10:	3f 91       	pop	r19
    2e12:	2f 91       	pop	r18
    2e14:	0f 90       	pop	r0
    2e16:	0f be       	out	0x3f, r0	; 63
    2e18:	0f 90       	pop	r0
    2e1a:	1f 90       	pop	r1
    2e1c:	18 95       	reti

00002e1e <__udivmodsi4>:
    2e1e:	a1 e2       	ldi	r26, 0x21	; 33
    2e20:	1a 2e       	mov	r1, r26
    2e22:	aa 1b       	sub	r26, r26
    2e24:	bb 1b       	sub	r27, r27
    2e26:	fd 01       	movw	r30, r26
    2e28:	0d c0       	rjmp	.+26     	; 0x2e44 <__udivmodsi4_ep>

00002e2a <__udivmodsi4_loop>:
    2e2a:	aa 1f       	adc	r26, r26
    2e2c:	bb 1f       	adc	r27, r27
    2e2e:	ee 1f       	adc	r30, r30
    2e30:	ff 1f       	adc	r31, r31
    2e32:	a2 17       	cp	r26, r18
    2e34:	b3 07       	cpc	r27, r19
    2e36:	e4 07       	cpc	r30, r20
    2e38:	f5 07       	cpc	r31, r21
    2e3a:	20 f0       	brcs	.+8      	; 0x2e44 <__udivmodsi4_ep>
    2e3c:	a2 1b       	sub	r26, r18
    2e3e:	b3 0b       	sbc	r27, r19
    2e40:	e4 0b       	sbc	r30, r20
    2e42:	f5 0b       	sbc	r31, r21

00002e44 <__udivmodsi4_ep>:
    2e44:	66 1f       	adc	r22, r22
    2e46:	77 1f       	adc	r23, r23
    2e48:	88 1f       	adc	r24, r24
    2e4a:	99 1f       	adc	r25, r25
    2e4c:	1a 94       	dec	r1
    2e4e:	69 f7       	brne	.-38     	; 0x2e2a <__udivmodsi4_loop>
    2e50:	60 95       	com	r22
    2e52:	70 95       	com	r23
    2e54:	80 95       	com	r24
    2e56:	90 95       	com	r25
    2e58:	9b 01       	movw	r18, r22
    2e5a:	ac 01       	movw	r20, r24
    2e5c:	bd 01       	movw	r22, r26
    2e5e:	cf 01       	movw	r24, r30
    2e60:	08 95       	ret

00002e62 <__tablejump2__>:
    2e62:	ee 0f       	add	r30, r30
    2e64:	ff 1f       	adc	r31, r31
    2e66:	05 90       	lpm	r0, Z+
    2e68:	f4 91       	lpm	r31, Z
    2e6a:	e0 2d       	mov	r30, r0
    2e6c:	09 94       	ijmp

00002e6e <strcmp>:
    2e6e:	fb 01       	movw	r30, r22
    2e70:	dc 01       	movw	r26, r24
    2e72:	8d 91       	ld	r24, X+
    2e74:	01 90       	ld	r0, Z+
    2e76:	80 19       	sub	r24, r0
    2e78:	01 10       	cpse	r0, r1
    2e7a:	d9 f3       	breq	.-10     	; 0x2e72 <strcmp+0x4>
    2e7c:	99 0b       	sbc	r25, r25
    2e7e:	08 95       	ret

00002e80 <_exit>:
    2e80:	f8 94       	cli

00002e82 <__stop_program>:
    2e82:	ff cf       	rjmp	.-2      	; 0x2e82 <__stop_program>
