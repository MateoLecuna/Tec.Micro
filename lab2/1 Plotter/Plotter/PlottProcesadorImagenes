import serial
import time
from PIL import Image

# --- CONFIG ---
image_path = 'C:/Users/UTEC-5695/Desktop/CNC/Manzana.png'
resize_to = None  # None = keep original size
serial_port = "COM11"  # your Arduino port
baud_rate = 9600  # SLOW AND SAFE
delay_between_chars = 0.01  # seconds, tweak if needed
# ----------------

# --- SETUP SERIAL ---
ser = serial.Serial(serial_port, baud_rate, timeout=1)
time.sleep(5)  # give Arduino time to reset
input("Press Enter to start sending image...")

print("üñ®Ô∏è Sending image to CNC (snake pattern)...")

# --- LOAD IMAGE ---
img = Image.open(image_path).convert("L")
if resize_to:
    img = img.resize(resize_to)
width, height = img.size
pixels = list(img.getdata())


# --- GRAYSCALE ‚Üí SHADE (0‚Äì7) ---
def shade_from_gray(value):
    return 7 - int(value / 32)  # invert mapping (dark=7, bright=0)


# --- BUILD SNAKE DATA STREAM ---
data_stream = ""
for y in range(height):
    if y % 2 == 0:
        # even rows ‚Üí left to right
        row = [str(shade_from_gray(pixels[y * width + x])) for x in range(width)]
    else:
        # odd rows ‚Üí right to left (snake pattern)
        row = [str(shade_from_gray(pixels[y * width + (width - 1 - x)])) for x in range(width)]

    data_stream += ''.join(row) + '8'  # 8 = newline
data_stream += '9'  # 9 = end of image

# --- SEND WITH HANDSHAKE ---
for ch in data_stream:
    # Wait for Arduino ready signal
    while True:
        line = ser.readline().decode(errors="ignore").strip()
        if line == "1":
            break
    time.sleep(delay_between_chars)
    ser.write(ch.encode())
    print(f"Sent: {ch}")

print("‚úÖ Image transmission complete!")
ser.close()
